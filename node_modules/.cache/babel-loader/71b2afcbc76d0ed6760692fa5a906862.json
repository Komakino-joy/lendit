{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\bryan.alvarez\\\\Documents\\\\webdev\\\\git\\\\lendit\\\\lendit\\\\src\\\\pages\\\\signin\\\\signin.component.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport { isSignedIn } from \"../../redux/site-member/site-member.selectors\";\nimport { handleMemberSignin } from \"../../redux/site-member/site-member.actions\";\nimport { SignInBody, SignInArticle, SignInMain, SignInFieldSet, SignInLegend, SignInLabel, SignInInput, SignInSubmit, RegisterContainer, RegisterLink, Email, Password } from \"./signin.styles\";\n\nconst SigninPage = ({\n  history,\n  signIn\n}) => {\n  _s();\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const onEmailChange = event => {\n    setEmail(event.target.value);\n  };\n\n  const onPasswordChange = event => {\n    setPassword(event.target.value);\n  };\n\n  const onSubmitSignIn = () => {\n    fetch(\"https://lendit-api.herokuapp.com/signin\", {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email: email,\n        password: password\n      })\n    }).then(response => response.json()).then(member => {\n      if (member.id) {\n        signIn(member.id);\n        history.push(\"/home\");\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(SignInBody, {\n    children: /*#__PURE__*/_jsxDEV(SignInArticle, {\n      children: /*#__PURE__*/_jsxDEV(SignInMain, {\n        children: [/*#__PURE__*/_jsxDEV(SignInFieldSet, {\n          children: [/*#__PURE__*/_jsxDEV(SignInLegend, {\n            children: \"Sign In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Email, {\n            children: [/*#__PURE__*/_jsxDEV(SignInLabel, {\n              htmlFor: \"email-address\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(SignInInput, {\n              type: \"text\",\n              name: \"email-address\",\n              id: \"email-address\",\n              onChange: onEmailChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Password, {\n            children: [/*#__PURE__*/_jsxDEV(SignInLabel, {\n              htmlFor: \"password\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(SignInInput, {\n              type: \"password\",\n              name: \"password\",\n              id: \"password\",\n              onChange: onPasswordChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SignInSubmit, {\n          onClick: onSubmitSignIn,\n          type: \"submit\",\n          value: \"Sign in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(RegisterContainer, {\n          children: /*#__PURE__*/_jsxDEV(RegisterLink, {\n            onClick: () => history.push(\"/register\"),\n            className: \"register-link\",\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SigninPage, \"3B3pqDcVnkT+z/sPK6Z9zQsLP+s=\");\n\n_c = SigninPage;\nconst mapStateToProps = createStructuredSelector({\n  isSignedIn\n});\n\nconst mapDispatchToProps = dispatch => ({\n  signIn: memberId => {\n    dispatch(handleMemberSignin(memberId));\n  }\n});\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(SigninPage));\n\nvar _c;\n\n$RefreshReg$(_c, \"SigninPage\");","map":{"version":3,"sources":["C:/Users/bryan.alvarez/Documents/webdev/git/lendit/lendit/src/pages/signin/signin.component.jsx"],"names":["React","useState","withRouter","connect","createStructuredSelector","isSignedIn","handleMemberSignin","SignInBody","SignInArticle","SignInMain","SignInFieldSet","SignInLegend","SignInLabel","SignInInput","SignInSubmit","RegisterContainer","RegisterLink","Email","Password","SigninPage","history","signIn","email","setEmail","password","setPassword","onEmailChange","event","target","value","onPasswordChange","onSubmitSignIn","fetch","method","headers","body","JSON","stringify","then","response","json","member","id","push","mapStateToProps","mapDispatchToProps","dispatch","memberId"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport { isSignedIn } from \"../../redux/site-member/site-member.selectors\";\r\n\r\nimport { handleMemberSignin } from \"../../redux/site-member/site-member.actions\";\r\n\r\nimport { SignInBody, SignInArticle, SignInMain, SignInFieldSet, SignInLegend, SignInLabel,\r\n  SignInInput, SignInSubmit, RegisterContainer, RegisterLink, Email, Password } from \"./signin.styles\";\r\n\r\nconst SigninPage = ({ history, signIn }) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const onEmailChange = (event) => {\r\n    setEmail(event.target.value);\r\n  };\r\n\r\n  const onPasswordChange = (event) => {\r\n    setPassword(event.target.value);\r\n  };\r\n\r\n  const onSubmitSignIn = () => {\r\n    fetch(\"https://lendit-api.herokuapp.com/signin\", {\r\n      method: \"post\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        email: email,\r\n        password: password,\r\n      }),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((member) => {\r\n        if (member.id) {\r\n          signIn(member.id);\r\n          history.push(\"/home\");\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <SignInBody>\r\n      <SignInArticle>\r\n        <SignInMain>\r\n          <SignInFieldSet>\r\n            <SignInLegend>Sign In</SignInLegend>\r\n\r\n            <Email>\r\n              <SignInLabel htmlFor=\"email-address\">Email</SignInLabel>\r\n              <SignInInput\r\n                type=\"text\"\r\n                name=\"email-address\"\r\n                id=\"email-address\"\r\n                onChange={onEmailChange}\r\n              />\r\n            </Email>\r\n\r\n            <Password>\r\n              <SignInLabel htmlFor=\"password\">Password</SignInLabel>\r\n              <SignInInput\r\n                type=\"password\"\r\n                name=\"password\"\r\n                id=\"password\"\r\n                onChange={onPasswordChange}\r\n              />\r\n            </Password>\r\n          </SignInFieldSet>\r\n\r\n          <SignInSubmit\r\n            onClick={onSubmitSignIn}\r\n            type=\"submit\"\r\n            value=\"Sign in\"\r\n          />\r\n\r\n          <RegisterContainer>\r\n            <RegisterLink\r\n              onClick={() => history.push(\"/register\")}\r\n              className=\"register-link\"\r\n            >\r\n              Register\r\n            </RegisterLink>\r\n          </RegisterContainer>\r\n        </SignInMain>\r\n      </SignInArticle>\r\n    </SignInBody>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  isSignedIn,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  signIn: (memberId) => {\r\n    dispatch(handleMemberSignin(memberId));\r\n  },\r\n});\r\n\r\nexport default withRouter(\r\n  connect(mapStateToProps, mapDispatchToProps)(SigninPage)\r\n);\r\n"]},"metadata":{},"sourceType":"module"}