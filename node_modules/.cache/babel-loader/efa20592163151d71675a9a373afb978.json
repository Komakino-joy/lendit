{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\bryan.alvarez\\\\Documents\\\\webdev\\\\git\\\\lendit\\\\lendit\\\\src\\\\components\\\\modals\\\\add-model.modal.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport { currentMemberId } from \"../../redux/site-member/site-member.selectors\";\nimport { useAlert } from \"react-alert\";\nimport axios from \"axios\";\nimport { toggleAddModel } from \"../../redux/modal/modal.actions\";\nimport { requestModelDropDownOptions } from \"../../redux/drop-downs/drop-down.actions\";\nimport { SubModalMain, SubModalContent, CloseButton, Header, Article, FieldSet, Label, Input, Submit } from \"./modal.styles\";\n\nconst AddModel = ({\n  toggleAddModel,\n  getModelOptions,\n  memberId\n}) => {\n  _s();\n\n  const alert = useAlert();\n  let [model, setModel] = useState(\"\");\n\n  const onModelChange = event => {\n    setModel(event.target.value);\n  };\n\n  const inputReset = () => {\n    model = null;\n    document.getElementById(\"model\").value = \"\";\n    document.getElementById(\"file\").value = \"\";\n  };\n\n  const onFileUpload = () => {\n    const file = document.querySelector(\"#file\").files[0];\n\n    if (!file || !model) {\n      alert.show('Model name and image are required.', {\n        type: 'error',\n        position: 'top center'\n      });\n      return;\n    }\n\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n\n    reader.onload = event => {\n      const imgElement = document.createElement(\"img\");\n      imgElement.src = event.target.result;\n\n      imgElement.onload = e => {\n        const canvas = document.createElement(\"canvas\");\n        const MAX_WIDTH = 350;\n\n        if (e.target.width > 350) {\n          const scaleSize = MAX_WIDTH / e.target.width;\n          canvas.width = MAX_WIDTH;\n          canvas.height = e.target.height * scaleSize;\n        } else {\n          canvas.width = e.target.width;\n          canvas.height = e.target.height;\n        }\n\n        const ctx = canvas.getContext(\"2d\");\n        ctx.drawImage(e.target, 0, 0, canvas.width, canvas.height);\n        const srcEncoded = ctx.canvas.toDataURL(e.target, \"image/jpg\");\n        axios({\n          method: \"post\",\n          url: \"http://localhost:3000/upload\",\n          data: {\n            image: srcEncoded,\n            model: model,\n            memberId: memberId\n          }\n        });\n        alert.show(`${model} submitted`, {\n          type: \"success\",\n          position: \"top center\"\n        });\n        inputReset();\n      };\n    };\n  };\n\n  return /*#__PURE__*/_jsxDEV(SubModalMain, {\n    children: /*#__PURE__*/_jsxDEV(SubModalContent, {\n      children: [/*#__PURE__*/_jsxDEV(CloseButton, {\n        onClick: () => {\n          toggleAddModel();\n          getModelOptions(memberId);\n        },\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Header, {\n        children: \"Add Model\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Article, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          action: \"sign-up_submit\",\n          method: \"get\",\n          acceptCharset: \"utf-8\",\n          children: [/*#__PURE__*/_jsxDEV(FieldSet, {\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              placeholder: \"Model Name (Required)\",\n              id: \"model\",\n              type: \"text\",\n              name: \"model\",\n              onChange: onModelChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              className: \"flex flex-column\",\n              encType: \"multipart/form-data\",\n              method: \"POST\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"file\",\n                children: \"Select file\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                class: \"hidden\",\n                id: \"file\",\n                type: \"file\",\n                accept: \".jpg, .jpeg, .png\",\n                name: \"pic\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Submit, {\n            type: \"Submit\",\n            defaultValue: \"Submit\",\n            onClick: onFileUpload\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddModel, \"BvpuLCxJiX7UNmyJtFsQqBQUG6A=\", false, function () {\n  return [useAlert];\n});\n\n_c = AddModel;\nconst mapStateToProps = createStructuredSelector({\n  memberId: currentMemberId\n});\n\nconst mapDispatchToProps = dispatch => ({\n  toggleAddModel: () => dispatch(toggleAddModel()),\n  getModelOptions: memberId => {\n    dispatch(requestModelDropDownOptions(memberId));\n  }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddModel);\n\nvar _c;\n\n$RefreshReg$(_c, \"AddModel\");","map":{"version":3,"sources":["C:/Users/bryan.alvarez/Documents/webdev/git/lendit/lendit/src/components/modals/add-model.modal.jsx"],"names":["React","useState","connect","createStructuredSelector","currentMemberId","useAlert","axios","toggleAddModel","requestModelDropDownOptions","SubModalMain","SubModalContent","CloseButton","Header","Article","FieldSet","Label","Input","Submit","AddModel","getModelOptions","memberId","alert","model","setModel","onModelChange","event","target","value","inputReset","document","getElementById","onFileUpload","file","querySelector","files","show","type","position","reader","FileReader","readAsDataURL","onload","imgElement","createElement","src","result","e","canvas","MAX_WIDTH","width","scaleSize","height","ctx","getContext","drawImage","srcEncoded","toDataURL","method","url","data","image","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport { currentMemberId } from \"../../redux/site-member/site-member.selectors\";\r\n\r\nimport { useAlert } from \"react-alert\";\r\n\r\nimport axios from \"axios\";\r\nimport { toggleAddModel } from \"../../redux/modal/modal.actions\";\r\nimport { requestModelDropDownOptions } from \"../../redux/drop-downs/drop-down.actions\";\r\n\r\nimport {\r\n  SubModalMain,\r\n  SubModalContent,\r\n  CloseButton,\r\n  Header,\r\n  Article,\r\n  FieldSet,\r\n  Label,\r\n  Input,\r\n  Submit,\r\n} from \"./modal.styles\";\r\n\r\nconst AddModel = ({ toggleAddModel, getModelOptions, memberId }) => {\r\n  const alert = useAlert();\r\n\r\n  let [model, setModel] = useState(\"\");\r\n\r\n  const onModelChange = (event) => {\r\n    setModel(event.target.value);\r\n  };\r\n\r\n  const inputReset = () => {\r\n    model = null;\r\n    document.getElementById(\"model\").value = \"\";\r\n    document.getElementById(\"file\").value = \"\";\r\n  };\r\n\r\n  const onFileUpload = () => {\r\n\r\n    const file = document.querySelector(\"#file\").files[0];\r\n\r\n    if (!file || !model){\r\n      alert.show('Model name and image are required.', { type:'error', position:'top center' })\r\n      return;\r\n    } \r\n\r\n    const reader = new FileReader();\r\n\r\n    reader.readAsDataURL(file);\r\n\r\n    reader.onload = (event) => {\r\n      const imgElement = document.createElement(\"img\");\r\n      imgElement.src = event.target.result;\r\n\r\n      imgElement.onload = (e) => {\r\n        const canvas = document.createElement(\"canvas\");\r\n        const MAX_WIDTH = 350;\r\n        if (e.target.width > 350) {\r\n          const scaleSize = MAX_WIDTH / e.target.width;\r\n          canvas.width = MAX_WIDTH;\r\n          canvas.height = e.target.height * scaleSize;\r\n        } else {\r\n          canvas.width = e.target.width;\r\n          canvas.height = e.target.height;\r\n        }\r\n\r\n        const ctx = canvas.getContext(\"2d\");\r\n\r\n        ctx.drawImage(e.target, 0, 0, canvas.width, canvas.height);\r\n\r\n        const srcEncoded = ctx.canvas.toDataURL(e.target, \"image/jpg\");\r\n\r\n        axios({\r\n          method: \"post\",\r\n          url: \"http://localhost:3000/upload\",\r\n          data: {\r\n            image: srcEncoded,\r\n            model: model,\r\n            memberId: memberId,\r\n          },\r\n        });\r\n\r\n        alert.show(`${model} submitted`, {\r\n          type: \"success\",\r\n          position: \"top center\",\r\n        });\r\n\r\n        inputReset();\r\n      };\r\n    };\r\n  };\r\n\r\n  return (\r\n    <SubModalMain>\r\n      <SubModalContent>\r\n        {/* Retrieve updated list of models when modal is closed. */}\r\n        <CloseButton\r\n          onClick={() => {\r\n            toggleAddModel();\r\n            getModelOptions(memberId);\r\n          }}\r\n        >\r\n          &times;\r\n        </CloseButton>\r\n\r\n        <Header>Add Model</Header>\r\n        <Article>\r\n          <div action=\"sign-up_submit\" method=\"get\" acceptCharset=\"utf-8\">\r\n            <FieldSet>\r\n              <Input\r\n              placeholder=\"Model Name (Required)\"\r\n                id=\"model\"\r\n                type=\"text\"\r\n                name=\"model\"\r\n                onChange={onModelChange}\r\n              />\r\n\r\n              <form\r\n                className=\"flex flex-column\"\r\n                encType=\"multipart/form-data\"\r\n                method=\"POST\"\r\n              >\r\n                <label htmlFor=\"file\">Select file</label>\r\n                <Input\r\n                class=\"hidden\"\r\n                  id=\"file\"\r\n                  type=\"file\"\r\n                  accept=\".jpg, .jpeg, .png\"\r\n                  name=\"pic\"\r\n                />\r\n              </form>\r\n            </FieldSet>\r\n            <Submit\r\n              type=\"Submit\"\r\n              defaultValue=\"Submit\"\r\n              onClick={onFileUpload}\r\n            />\r\n          </div>\r\n        </Article>\r\n      </SubModalContent>\r\n    </SubModalMain>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  memberId: currentMemberId,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  toggleAddModel: () => dispatch(toggleAddModel()),\r\n  getModelOptions: (memberId) => {\r\n    dispatch(requestModelDropDownOptions(memberId));\r\n  },\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddModel);\r\n"]},"metadata":{},"sourceType":"module"}