{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\alvar\\\\Documents\\\\WebDev\\\\comp-overload\\\\src\\\\components\\\\center\\\\center.component.jsx\";\n// import React, { useEffect, useState } from 'react'\nimport CustomButton from '../custom-button/custom-button.component';\nimport { connect } from \"react-redux\";\nimport './center.styles.scss';\nimport base64ArrayBuffer from '../../utils/base64';\n\nconst Center = ({\n  assetID,\n  assetName,\n  assetSerial,\n  assetImage,\n  assetStatus\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"center-container\",\n    children: assetID ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"center-inner-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header\",\n        children: [/*#__PURE__*/_jsxDEV(\"header\", {\n          className: \"asset-name\",\n          children: assetName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"serial\",\n          children: assetSerial\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"img-container\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: `data:image/png;base64,${base64ArrayBuffer(assetImage.data)}`,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: assetStatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: [/*#__PURE__*/_jsxDEV(CustomButton, {\n          isCheckIn: true,\n          children: \"CHECK IN\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n          isCheckOut: true,\n          children: \"CHECK OUT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"footer\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"instructions\",\n          children: \"If there are issues with the asset, please fill out the form below and submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"reason-box\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n          className: \"btn-submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"center-inner-container\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Nothing to display\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Center;\n\nconst mapStateToProps = state => ({\n  state: state,\n  assetID: state.data.id,\n  assetName: state.data.name,\n  assetSerial: state.data.serial,\n  assetImage: state.data.image,\n  assetStatus: state.data.status\n});\n\nexport default connect(mapStateToProps)(Center); //^ THE CODE BELOW IS USED TO LOAD FIRST ASSET WHEN RENDERING APP FOR FIRST TIME\n// const [asset, setAsset] = useState(null);\n// useEffect(() => {\n//     const fetchAsset = async() => {\n//         const response = await fetch(`http://localhost:3000/asset`)\n//         const asset = await response.json()\n//         setAsset(asset[0]);\n//     }\n//     fetchAsset();\n// }, []);\n//             \n// \n\nvar _c;\n\n$RefreshReg$(_c, \"Center\");","map":{"version":3,"sources":["C:/Users/alvar/Documents/WebDev/comp-overload/src/components/center/center.component.jsx"],"names":["CustomButton","connect","base64ArrayBuffer","Center","assetID","assetName","assetSerial","assetImage","assetStatus","data","mapStateToProps","state","id","name","serial","image","status"],"mappings":";;AAAA;AACA,OAAOA,YAAP,MAAyB,0CAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,sBAAP;AAEA,OAAOC,iBAAP,MAA8B,oBAA9B;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,SAAX;AAAsBC,EAAAA,WAAtB;AAAmCC,EAAAA,UAAnC;AAA+CC,EAAAA;AAA/C,CAAD,KAAkE;AAE7E,sBACI;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA,cACCJ,OAAO,gBACA;AAAK,MAAA,SAAS,EAAC,wBAAf;AAAA,8BAEI;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA,gCACI;AAAQ,UAAA,SAAS,EAAC,YAAlB;AAAA,oBAAgCC;AAAhC;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAM,UAAA,SAAS,EAAC,QAAhB;AAAA,oBAA0BC;AAA1B;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAOI;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,+BACI;AAAK,UAAA,GAAG,EAAG,yBAAwBJ,iBAAiB,CAACK,UAAU,CAACE,IAAZ,CAAkB,EAAtE;AAA0E,UAAA,GAAG,EAAC;AAA9E;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAPJ,eAWI;AAAA,kBAAID;AAAJ;AAAA;AAAA;AAAA;AAAA,cAXJ,eAaI;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,gCACI,QAAC,YAAD;AAAc,UAAA,SAAS,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,YAAD;AAAc,UAAA,UAAU,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAbJ,eAkBI;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA,gCACI;AAAM,UAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAU,UAAA,SAAS,EAAC;AAApB;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI,QAAC,YAAD;AAAc,UAAA,SAAS,EAAC,YAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAlBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,gBA2BI;AAAK,MAAA,SAAS,EAAC,wBAAf;AAAA,6BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AA5BZ;AAAA;AAAA;AAAA;AAAA,UADJ;AAmCH,CArCD;;KAAML,M;;AAuCN,MAAMO,eAAe,GAAIC,KAAD,KAAY;AAChCA,EAAAA,KAAK,EAAEA,KADyB;AAEhCP,EAAAA,OAAO,EAAEO,KAAK,CAACF,IAAN,CAAWG,EAFY;AAGhCP,EAAAA,SAAS,EAAEM,KAAK,CAACF,IAAN,CAAWI,IAHU;AAIhCP,EAAAA,WAAW,EAAEK,KAAK,CAACF,IAAN,CAAWK,MAJQ;AAKhCP,EAAAA,UAAU,EAAEI,KAAK,CAACF,IAAN,CAAWM,KALS;AAMhCP,EAAAA,WAAW,EAACG,KAAK,CAACF,IAAN,CAAWO;AANS,CAAZ,CAAxB;;AAUA,eAAef,OAAO,CAACS,eAAD,CAAP,CAAyBP,MAAzB,CAAf,C,CAGA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA","sourcesContent":["// import React, { useEffect, useState } from 'react'\r\nimport CustomButton from '../custom-button/custom-button.component'\r\nimport { connect } from \"react-redux\";\r\nimport './center.styles.scss'\r\n\r\nimport base64ArrayBuffer from '../../utils/base64'\r\n\r\nconst Center = ({ assetID, assetName, assetSerial, assetImage, assetStatus }) => {\r\n\r\n    return (\r\n        <div className='center-container'>\r\n        {assetID ? (\r\n                <div className='center-inner-container'>\r\n\r\n                    <div className='header'>\r\n                        <header className='asset-name'>{assetName}</header>\r\n                        <span className='serial'>{assetSerial}</span>\r\n                    </div>\r\n                    {/* Here we are using our base64ArrayBuffer function to convert our image array into a viewable picture */}\r\n                    <div className='img-container'>   \r\n                        <img src={`data:image/png;base64,${base64ArrayBuffer(assetImage.data)}`}  alt=''></img>\r\n                    </div>\r\n\r\n                    <p>{assetStatus}</p>\r\n\r\n                    <div className='button-container'>\r\n                        <CustomButton isCheckIn>CHECK IN</CustomButton>\r\n                        <CustomButton isCheckOut  >CHECK OUT</CustomButton>\r\n                    </div>\r\n\r\n                    <div className='footer'>\r\n                        <span className='instructions'>If there are issues with the asset, please fill out the form below and submit</span>\r\n                        <textarea className='reason-box'></textarea>\r\n                        <CustomButton className='btn-submit'>Submit</CustomButton>\r\n                    </div>\r\n\r\n                </div>\r\n                ):(  \r\n                    <div className='center-inner-container'>\r\n                        <h1>Nothing to display</h1>\r\n                    </div>\r\n                )}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    state: state,\r\n    assetID: state.data.id,\r\n    assetName: state.data.name,\r\n    assetSerial: state.data.serial,\r\n    assetImage: state.data.image,\r\n    assetStatus:state.data.status,\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps)(Center);\r\n\r\n\r\n//^ THE CODE BELOW IS USED TO LOAD FIRST ASSET WHEN RENDERING APP FOR FIRST TIME\r\n\r\n// const [asset, setAsset] = useState(null);\r\n    \r\n// useEffect(() => {\r\n//     const fetchAsset = async() => {\r\n//         const response = await fetch(`http://localhost:3000/asset`)\r\n//         const asset = await response.json()\r\n//         setAsset(asset[0]);\r\n//     }\r\n\r\n//     fetchAsset();\r\n// }, []);\r\n\r\n\r\n//             \r\n// \r\n"]},"metadata":{},"sourceType":"module"}