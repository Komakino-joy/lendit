{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\alvar\\\\Documents\\\\WebDev\\\\comp-overload\\\\src\\\\components\\\\center\\\\center.component.jsx\",\n    _s = $RefreshSig$();\n\n// import React, { useEffect, useState } from 'react'\nimport CustomButton from '../custom-button/custom-button.component';\nimport { connect, useSelector } from \"react-redux\";\nimport { createSelector } from 'reselect';\nimport './center.styles.scss';\nimport base64ArrayBuffer from '../../utils/base64';\nimport image404 from '../../images/404.png';\nimport { helloWorld } from \"./center.utils\";\nconst selectCurrentAssetStatus = createSelector(state => state.assetData, assetData => console.log(assetData.status));\nexport const CurrentAssetStatus = () => {\n  _s();\n\n  const assetStatus = useSelector(selectCurrentAssetStatus);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: assetStatus\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 12\n  }, this);\n};\n\n_s(CurrentAssetStatus, \"Hss3f78Avob2CMkMruePOc/5jQk=\", false, function () {\n  return [useSelector];\n});\n\n_c = CurrentAssetStatus;\n\nconst Center = ({\n  assetID,\n  assetName,\n  assetSerial,\n  assetStatus,\n  state\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"center-container\",\n    children: assetID ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"center-inner-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header\",\n        children: [/*#__PURE__*/_jsxDEV(\"header\", {\n          className: \"asset-name\",\n          children: assetName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"asset-serial\",\n          children: assetSerial\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"img-container\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        // Ternary operator is being used to determine the font color for status, based on the String value\n        className: ` ${assetStatus === 'Available' ? 'available' : assetStatus.slice(0, 10) === 'In Use By ' ? 'in-use' : 'quarantine'} asset-status`,\n        children: assetStatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: [/*#__PURE__*/_jsxDEV(CustomButton, {\n          isCheckIn: true,\n          children: \"CHECK IN\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n          isCheckOut: true,\n          children: \"CHECK OUT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"footer\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"instructions\",\n          children: \"If there are issues with the asset, please fill out the form below and submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"reason-box\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n          type: \"button\",\n          onClick: helloWorld,\n          children: [' ', \"Submit\", ' ']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"center-inner-container\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: image404,\n        width: \"450px\",\n        height: \"auto\",\n        alt: \"404 Error Message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 21\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n\n_c2 = Center;\n\nconst mapStateToProps = state => ({\n  state: state,\n  assetID: state.assetData.id,\n  assetName: state.assetData.name,\n  assetSerial: state.assetData.serial,\n  assetImage: state.assetData.image,\n  assetStatus: state.assetData.status\n});\n\nexport default connect(mapStateToProps)(Center); //^ THE CODE BELOW IS USED TO LOAD FIRST ASSET WHEN RENDERING APP FOR FIRST TIME\n// const [asset, setAsset] = useState(null);\n// useEffect(() => {\n//     const fetchAsset = async() => {\n//         const response = await fetch(`http://localhost:3000/asset`)\n//         const asset = await response.json()\n//         setAsset(asset[0]);\n//     }\n//     fetchAsset();\n// }, []);\n//             \n// \n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CurrentAssetStatus\");\n$RefreshReg$(_c2, \"Center\");","map":{"version":3,"sources":["C:/Users/alvar/Documents/WebDev/comp-overload/src/components/center/center.component.jsx"],"names":["CustomButton","connect","useSelector","createSelector","base64ArrayBuffer","image404","helloWorld","selectCurrentAssetStatus","state","assetData","console","log","status","CurrentAssetStatus","assetStatus","Center","assetID","assetName","assetSerial","slice","mapStateToProps","id","name","serial","assetImage","image"],"mappings":"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","sourcesContent":["// import React, { useEffect, useState } from 'react'\r\nimport CustomButton from '../custom-button/custom-button.component'\r\nimport { connect, useSelector } from \"react-redux\";\r\nimport { createSelector } from 'reselect'\r\nimport './center.styles.scss'\r\n\r\nimport base64ArrayBuffer from '../../utils/base64'\r\nimport image404 from '../../images/404.png'\r\n\r\nimport { helloWorld } from \"./center.utils\";\r\n\r\n\r\n\r\nconst selectCurrentAssetStatus = createSelector(\r\n    state => state.assetData,\r\n    assetData => console.log(assetData.status)\r\n)\r\n\r\nexport const CurrentAssetStatus = () => {\r\n    const assetStatus = useSelector(selectCurrentAssetStatus)\r\n    return <div>{assetStatus}</div>\r\n  }\r\n\r\n\r\nconst Center = ({ assetID, assetName, assetSerial, assetStatus, state }) => {\r\n\r\n    return (\r\n        <div className='center-container'>\r\n        {assetID ? (\r\n                <div className='center-inner-container'>\r\n\r\n                    <div className='header'>\r\n                        <header className='asset-name'>{assetName}</header>\r\n                        <span className='asset-serial'>{assetSerial}</span>\r\n                    </div>\r\n                    \r\n                    <div className='img-container'>   \r\n                    {/* Here we are using our base64ArrayBuffer function to convert our image array into a viewable picture */}\r\n                        {/* <img className='asset-image' src={`data:image/png;base64,${base64ArrayBuffer(assetImage.data)}`}  alt=''></img> */}\r\n                    </div>\r\n                    <p \r\n                    // Ternary operator is being used to determine the font color for status, based on the String value\r\n                        className={` ${assetStatus === 'Available' ? 'available' : assetStatus.slice(0,10) === 'In Use By ' ? 'in-use' : 'quarantine' } asset-status`}>\r\n                        {assetStatus}\r\n                    </p>\r\n\r\n                    <div className='button-container'>\r\n                        <CustomButton isCheckIn >CHECK IN</CustomButton>\r\n                        <CustomButton isCheckOut  >CHECK OUT</CustomButton>\r\n                    </div>\r\n\r\n                    <div className='footer'>\r\n                    \r\n                        <span className='instructions'>If there are issues with the asset, please fill out the form below and submit</span>\r\n                        <textarea className='reason-box'></textarea>\r\n                        <CustomButton type='button' onClick={helloWorld}>{' '}Submit{' '}</CustomButton>\r\n                    </div>\r\n\r\n                </div>\r\n                ):(  \r\n                    <div className='center-inner-container'>\r\n                        <img src={image404} width='450px' height='auto' alt='404 Error Message' ></img>\r\n                    </div>\r\n                )}\r\n                \r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    state: state,\r\n    assetID: state.assetData.id,\r\n    assetName: state.assetData.name,\r\n    assetSerial: state.assetData.serial,\r\n    assetImage: state.assetData.image,\r\n    assetStatus:state.assetData.status,\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps)(Center);\r\n\r\n\r\n//^ THE CODE BELOW IS USED TO LOAD FIRST ASSET WHEN RENDERING APP FOR FIRST TIME\r\n\r\n// const [asset, setAsset] = useState(null);\r\n    \r\n// useEffect(() => {\r\n//     const fetchAsset = async() => {\r\n//         const response = await fetch(`http://localhost:3000/asset`)\r\n//         const asset = await response.json()\r\n//         setAsset(asset[0]);\r\n//     }\r\n\r\n//     fetchAsset();\r\n// }, []);\r\n\r\n\r\n//             \r\n// \r\n"]},"metadata":{},"sourceType":"module"}