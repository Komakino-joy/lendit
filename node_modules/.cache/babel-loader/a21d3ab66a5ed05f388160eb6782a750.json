{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import _slicedToArray from\"C:/Users/alvar/Documents/a_Web_Development_Projects/FINAL_COPIES_OF_PROJECTS/lendit/lendit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import{connect}from\"react-redux\";import{createStructuredSelector}from\"reselect\";import{currentMemberId}from\"../../redux/site-member/site-member.selectors\";import{toggleAddModel as _toggleAddModel}from\"../../redux/modal/modal.actions\";import{requestModelDropDownOptions}from\"../../redux/drop-downs/drop-down.actions\";import axios from\"axios\";import{useAlert}from\"react-alert\";import{SubModalMain,SubModalContent,CloseButton,Header,Article,FieldSet,SubModalInput,AddModelSubmit}from\"./modal.styles\";var AddModel=function AddModel(_ref){var toggleAddModel=_ref.toggleAddModel,getModelOptions=_ref.getModelOptions,memberId=_ref.memberId;var alert=useAlert();var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),model=_useState2[0],setModel=_useState2[1];var onModelChange=function onModelChange(event){setModel(event.target.value);};var inputReset=function inputReset(){model=null;document.getElementById(\"model\").value=\"\";document.getElementById(\"file\").value=\"\";};var onFileUpload=function onFileUpload(){var file=document.querySelector(\"#file\").files[0];if(!file||!model){alert.show('Model name and image are required.',{type:'error',position:'top center'});return;}var reader=new FileReader();reader.readAsDataURL(file);reader.onload=function(event){var imgElement=document.createElement(\"img\");imgElement.src=event.target.result;imgElement.onload=function(e){var canvas=document.createElement(\"canvas\");var MAX_WIDTH=350;if(e.target.width>350){var scaleSize=MAX_WIDTH/e.target.width;canvas.width=MAX_WIDTH;canvas.height=e.target.height*scaleSize;}else{canvas.width=e.target.width;canvas.height=e.target.height;}var ctx=canvas.getContext(\"2d\");ctx.drawImage(e.target,0,0,canvas.width,canvas.height);var srcEncoded=ctx.canvas.toDataURL(e.target,\"image/jpg\");axios({method:\"post\",url:\"/assets/upload\",data:{image:srcEncoded,model:model,memberId:memberId}});alert.show(\"\".concat(model,\" submitted\"),{type:\"success\",position:\"top center\"});inputReset();};};};return/*#__PURE__*/_jsx(SubModalMain,{children:/*#__PURE__*/_jsxs(SubModalContent,{children:[/*#__PURE__*/_jsx(CloseButton,{onClick:function onClick(){toggleAddModel();getModelOptions(memberId);},children:\"\\xD7\"}),/*#__PURE__*/_jsx(Header,{children:\"Add Model\"}),/*#__PURE__*/_jsx(Article,{children:/*#__PURE__*/_jsxs(\"div\",{action:\"sign-up_submit\",method:\"get\",acceptCharset:\"utf-8\",children:[/*#__PURE__*/_jsxs(FieldSet,{children:[/*#__PURE__*/_jsx(SubModalInput,{placeholder:\"Model Name (Required)\",id:\"model\",type:\"text\",name:\"model\",onChange:onModelChange}),/*#__PURE__*/_jsx(\"form\",{className:\"flex flex-column\",encType:\"multipart/form-data\",method:\"POST\",children:/*#__PURE__*/_jsx(SubModalInput,{id:\"file\",type:\"file\",accept:\".jpg, .jpeg, .png\",name:\"pic\"})})]}),/*#__PURE__*/_jsx(AddModelSubmit,{type:\"Submit\",defaultValue:\"Submit\",onClick:onFileUpload})]})})]})});};var mapStateToProps=createStructuredSelector({memberId:currentMemberId});var mapDispatchToProps=function mapDispatchToProps(dispatch){return{toggleAddModel:function toggleAddModel(){return dispatch(_toggleAddModel());},getModelOptions:function getModelOptions(memberId){dispatch(requestModelDropDownOptions(memberId));}};};export default connect(mapStateToProps,mapDispatchToProps)(AddModel);","map":{"version":3,"sources":["C:/Users/alvar/Documents/a_Web_Development_Projects/FINAL_COPIES_OF_PROJECTS/lendit/lendit/src/components/modals/add-model.modal.jsx"],"names":["React","useState","connect","createStructuredSelector","currentMemberId","toggleAddModel","requestModelDropDownOptions","axios","useAlert","SubModalMain","SubModalContent","CloseButton","Header","Article","FieldSet","SubModalInput","AddModelSubmit","AddModel","getModelOptions","memberId","alert","model","setModel","onModelChange","event","target","value","inputReset","document","getElementById","onFileUpload","file","querySelector","files","show","type","position","reader","FileReader","readAsDataURL","onload","imgElement","createElement","src","result","e","canvas","MAX_WIDTH","width","scaleSize","height","ctx","getContext","drawImage","srcEncoded","toDataURL","method","url","data","image","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { createStructuredSelector } from \"reselect\";\r\n\r\nimport { currentMemberId } from \"../../redux/site-member/site-member.selectors\";\r\nimport { toggleAddModel } from \"../../redux/modal/modal.actions\";\r\nimport { requestModelDropDownOptions } from \"../../redux/drop-downs/drop-down.actions\";\r\n\r\nimport axios from \"axios\";\r\n\r\nimport { useAlert } from \"react-alert\";\r\n\r\n\r\nimport {\r\n  SubModalMain,\r\n  SubModalContent,\r\n  CloseButton,\r\n  Header,\r\n  Article,\r\n  FieldSet,\r\n  SubModalInput,\r\n  AddModelSubmit,\r\n} from \"./modal.styles\";\r\n\r\nconst AddModel = ({ toggleAddModel, getModelOptions, memberId }) => {\r\n  const alert = useAlert();\r\n\r\n  let [model, setModel] = useState(\"\");\r\n\r\n  const onModelChange = (event) => {\r\n    setModel(event.target.value);\r\n  };\r\n\r\n  const inputReset = () => {\r\n    model = null;\r\n    document.getElementById(\"model\").value = \"\";\r\n    document.getElementById(\"file\").value = \"\";\r\n  };\r\n\r\n  const onFileUpload = () => {\r\n\r\n    const file = document.querySelector(\"#file\").files[0];\r\n\r\n    if (!file || !model){\r\n      alert.show('Model name and image are required.', { type:'error', position:'top center' })\r\n      return;\r\n    } \r\n\r\n    const reader = new FileReader();\r\n\r\n    reader.readAsDataURL(file);\r\n\r\n    reader.onload = (event) => {\r\n      const imgElement = document.createElement(\"img\");\r\n      imgElement.src = event.target.result;\r\n\r\n      imgElement.onload = (e) => {\r\n        const canvas = document.createElement(\"canvas\");\r\n        const MAX_WIDTH = 350;\r\n        if (e.target.width > 350) {\r\n          const scaleSize = MAX_WIDTH / e.target.width;\r\n          canvas.width = MAX_WIDTH;\r\n          canvas.height = e.target.height * scaleSize;\r\n        } else {\r\n          canvas.width = e.target.width;\r\n          canvas.height = e.target.height;\r\n        }\r\n\r\n        const ctx = canvas.getContext(\"2d\");\r\n\r\n        ctx.drawImage(e.target, 0, 0, canvas.width, canvas.height);\r\n\r\n        const srcEncoded = ctx.canvas.toDataURL(e.target, \"image/jpg\");\r\n\r\n        axios({\r\n          method: \"post\",\r\n          url: `/assets/upload`,\r\n          data: {\r\n            image: srcEncoded,\r\n            model: model,\r\n            memberId: memberId,\r\n          },\r\n        });\r\n\r\n        alert.show(`${model} submitted`, {\r\n          type: \"success\",\r\n          position: \"top center\",\r\n        });\r\n\r\n        inputReset();\r\n      };\r\n    };\r\n  };\r\n\r\n  return (\r\n    <SubModalMain>\r\n      <SubModalContent>\r\n        {/* Retrieve updated list of models when modal is closed. */}\r\n        <CloseButton\r\n          onClick={() => {\r\n            toggleAddModel();\r\n            getModelOptions(memberId);\r\n          }}\r\n        >\r\n          &times;\r\n        </CloseButton>\r\n\r\n        <Header>Add Model</Header>\r\n        <Article>\r\n          <div action=\"sign-up_submit\" method=\"get\" acceptCharset=\"utf-8\">\r\n            <FieldSet>\r\n              <SubModalInput\r\n              placeholder=\"Model Name (Required)\"\r\n                id=\"model\"\r\n                type=\"text\"\r\n                name=\"model\"\r\n                onChange={onModelChange}\r\n              />\r\n\r\n              <form\r\n                className=\"flex flex-column\"\r\n                encType=\"multipart/form-data\"\r\n                method=\"POST\"\r\n              >\r\n                <SubModalInput\r\n                  id=\"file\"\r\n                  type=\"file\"\r\n                  accept=\".jpg, .jpeg, .png\"\r\n                  name=\"pic\"\r\n                />\r\n              </form>\r\n            </FieldSet>\r\n            <AddModelSubmit\r\n              type=\"Submit\"\r\n              defaultValue=\"Submit\"\r\n              onClick={onFileUpload}\r\n            />\r\n          </div>\r\n        </Article>\r\n      </SubModalContent>\r\n    </SubModalMain>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  memberId: currentMemberId,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  toggleAddModel: () => dispatch(toggleAddModel()),\r\n  getModelOptions: (memberId) => {\r\n    dispatch(requestModelDropDownOptions(memberId));\r\n  },\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddModel);\r\n"]},"metadata":{},"sourceType":"module"}