{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import _slicedToArray from\"C:/Users/alvar/Documents/a_Web_Development_Projects/FINAL_COPIES_OF_PROJECTS/lendit/lendit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import{connect}from\"react-redux\";import{createStructuredSelector}from'reselect';import{currentMemberId}from\"../../redux/site-member/site-member.selectors\";import{selectAssets}from\"../../redux/drop-downs/drop-down.selectors\";import{selectUsers}from\"../../redux/drop-downs/drop-down.selectors\";import{seenActivityReport}from\"../../redux/modal/modal.selectors\";import ActivityReport from\"./activity-report.modal\";import{toggleActvityTracking as _toggleActvityTracking,toggleActvityReport as _toggleActvityReport}from\"../../redux/modal/modal.actions\";import setHours from\"date-fns/setHours\";import setMinutes from\"date-fns/setMinutes\";import CustomDropDown from'../custom-drop-down/custom-drop-down.component';import{ModalMain,ModalContent,CloseButton,Header,Article,FieldSet,Label,ActivitySubmit,ModalDate}from\"./modal.styles\";import\"react-datepicker/dist/react-datepicker.css\";var ActivityTracking=function ActivityTracking(_ref){var toggleActvityTracking=_ref.toggleActvityTracking,toggleActvityReport=_ref.toggleActvityReport,assets=_ref.assets,users=_ref.users,seenActivityReport=_ref.seenActivityReport;var _useState=useState(setHours(setMinutes(new Date(),0),24)),_useState2=_slicedToArray(_useState,2),startDate=_useState2[0],setStartDate=_useState2[1];var _useState3=useState(setHours(setMinutes(new Date(),0),24)),_useState4=_slicedToArray(_useState3,2),endDate=_useState4[0],setEndDate=_useState4[1];var filterPassedTime=function filterPassedTime(time){var currentDate=new Date();var selectedDate=new Date(time);return currentDate.getTime()<selectedDate.getTime();};var _useState5=useState('%'),_useState6=_slicedToArray(_useState5,2),assetID=_useState6[0],setAssetID=_useState6[1];var _useState7=useState('%'),_useState8=_slicedToArray(_useState7,2),userID=_useState8[0],setUserID=_useState8[1];var onAssetIDChange=function onAssetIDChange(event){setAssetID(event.target.value);};var onUserIDChange=function onUserIDChange(event){setUserID(event.target.value);};return/*#__PURE__*/_jsxs(ModalMain,{children:[/*#__PURE__*/_jsxs(ModalContent,{children:[/*#__PURE__*/_jsx(CloseButton,{onClick:toggleActvityTracking,children:\"\\xD7\"}),/*#__PURE__*/_jsx(Header,{children:\"Activity Tracking\"}),/*#__PURE__*/_jsx(Article,{children:/*#__PURE__*/_jsxs(\"div\",{action:\"activity-tracking\",method:\"get\",acceptCharset:\"utf-8\",children:[/*#__PURE__*/_jsxs(FieldSet,{id:\"activity-tracking\",children:[/*#__PURE__*/_jsx(Label,{htmlFor:\"start-date\",children:\"Start Date\"}),/*#__PURE__*/_jsx(ModalDate,{selected:startDate,timeInputLabel:\"Time:\",dateFormat:\"MM/dd/yyyy h:mm aa\",showTimeInput:true,filterTime:filterPassedTime,onChange:function onChange(date){return setStartDate(date);},fixedHeight:true}),/*#__PURE__*/_jsx(Label,{htmlFor:\"end-date\",children:\"End Date\"}),/*#__PURE__*/_jsx(ModalDate,{selected:endDate,timeInputLabel:\"Time:\",dateFormat:\"MM/dd/yyyy h:mm aa\",showTimeInput:true,onChange:function onChange(date){return setEndDate(date);},fixedHeight:true}),/*#__PURE__*/_jsx(Label,{htmlFor:\"asset-id\",children:\"Asset ID\"}),/*#__PURE__*/_jsx(CustomDropDown,{isActivitySelection:true,onChange:onAssetIDChange,type:\"text\",name:\"asset-id\",id:\"asset-id\",optionList:assets}),/*#__PURE__*/_jsx(Label,{htmlFor:\"user-id\",children:\"User ID\"}),/*#__PURE__*/_jsx(CustomDropDown,{isActivitySelection:true,onChange:onUserIDChange,type:\"text\",name:\"user-id\",id:\"user-id\",optionList:users})]}),/*#__PURE__*/_jsx(ActivitySubmit,{onClick:toggleActvityReport,type:\"submit\",defaultValue:\"Submit\"})]})})]}),seenActivityReport?/*#__PURE__*/_jsx(ActivityReport,{startDate:startDate.getTime(),endDate:endDate.getTime(),assetID:assetID,userID:userID}):null]});};var mapStateToProps=createStructuredSelector({memberId:currentMemberId,assets:selectAssets,users:selectUsers,seenActivityReport:seenActivityReport});var mapDispatchToProps=function mapDispatchToProps(dispatch){return{toggleActvityTracking:function toggleActvityTracking(){return dispatch(_toggleActvityTracking());},toggleActvityReport:function toggleActvityReport(){return dispatch(_toggleActvityReport());}};};export default connect(mapStateToProps,mapDispatchToProps)(ActivityTracking);","map":{"version":3,"sources":["C:/Users/alvar/Documents/a_Web_Development_Projects/FINAL_COPIES_OF_PROJECTS/lendit/lendit/src/components/modals/activity-tracking.modal.jsx"],"names":["React","useState","connect","createStructuredSelector","currentMemberId","selectAssets","selectUsers","seenActivityReport","ActivityReport","toggleActvityTracking","toggleActvityReport","setHours","setMinutes","CustomDropDown","ModalMain","ModalContent","CloseButton","Header","Article","FieldSet","Label","ActivitySubmit","ModalDate","ActivityTracking","assets","users","Date","startDate","setStartDate","endDate","setEndDate","filterPassedTime","time","currentDate","selectedDate","getTime","assetID","setAssetID","userID","setUserID","onAssetIDChange","event","target","value","onUserIDChange","date","mapStateToProps","memberId","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { createStructuredSelector } from 'reselect';\r\n\r\nimport { currentMemberId } from \"../../redux/site-member/site-member.selectors\";\r\nimport { selectAssets } from \"../../redux/drop-downs/drop-down.selectors\";\r\nimport { selectUsers } from \"../../redux/drop-downs/drop-down.selectors\";\r\nimport { seenActivityReport } from \"../../redux/modal/modal.selectors\";\r\nimport ActivityReport from \"./activity-report.modal\";\r\nimport { toggleActvityTracking, toggleActvityReport } from \"../../redux/modal/modal.actions\";\r\n\r\nimport setHours from \"date-fns/setHours\";\r\nimport setMinutes from \"date-fns/setMinutes\";\r\n\r\nimport CustomDropDown from '../custom-drop-down/custom-drop-down.component';\r\n\r\nimport { ModalMain, ModalContent, CloseButton, Header, Article,\r\n  FieldSet, Label, ActivitySubmit, ModalDate\r\n} from \"./modal.styles\";\r\n\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nconst ActivityTracking = ( {toggleActvityTracking, toggleActvityReport, assets, users, seenActivityReport} ) =>{\r\n\r\n\r\n  const [startDate, setStartDate] = useState(\r\n    setHours(setMinutes(new Date(), 0), 24)\r\n  );\r\n  const [endDate, setEndDate] = useState(\r\n    setHours(setMinutes(new Date(), 0), 24)\r\n  );\r\n\r\n  const filterPassedTime = time => {\r\n    const currentDate = new Date();\r\n    const selectedDate = new Date(time);\r\n\r\n    return currentDate.getTime() < selectedDate.getTime();\r\n  }\r\n\r\n  const [assetID, setAssetID] = useState('%');\r\n  const [userID, setUserID] = useState('%');\r\n\r\n\r\n  const onAssetIDChange = (event) => {\r\n    setAssetID(event.target.value);\r\n  };\r\n\r\n  const onUserIDChange = (event) => {\r\n    setUserID(event.target.value);\r\n  };\r\n\r\n  return (\r\n   <ModalMain>\r\n      <ModalContent>\r\n        {/* Retrieve updated list of users when modal is closed. */}\r\n        <CloseButton onClick={toggleActvityTracking}>&times;</CloseButton>\r\n        <Header>Activity Tracking</Header>\r\n        <Article>\r\n          <div action=\"activity-tracking\" method=\"get\" acceptCharset=\"utf-8\">\r\n            <FieldSet id=\"activity-tracking\">\r\n                <Label htmlFor=\"start-date\">Start Date</Label>\r\n                <ModalDate \r\n                  selected={startDate} \r\n                  timeInputLabel=\"Time:\"\r\n                  dateFormat=\"MM/dd/yyyy h:mm aa\"\r\n                  showTimeInput\r\n                  filterTime={filterPassedTime}\r\n                  onChange={date => setStartDate(date)} \r\n                  fixedHeight\r\n                />\r\n                <Label htmlFor=\"end-date\">End Date</Label>\r\n                <ModalDate\r\n                  selected={endDate}       \r\n                  timeInputLabel=\"Time:\"\r\n                  dateFormat=\"MM/dd/yyyy h:mm aa\"\r\n                  showTimeInput \r\n                  onChange={date => setEndDate(date)} \r\n                  fixedHeight\r\n                />\r\n                <Label htmlFor=\"asset-id\">Asset ID</Label>\r\n                <CustomDropDown isActivitySelection onChange={onAssetIDChange} type=\"text\" name=\"asset-id\"  id=\"asset-id\" optionList={assets}/>\r\n                <Label htmlFor=\"user-id\">User ID</Label>\r\n                <CustomDropDown isActivitySelection onChange={onUserIDChange} type=\"text\" name=\"user-id\"  id=\"user-id\" optionList={users}/>\r\n            </FieldSet>\r\n            <ActivitySubmit onClick={toggleActvityReport} type = \"submit\" defaultValue=\"Submit\"/>\r\n          </div>\r\n        </Article>\r\n      </ModalContent>\r\n      {\r\n        seenActivityReport ? \r\n        <ActivityReport  \r\n          startDate={startDate.getTime()} \r\n          endDate={endDate.getTime()}\r\n          assetID={assetID}\r\n          userID={userID} \r\n          /> \r\n        : null\r\n      }\r\n   </ModalMain>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  memberId: currentMemberId,\r\n  assets: selectAssets,\r\n  users: selectUsers,\r\n  seenActivityReport\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  toggleActvityTracking : () => dispatch(toggleActvityTracking()),\r\n  toggleActvityReport : () => dispatch(toggleActvityReport())\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ActivityTracking);"]},"metadata":{},"sourceType":"module"}