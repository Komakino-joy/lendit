{"ast":null,"code":"import _taggedTemplateLiteral from\"C:/Users/alvar/Documents/WebDev/lendit/lendit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";function _templateObject4(){var data=_taggedTemplateLiteral([\"\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n    height: 2.5em;\\n    min-width: 9rem;\\n    width: 100px;\\n    font-size: 1rem;\\n    opacity: 1;\\n    transition: opacity 0.15s ease-in;\\n    border-radius: 0.25rem;\\n    padding: .5rem 1rem;\\n    box-shadow: 0 0.3rem rgba(121, 121, 121, 0.65);\\n    border: none;\\n    outline: none;\\n    color: #fff;\\n    cursor: pointer;\\n    :active {\\n    transform: translate(0, 0.1rem);\\n    box-shadow: 0 0.1rem rgba(255, 255, 255, 0.65);\\n    }\\n    :hover {\\n    filter: brightness(120%);\\n    }\\n\\n    \",\"\\n\"]);_templateObject4=function _templateObject4(){return data;};return data;}function _templateObject3(){var data=_taggedTemplateLiteral([\"\\n    width: 85%;\\n    height: 25px;\\n    margin-bottom: 0.5rem;\\n    background-color: #808080;\\n\"]);_templateObject3=function _templateObject3(){return data;};return data;}function _templateObject2(){var data=_taggedTemplateLiteral([\"\\n    background-color: #bf3737;\\n\"]);_templateObject2=function _templateObject2(){return data;};return data;}function _templateObject(){var data=_taggedTemplateLiteral([\"\\n    background-color: #3773bf;\\n\"]);_templateObject=function _templateObject(){return data;};return data;}import styled,{css}from'styled-components';var checkInButtonStyles=css(_templateObject());var checkOutButtonStyles=css(_templateObject2());var submitButtonStyles=css(_templateObject3());var getButtonStyles=function getButtonStyles(props){if(props.isCheckIn){return checkInButtonStyles;}if(props.isCheckOut){return checkOutButtonStyles;}if(props.isSubmit){return submitButtonStyles;}};export var CustomButtonContainer=styled.button(_templateObject4(),getButtonStyles);","map":{"version":3,"sources":["C:/Users/alvar/Documents/WebDev/lendit/lendit/src/components/custom-button/custom-button.styles.jsx"],"names":["styled","css","checkInButtonStyles","checkOutButtonStyles","submitButtonStyles","getButtonStyles","props","isCheckIn","isCheckOut","isSubmit","CustomButtonContainer","button"],"mappings":"o8CAAA,MAAOA,CAAAA,MAAP,EAAiBC,GAAjB,KAA4B,mBAA5B,CAEA,GAAMC,CAAAA,mBAAmB,CAAGD,GAAH,mBAAzB,CAIA,GAAME,CAAAA,oBAAoB,CAAGF,GAAH,oBAA1B,CAIA,GAAMG,CAAAA,kBAAkB,CAAGH,GAAH,oBAAxB,CAOA,GAAMI,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,CAAW,CAC/B,GAAIA,KAAK,CAACC,SAAV,CAAqB,CACjB,MAAOL,CAAAA,mBAAP,CACH,CAED,GAAII,KAAK,CAACE,UAAV,CAAsB,CAClB,MAAOL,CAAAA,oBAAP,CACH,CAED,GAAIG,KAAK,CAACG,QAAV,CAAoB,CAChB,MAAOL,CAAAA,kBAAP,CACH,CACJ,CAZD,CAcA,MAAO,IAAMM,CAAAA,qBAAqB,CAAGV,MAAM,CAACW,MAAV,oBAyB5BN,eAzB4B,CAA3B","sourcesContent":["import styled, { css } from 'styled-components';\r\n\r\nconst checkInButtonStyles = css`\r\n    background-color: #3773bf;\r\n`;\r\n\r\nconst checkOutButtonStyles = css`\r\n    background-color: #bf3737;\r\n`;\r\n\r\nconst submitButtonStyles = css`\r\n    width: 85%;\r\n    height: 25px;\r\n    margin-bottom: 0.5rem;\r\n    background-color: #808080;\r\n`;\r\n\r\nconst getButtonStyles = (props) => {\r\n    if (props.isCheckIn) {\r\n        return checkInButtonStyles\r\n    } \r\n    \r\n    if (props.isCheckOut) {\r\n        return checkOutButtonStyles\r\n    } \r\n    \r\n    if (props.isSubmit) {\r\n        return submitButtonStyles\r\n    }\r\n};\r\n\r\nexport const CustomButtonContainer = styled.button`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    height: 2.5em;\r\n    min-width: 9rem;\r\n    width: 100px;\r\n    font-size: 1rem;\r\n    opacity: 1;\r\n    transition: opacity 0.15s ease-in;\r\n    border-radius: 0.25rem;\r\n    padding: .5rem 1rem;\r\n    box-shadow: 0 0.3rem rgba(121, 121, 121, 0.65);\r\n    border: none;\r\n    outline: none;\r\n    color: #fff;\r\n    cursor: pointer;\r\n    :active {\r\n    transform: translate(0, 0.1rem);\r\n    box-shadow: 0 0.1rem rgba(255, 255, 255, 0.65);\r\n    }\r\n    :hover {\r\n    filter: brightness(120%);\r\n    }\r\n\r\n    ${getButtonStyles}\r\n`;\r\n\r\n\r\n  "]},"metadata":{},"sourceType":"module"}