{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import React,{useEffect}from'react';import{connect}from\"react-redux\";import{createStructuredSelector}from'reselect';import selectedListItemID from\"../custom-drop-down/drop-down.utils\";import{requestSelectedUserData as _requestSelectedUserData}from\"../../redux/user/user.actions\";import{requestSelectedAssetData as _requestSelectedAssetData}from\"../../redux/asset/asset.actions\";import{requestAssetDropDownOptions as _requestAssetDropDownOptions,requestUserDropDownOptions as _requestUserDropDownOptions}from'../../redux/drop-downs/drop-down.actions';import{currentMemberId}from\"../../redux/site-member/site-member.selectors\";import{selectUsers,selectAssets}from\"../../redux/drop-downs/drop-down.selectors\";import CustomDropDown from'../custom-drop-down/custom-drop-down.component';import{DropDownContainer,DropDownInner,Tag}from\"./drop-down-container.styles\";var ScanboxContainer=function ScanboxContainer(_ref){var memberId=_ref.memberId,assets=_ref.assets,users=_ref.users,requestAssetDropDownOptions=_ref.requestAssetDropDownOptions,requestUserDropDownOptions=_ref.requestUserDropDownOptions,requestSelectedAssetData=_ref.requestSelectedAssetData,requestSelectedUserData=_ref.requestSelectedUserData;useEffect(function(){// Get Data from /allunits.\nrequestAssetDropDownOptions(memberId);},[requestAssetDropDownOptions,memberId]);//\nuseEffect(function(){// Get Data from /allusers when component mounts.\nrequestUserDropDownOptions(memberId);},[requestUserDropDownOptions,memberId]);return/*#__PURE__*/_jsx(DropDownContainer,{children:/*#__PURE__*/_jsxs(DropDownInner,{children:[/*#__PURE__*/_jsx(Tag,{children:\"ASSET ID\"}),/*#__PURE__*/_jsx(CustomDropDown,{isHomePage:true,onChange:function onChange(){return requestSelectedAssetData(selectedListItemID('asset-list'),memberId);},id:\"asset-list\",optionList:assets}),/*#__PURE__*/_jsx(Tag,{children:\"USER ID\"}),/*#__PURE__*/_jsx(CustomDropDown,{isHomePage:true,onChange:requestSelectedUserData,id:\"user-list\",optionList:users})]})});};var mapStateToProps=createStructuredSelector({memberId:currentMemberId,assets:selectAssets,users:selectUsers});var mapDispatchToProps=function mapDispatchToProps(dispatch){return{requestSelectedAssetData:function requestSelectedAssetData(assetId,ownerId){dispatch(_requestSelectedAssetData({assetId:assetId,ownerId:ownerId}));},requestAssetDropDownOptions:function requestAssetDropDownOptions(memberId){dispatch(_requestAssetDropDownOptions(memberId));},requestUserDropDownOptions:function requestUserDropDownOptions(memberId){dispatch(_requestUserDropDownOptions(memberId));},requestSelectedUserData:function requestSelectedUserData(){dispatch(_requestSelectedUserData(selectedListItemID('user-list')));}};};export default connect(mapStateToProps,mapDispatchToProps)(ScanboxContainer);","map":{"version":3,"sources":["C:/Users/alvar/Documents/a_Web_Development_Projects/FINAL_COPIES_OF_PROJECTS/lendit/lendit/src/components/drop-down-container/drop-down-container.component.jsx"],"names":["React","useEffect","connect","createStructuredSelector","selectedListItemID","requestSelectedUserData","requestSelectedAssetData","requestAssetDropDownOptions","requestUserDropDownOptions","currentMemberId","selectUsers","selectAssets","CustomDropDown","DropDownContainer","DropDownInner","Tag","ScanboxContainer","memberId","assets","users","mapStateToProps","mapDispatchToProps","dispatch","assetId","ownerId"],"mappings":"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","sourcesContent":["import React, {useEffect}  from 'react'\r\nimport { connect } from \"react-redux\";\r\nimport { createStructuredSelector } from 'reselect';\r\n\r\nimport  selectedListItemID  from \"../custom-drop-down/drop-down.utils\";\r\n\r\nimport { requestSelectedUserData } from \"../../redux/user/user.actions\";\r\nimport { requestSelectedAssetData } from \"../../redux/asset/asset.actions\";\r\n\r\nimport { \r\n    requestAssetDropDownOptions, \r\n    requestUserDropDownOptions \r\n    } from '../../redux/drop-downs/drop-down.actions'\r\n\r\nimport { currentMemberId } from \"../../redux/site-member/site-member.selectors\";\r\nimport { selectUsers, selectAssets } from \"../../redux/drop-downs/drop-down.selectors\";\r\n\r\nimport CustomDropDown from '../custom-drop-down/custom-drop-down.component';\r\nimport {DropDownContainer, DropDownInner, Tag } from \"./drop-down-container.styles\";\r\n\r\n\r\nconst ScanboxContainer = ({ \r\n    memberId, assets, users, \r\n    requestAssetDropDownOptions, \r\n    requestUserDropDownOptions, \r\n    requestSelectedAssetData, \r\n    requestSelectedUserData}) => {\r\n    \r\n    useEffect(() => {\r\n        // Get Data from /allunits.\r\n        requestAssetDropDownOptions(memberId)\r\n      }, [requestAssetDropDownOptions, memberId]); //\r\n\r\n      useEffect(() => {\r\n        // Get Data from /allusers when component mounts.\r\n        requestUserDropDownOptions(memberId)\r\n      }, [requestUserDropDownOptions, memberId]);  \r\n\r\n    return (\r\n        <DropDownContainer>\r\n            <DropDownInner>\r\n                <Tag>ASSET ID</Tag>\r\n                <CustomDropDown isHomePage  onChange={() => requestSelectedAssetData(selectedListItemID('asset-list'), memberId)} id=\"asset-list\" optionList={assets}/> \r\n                <Tag>USER ID</Tag>\r\n                <CustomDropDown isHomePage onChange={requestSelectedUserData} id=\"user-list\" optionList={users}/> \r\n            </DropDownInner>\r\n        </DropDownContainer>\r\n    )}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    memberId: currentMemberId,\r\n    assets: selectAssets,\r\n    users: selectUsers\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    requestSelectedAssetData: (assetId, ownerId) => { dispatch(requestSelectedAssetData({assetId, ownerId}))},\r\n    requestAssetDropDownOptions: (memberId) => { dispatch(requestAssetDropDownOptions(memberId))},\r\n    requestUserDropDownOptions: (memberId) => { dispatch( requestUserDropDownOptions(memberId)) },\r\n    requestSelectedUserData: () => { dispatch( requestSelectedUserData ( selectedListItemID('user-list') ) )},\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ScanboxContainer);"]},"metadata":{},"sourceType":"module"}