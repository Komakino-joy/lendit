{"ast":null,"code":"import AssetActionTypes from'./asset.types';export var requestSelectedAssetData=function requestSelectedAssetData(assetAndOwner){return{type:AssetActionTypes.REQUEST_SELECTED_ASSET_START,payload:assetAndOwner};};export var receiveSelectedAssetData=function receiveSelectedAssetData(assetData){return{type:AssetActionTypes.REQUEST_SELECTED_ASSET_SUCCESS,payload:assetData};};export var failureSelectedAssetData=function failureSelectedAssetData(error){return{type:AssetActionTypes.REQUEST_SELECTED_ASSET_FAILURE,payload:error};};export var checkInSelectedAssetStart=function checkInSelectedAssetStart(assetData){return{type:AssetActionTypes.CHECK_IN_SELECTED_ASSET_START,payload:assetData};};export var checkInSelectedAssetSuccess=function checkInSelectedAssetSuccess(assetData){return{type:AssetActionTypes.CHECK_IN_SELECTED_ASSET_SUCCESS,payload:assetData};};export var checkInSelectedAssetFailure=function checkInSelectedAssetFailure(error){return{type:AssetActionTypes.CHECK_IN_SELECTED_ASSET_FAILURE,payload:error};};export var checkOutSelectedAssetStart=function checkOutSelectedAssetStart(assetData){return{type:AssetActionTypes.CHECK_OUT_SELECTED_ASSET_START,payload:assetData};};export var checkOutSelectedAssetSuccess=function checkOutSelectedAssetSuccess(assetData){return{type:AssetActionTypes.CHECK_OUT_SELECTED_ASSET_SUCCESS,payload:assetData};};export var checkOutSelectedAssetFailure=function checkOutSelectedAssetFailure(error){return{type:AssetActionTypes.CHECK_OUT_SELECTED_ASSET_FAILURE,payload:error};};export var quarantineSelectedAssetStart=function quarantineSelectedAssetStart(assetData){return{type:AssetActionTypes.QUARANTINE_SELECTED_ASSET_START,payload:assetData};};export var quarantineSelectedAssetSuccess=function quarantineSelectedAssetSuccess(assetData){return{type:AssetActionTypes.QUARANTINE_SELECTED_ASSET_SUCCESS,payload:assetData};};export var quarantineSelectedAssetFailure=function quarantineSelectedAssetFailure(error){return{type:AssetActionTypes.QUARANTINE_SELECTED_ASSET_FAILURE,payload:error};};export var removeSelectedAssetStart=function removeSelectedAssetStart(assetData){return{type:AssetActionTypes.REMOVE_SELECTED_ASSET_START,payload:assetData};};export var removeSelectedAssetSuccess=function removeSelectedAssetSuccess(assetData){return{type:AssetActionTypes.REMOVE_SELECTED_ASSET_SUCCESS,payload:assetData};};export var removeSelectedAssetFailure=function removeSelectedAssetFailure(error){return{type:AssetActionTypes.REMOVE_SELECTED_ASSET_FAILURE,payload:error};};","map":{"version":3,"sources":["C:/Users/alvar/Documents/a_Web_Development_Projects/FINAL_COPIES_OF_PROJECTS/lendit/lendit/src/redux/asset/asset.actions.js"],"names":["AssetActionTypes","requestSelectedAssetData","assetAndOwner","type","REQUEST_SELECTED_ASSET_START","payload","receiveSelectedAssetData","assetData","REQUEST_SELECTED_ASSET_SUCCESS","failureSelectedAssetData","error","REQUEST_SELECTED_ASSET_FAILURE","checkInSelectedAssetStart","CHECK_IN_SELECTED_ASSET_START","checkInSelectedAssetSuccess","CHECK_IN_SELECTED_ASSET_SUCCESS","checkInSelectedAssetFailure","CHECK_IN_SELECTED_ASSET_FAILURE","checkOutSelectedAssetStart","CHECK_OUT_SELECTED_ASSET_START","checkOutSelectedAssetSuccess","CHECK_OUT_SELECTED_ASSET_SUCCESS","checkOutSelectedAssetFailure","CHECK_OUT_SELECTED_ASSET_FAILURE","quarantineSelectedAssetStart","QUARANTINE_SELECTED_ASSET_START","quarantineSelectedAssetSuccess","QUARANTINE_SELECTED_ASSET_SUCCESS","quarantineSelectedAssetFailure","QUARANTINE_SELECTED_ASSET_FAILURE","removeSelectedAssetStart","REMOVE_SELECTED_ASSET_START","removeSelectedAssetSuccess","REMOVE_SELECTED_ASSET_SUCCESS","removeSelectedAssetFailure","REMOVE_SELECTED_ASSET_FAILURE"],"mappings":"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","sourcesContent":["import AssetActionTypes from './asset.types';\r\n\r\nexport const requestSelectedAssetData = (assetAndOwner) => ({ \r\n    type: AssetActionTypes.REQUEST_SELECTED_ASSET_START,\r\n    payload: assetAndOwner,\r\n});\r\n\r\nexport const receiveSelectedAssetData = (assetData) => ({\r\n     type: AssetActionTypes.REQUEST_SELECTED_ASSET_SUCCESS,\r\n     payload: assetData,\r\n});\r\n\r\nexport const failureSelectedAssetData = (error) => ({\r\n    type: AssetActionTypes.REQUEST_SELECTED_ASSET_FAILURE,\r\n    payload: error,\r\n});\r\n\r\nexport const checkInSelectedAssetStart = (assetData ) => ({\r\n    type: AssetActionTypes.CHECK_IN_SELECTED_ASSET_START,\r\n    payload: assetData,\r\n});\r\n\r\nexport const checkInSelectedAssetSuccess = (assetData) => ({\r\n    type: AssetActionTypes.CHECK_IN_SELECTED_ASSET_SUCCESS, \r\n    payload: assetData,\r\n});\r\n\r\nexport const checkInSelectedAssetFailure = (error) => ({\r\n    type: AssetActionTypes.CHECK_IN_SELECTED_ASSET_FAILURE, \r\n    payload: error,\r\n});\r\n\r\nexport const checkOutSelectedAssetStart = (assetData) => ({\r\n    type: AssetActionTypes.CHECK_OUT_SELECTED_ASSET_START,\r\n    payload: assetData,\r\n});\r\n\r\nexport const checkOutSelectedAssetSuccess = (assetData) => ({\r\n    type: AssetActionTypes.CHECK_OUT_SELECTED_ASSET_SUCCESS, \r\n    payload: assetData,\r\n});\r\n\r\nexport const checkOutSelectedAssetFailure = (error) => ({\r\n    type: AssetActionTypes.CHECK_OUT_SELECTED_ASSET_FAILURE, \r\n    payload: error,\r\n});\r\n\r\nexport const quarantineSelectedAssetStart = (assetData) => ({\r\n    type: AssetActionTypes.QUARANTINE_SELECTED_ASSET_START,\r\n    payload: assetData,\r\n});\r\n\r\nexport const quarantineSelectedAssetSuccess = (assetData) => ({\r\n    type: AssetActionTypes.QUARANTINE_SELECTED_ASSET_SUCCESS, \r\n    payload: assetData\r\n});\r\n\r\nexport const quarantineSelectedAssetFailure = (error) => ({\r\n    type: AssetActionTypes.QUARANTINE_SELECTED_ASSET_FAILURE, \r\n    payload: error\r\n});\r\n\r\nexport const removeSelectedAssetStart = (assetData) => ({\r\n    type: AssetActionTypes.REMOVE_SELECTED_ASSET_START,\r\n    payload: assetData,\r\n});\r\n\r\nexport const removeSelectedAssetSuccess = (assetData) => ({\r\n    type: AssetActionTypes.REMOVE_SELECTED_ASSET_SUCCESS, \r\n    payload: assetData\r\n});\r\n\r\nexport const removeSelectedAssetFailure = (error) => ({\r\n    type: AssetActionTypes.REMOVE_SELECTED_ASSET_FAILURE, \r\n    payload: error\r\n});"]},"metadata":{},"sourceType":"module"}