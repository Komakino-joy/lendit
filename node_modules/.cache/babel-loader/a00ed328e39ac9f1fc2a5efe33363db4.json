{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\bryan.alvarez\\\\Documents\\\\webdev\\\\git\\\\comp-overload\\\\client\\\\src\\\\components\\\\modals\\\\activity-tracking.modal.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport DatePicker from \"react-datepicker\";\nimport { toggleActvityTracking } from \"../../redux/modal/modal.actions\";\nimport { createNewUser } from \"../../services/api\";\nimport { ModalMain, ModalContent, CloseButton, Header, Article, FieldSet, Label, Input, Submit, ActivityTrackingArticle } from \"./modal.styles\";\nimport AssetDropDown from '../custom-drop-down/asset-drop-down.component';\nimport UserDropDown from \"../custom-drop-down/user-drop-down.component\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nconst ActivityTracking = ({\n  toggleActvityTracking,\n  memberId\n}) => {\n  _s();\n\n  const [startDate, setStartDate] = useState(new Date());\n  const [endDate, setEndDate] = useState(new Date());\n  let [userID, setUserID] = useState('');\n  let [fname, setFname] = useState('');\n  let [lname, setLname] = useState('');\n\n  const onUseridChange = event => {\n    setUserID(event.target.value);\n  };\n\n  const onFnameChange = event => {\n    setFname(event.target.value);\n  };\n\n  const onLnameChange = event => {\n    setLname(event.target.value);\n  };\n\n  const inputReset = () => {\n    userID = null;\n    fname = null;\n    lname = null;\n    document.getElementById('userid').value = '';\n    document.getElementById('fname').value = '';\n    document.getElementById('lname').value = '';\n    document.getElementById('userid').focus();\n  };\n\n  const submitUser = event => {\n    if (userID && fname && lname && memberId) {\n      createNewUser(userID, fname, lname, memberId);\n      alert.show(`${userID} submitted.`, {\n        type: 'success',\n        position: 'top center'\n      });\n      inputReset();\n    } else {\n      alert.show('Please ensure that all fields are filled out.', {\n        type: 'error',\n        position: 'top center'\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(ModalMain, {\n    children: /*#__PURE__*/_jsxDEV(ModalContent, {\n      children: [/*#__PURE__*/_jsxDEV(CloseButton, {\n        onClick: () => {\n          toggleActvityTracking();\n        },\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Header, {\n        children: \"Activity Tracking\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ActivityTrackingArticle, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          action: \"sign-up_submit\",\n          method: \"get\",\n          acceptCharset: \"utf-8\",\n          children: [/*#__PURE__*/_jsxDEV(FieldSet, {\n            id: \"sign_up\",\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              htmlFor: \"email-address\",\n              children: \"Start Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n              selected: startDate,\n              onChange: date => setStartDate(date)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Label, {\n              htmlFor: \"email-address\",\n              children: \"End Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n              selected: endDate,\n              timeInputLabel: \"Time:\",\n              dateFormat: \"MM/dd/yyyy h:mm aa\",\n              showTimeInput: true,\n              onChange: date => setEndDate(date)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Label, {\n              htmlFor: \"fname\",\n              children: \"Asset ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(AssetDropDown, {\n              onChange: onFnameChange,\n              type: \"text\",\n              name: \"fname\",\n              id: \"fname\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Label, {\n              htmlFor: \"lname\",\n              children: \"User ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(UserDropDown, {\n              onChange: onLnameChange,\n              type: \"text\",\n              name: \"lname\",\n              id: \"lname\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Submit, {\n            onClick: () => submitUser(),\n            type: \"submit\",\n            defaultValue: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 4\n  }, this);\n};\n\n_s(ActivityTracking, \"qH85uWsP6LIO7EvIQsMfT361cHU=\");\n\n_c = ActivityTracking;\n\nconst mapStateToProps = state => ({\n  memberId: state.memberState.memberId\n});\n\nconst mapDispatchToProps = dispatch => ({\n  toggleAddUser: () => dispatch(toggleActvityTracking())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ActivityTracking);\n\nvar _c;\n\n$RefreshReg$(_c, \"ActivityTracking\");","map":{"version":3,"sources":["C:/Users/bryan.alvarez/Documents/webdev/git/comp-overload/client/src/components/modals/activity-tracking.modal.jsx"],"names":["React","useState","connect","DatePicker","toggleActvityTracking","createNewUser","ModalMain","ModalContent","CloseButton","Header","Article","FieldSet","Label","Input","Submit","ActivityTrackingArticle","AssetDropDown","UserDropDown","ActivityTracking","memberId","startDate","setStartDate","Date","endDate","setEndDate","userID","setUserID","fname","setFname","lname","setLname","onUseridChange","event","target","value","onFnameChange","onLnameChange","inputReset","document","getElementById","focus","submitUser","alert","show","type","position","date","mapStateToProps","state","memberState","mapDispatchToProps","dispatch","toggleAddUser"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport DatePicker from \"react-datepicker\";\r\n\r\nimport { toggleActvityTracking } from \"../../redux/modal/modal.actions\";\r\n\r\nimport { createNewUser } from \"../../services/api\";\r\n\r\nimport { ModalMain, ModalContent, CloseButton, Header, Article,\r\n  FieldSet, Label, Input, Submit, ActivityTrackingArticle\r\n} from \"./modal.styles\";\r\n\r\nimport AssetDropDown from '../custom-drop-down/asset-drop-down.component';\r\nimport UserDropDown from \"../custom-drop-down/user-drop-down.component\";\r\n\r\n\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nconst ActivityTracking = ( {toggleActvityTracking, memberId} ) =>{\r\n\r\n  const [startDate, setStartDate] = useState(new Date());\r\n  const [endDate, setEndDate] = useState(new Date());\r\n\r\n  let [userID, setUserID] = useState('');\r\n  let [fname, setFname] = useState('');\r\n  let [lname, setLname] = useState('');\r\n\r\n  const onUseridChange = (event) => {\r\n    setUserID(event.target.value); \r\n  } ;\r\n\r\n  const onFnameChange = (event) => {\r\n    setFname(event.target.value);\r\n  };\r\n\r\n const onLnameChange = (event) => {\r\n    setLname(event.target.value); \r\n  };\r\n\r\n  const inputReset = () => {\r\n    userID = null;\r\n    fname = null;\r\n    lname = null;\r\n    document.getElementById('userid').value = '';\r\n    document.getElementById('fname').value = '';\r\n    document.getElementById('lname').value = '';\r\n    document.getElementById('userid').focus();\r\n  };\r\n\r\n  const submitUser = (event) => {\r\n    if (userID && fname && lname && memberId){\r\n      createNewUser(userID, fname, lname, memberId);\r\n      alert.show(`${userID} submitted.`, {type: 'success', position:'top center'});\r\n      inputReset();\r\n    } else {\r\n      alert.show('Please ensure that all fields are filled out.', {type: 'error', position:'top center'});\r\n    }\r\n  };\r\n  \r\n  return (\r\n   <ModalMain>\r\n      <ModalContent>\r\n        {/* Retrieve updated list of users when modal is closed. */}\r\n        <CloseButton onClick={() => {toggleActvityTracking()}}>&times;</CloseButton>\r\n        <Header>Activity Tracking</Header>\r\n        <ActivityTrackingArticle>\r\n          <div action=\"sign-up_submit\" method=\"get\" acceptCharset=\"utf-8\">\r\n            <FieldSet id=\"sign_up\">\r\n                <Label htmlFor=\"email-address\">Start Date</Label>\r\n                <DatePicker selected={startDate} onChange={date => setStartDate(date)} />\r\n                <Label htmlFor=\"email-address\">End Date</Label>\r\n                <DatePicker selected={endDate}       timeInputLabel=\"Time:\"\r\n      dateFormat=\"MM/dd/yyyy h:mm aa\"\r\n      showTimeInput onChange={date => setEndDate(date)} />\r\n                <Label htmlFor=\"fname\">Asset ID</Label>\r\n                <AssetDropDown onChange={onFnameChange} type=\"text\" name=\"fname\"  id=\"fname\" />\r\n                <Label htmlFor=\"lname\">User ID</Label>\r\n                <UserDropDown onChange={onLnameChange} type=\"text\" name=\"lname\"  id=\"lname\"/>\r\n            </FieldSet>\r\n            <Submit onClick={() => submitUser()} type = \"submit\" defaultValue=\"Submit\"/>\r\n          </div>\r\n        </ActivityTrackingArticle>\r\n      </ModalContent>\r\n   </ModalMain>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  memberId: state.memberState.memberId\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  toggleAddUser : () => dispatch(toggleActvityTracking())\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ActivityTracking);"]},"metadata":{},"sourceType":"module"}