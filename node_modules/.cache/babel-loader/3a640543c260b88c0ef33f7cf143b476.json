{"ast":null,"code":"import{createStore,applyMiddleware}from\"redux\";import{composeWithDevTools}from'redux-devtools-extension';import logger from'redux-logger';import createSagaMiddleware from'redux-saga';import{persistStore}from\"redux-persist\";import rootReducer from'./root-reducer';import rootSaga from'./root-saga';var sagaMiddleware=createSagaMiddleware();var middlewares=[sagaMiddleware];if(process.NODE_ENV==='development'){middlewares.push(logger);};export var store=createStore(rootReducer,composeWithDevTools(applyMiddleware.apply(void 0,middlewares)));sagaMiddleware.run(rootSaga);export var persistor=persistStore(store);","map":{"version":3,"sources":["C:/Users/alvar/Documents/WebDev/lendit/lendit/src/redux/store.js"],"names":["createStore","applyMiddleware","composeWithDevTools","logger","createSagaMiddleware","persistStore","rootReducer","rootSaga","sagaMiddleware","middlewares","process","NODE_ENV","push","store","run","persistor"],"mappings":"AAAA,OAASA,WAAT,CAAsBC,eAAtB,KAA6C,OAA7C,CACA,OAASC,mBAAT,KAAoC,0BAApC,CACA,MAAOC,CAAAA,MAAP,KAAmB,cAAnB,CACA,MAAOC,CAAAA,oBAAP,KAAiC,YAAjC,CAGA,OAASC,YAAT,KAA6B,eAA7B,CACA,MAAOC,CAAAA,WAAP,KAAwB,gBAAxB,CACA,MAAOC,CAAAA,QAAP,KAAqB,aAArB,CAEA,GAAMC,CAAAA,cAAc,CAAGJ,oBAAoB,EAA3C,CACA,GAAMK,CAAAA,WAAW,CAAG,CAACD,cAAD,CAApB,CAEA,GAAIE,OAAO,CAACC,QAAR,GAAqB,aAAzB,CAAwC,CACpCF,WAAW,CAACG,IAAZ,CAAiBT,MAAjB,EACH,EAED,MAAO,IAAMU,CAAAA,KAAK,CAAGb,WAAW,CAC5BM,WAD4B,CAChBJ,mBAAmB,CAC/BD,eAAe,MAAf,QAAmBQ,WAAnB,CAD+B,CADH,CAAzB,CAKPD,cAAc,CAACM,GAAf,CAAmBP,QAAnB,EAEA,MAAO,IAAMQ,CAAAA,SAAS,CAAGV,YAAY,CAACQ,KAAD,CAA9B","sourcesContent":["import { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport logger from 'redux-logger';\r\nimport createSagaMiddleware from 'redux-saga';\r\n\r\n\r\nimport { persistStore } from \"redux-persist\";\r\nimport rootReducer from './root-reducer';\r\nimport rootSaga from './root-saga';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst middlewares = [sagaMiddleware]\r\n\r\nif (process.NODE_ENV === 'development') {\r\n    middlewares.push(logger);\r\n};\r\n\r\nexport const store = createStore(\r\n    rootReducer,composeWithDevTools( \r\n    applyMiddleware(...middlewares),\r\n    ));\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport const persistor = persistStore(store);"]},"metadata":{},"sourceType":"module"}