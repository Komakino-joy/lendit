{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\alvar\\\\Documents\\\\WebDev\\\\comp-overload\\\\client\\\\src\\\\components\\\\modals\\\\activity-report.modal.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport { toggleActvityReport } from \"../../redux/modal/modal.actions\";\nimport Loader from 'react-loader-spinner';\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport { ModalMain, ModalReportContent, CloseButton, Header, TableContainer, Table, TableHeading, TableRow, TableBody } from \"./modal.styles\";\n\nconst ActivityReport = ({\n  toggleActvityReport,\n  memberId,\n  startDate,\n  endDate\n}) => {\n  _s();\n\n  const [data, setData] = useState();\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await axios({\n        method: 'post',\n        url: 'http://localhost:3000/activitytracking',\n        data: {\n          id: memberId,\n          startDate: startDate,\n          endDate: endDate\n        }\n      });\n      setData(result.data);\n    };\n\n    fetchData(memberId);\n  }, [memberId, startDate, endDate]);\n  return /*#__PURE__*/_jsxDEV(ModalMain, {\n    children: /*#__PURE__*/_jsxDEV(ModalReportContent, {\n      children: [/*#__PURE__*/_jsxDEV(CloseButton, {\n        onClick: toggleActvityReport,\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Header, {\n        children: \"Available Units\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n        children: data ? /*#__PURE__*/_jsxDEV(Table, {\n          cellSpacing: \"0\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableHeading, {\n                children: \"Asset ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(TableHeading, {\n                children: \"Asset Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(TableHeading, {\n                children: \"Model\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: data.map(unit => /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: unit.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: unit.startDate\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: unit.endDate\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 29\n              }, this)]\n            }, unit.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 25\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(Loader, {\n          type: \"Puff\",\n          color: \"#966eff\",\n          height: 70,\n          width: 70,\n          className: \"loader\",\n          style: {\n            position: \"absolute\",\n            top: \"20%\",\n            left: \"50%\",\n            margin: \"-25px 0 0 -25px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 4\n  }, this);\n};\n\n_s(ActivityReport, \"WZ2PO9A64oHRexE1CE+yX3ebuoA=\");\n\n_c = ActivityReport;\n\nconst mapStateToProps = state => ({\n  memberId: state.memberState.memberId\n});\n\nconst mapDispatchToProps = dispatch => ({\n  toggleActvityReport: () => dispatch(toggleActvityReport())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ActivityReport);\n\nvar _c;\n\n$RefreshReg$(_c, \"ActivityReport\");","map":{"version":3,"sources":["C:/Users/alvar/Documents/WebDev/comp-overload/client/src/components/modals/activity-report.modal.jsx"],"names":["React","useEffect","useState","axios","connect","toggleActvityReport","Loader","ModalMain","ModalReportContent","CloseButton","Header","TableContainer","Table","TableHeading","TableRow","TableBody","ActivityReport","memberId","startDate","endDate","data","setData","fetchData","result","method","url","id","map","unit","position","top","left","margin","mapStateToProps","state","memberState","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\nimport { toggleActvityReport } from \"../../redux/modal/modal.actions\";\r\n\r\n\r\nimport Loader from 'react-loader-spinner'\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\"\r\n\r\nimport { ModalMain, ModalReportContent, CloseButton, Header, \r\n    TableContainer, Table, TableHeading, TableRow, TableBody\r\n} from \"./modal.styles\";\r\n\r\n\r\nconst ActivityReport = ({ toggleActvityReport, memberId, startDate, endDate }) => {\r\n\r\n    const [data, setData] = useState();\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n          const result = await axios({\r\n            method: 'post',\r\n            url: 'http://localhost:3000/activitytracking',\r\n            data: {\r\n                id: memberId,\r\n                startDate: startDate,\r\n                endDate: endDate\r\n            }\r\n        }\r\n          );\r\n          setData(result.data);\r\n        };\r\n     \r\n        fetchData(memberId);\r\n      }, [memberId, startDate, endDate]);\r\n\r\n  return (\r\n   <ModalMain>\r\n        <ModalReportContent>\r\n            <CloseButton onClick={toggleActvityReport}>&times;</CloseButton>\r\n            <Header>Available Units</Header>\r\n            <TableContainer>\r\n            {data ?\r\n                <Table cellSpacing=\"0\">\r\n                <thead>\r\n                    <TableRow >\r\n                        <TableHeading>Asset ID</TableHeading>\r\n                        <TableHeading>Asset Name</TableHeading>\r\n                        <TableHeading>Model</TableHeading>\r\n                    </TableRow>\r\n                </thead>\r\n                <TableBody>\r\n                        {data.map(unit => (\r\n                        <TableRow key={unit.id}>\r\n                            <td>{unit.id}</td>\r\n                            <td>{unit.startDate}</td>\r\n                            <td>{unit.endDate}</td>\r\n                        </TableRow>\r\n                    ))}\r\n                </TableBody>\r\n                </Table>\r\n            : \r\n                <Loader type=\"Puff\"color=\"#966eff\"height={70} width={70}className='loader' \r\n                    style={{    \r\n                        position: \"absolute\",\r\n                        top: \"20%\",\r\n                        left: \"50%\",\r\n                        margin: \"-25px 0 0 -25px\"\r\n                    }} \r\n                    />\r\n            }\r\n            </TableContainer>\r\n        </ModalReportContent>\r\n\r\n   </ModalMain>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    memberId: state.memberState.memberId,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    toggleActvityReport: () => dispatch(toggleActvityReport())\r\n  });\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ActivityReport);"]},"metadata":{},"sourceType":"module"}