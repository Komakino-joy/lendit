{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\bryan.alvarez\\\\Documents\\\\webdev\\\\git\\\\comp-overload\\\\client\\\\src\\\\components\\\\modals\\\\add-model.modal.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { connect } from 'react-redux';\nimport { useAlert } from 'react-alert';\nimport axios from 'axios';\nimport { toggleAddModel } from \"../../redux/pop-ups/pop-ups.actions\";\nimport { requestModelDropDownOptions } from '../../redux/drop-downs/drop-down.actions';\nimport { SubModalMain, SubModalContent, CloseButton, Header, Article, FieldSet, Label, Input, Submit } from \"./modal.styles\";\n\nconst AddModel = ({\n  toggleAddModel,\n  getModelOptions,\n  memberId\n}) => {\n  _s();\n\n  const alert = useAlert();\n  let [model, setModel] = useState('');\n  let [filename, setFilename] = useState(null);\n\n  const onModelChange = event => {\n    setModel(event.target.value);\n  };\n\n  const onFileChange = event => {\n    setFilename(event.target.files[0]);\n  };\n\n  const inputReset = () => {\n    model = null;\n    filename = null;\n    document.getElementById('model').value = '';\n    document.getElementById('file').value = '';\n  };\n\n  const onFileUpload = () => {\n    if (model && filename && memberId) {\n      // Create an object of formData \n      const formData = new FormData(); // Update the formData object \n\n      formData.append(\"myFile\", filename, filename.name);\n      formData.append('model', model);\n      formData.append('memberId', memberId); // Request made to the backend api \n      // Send formData object \n\n      axios.post(\"http://localhost:3000/upload\", formData);\n      alert.show(`${model} submitted`, {\n        type: 'success',\n        position: 'top center'\n      });\n      inputReset();\n    } else {\n      alert.show('Please ensure that both fields contain information.', {\n        type: 'error',\n        position: 'top center'\n      });\n    }\n  };\n\n  const process = () => {\n    const file = document.querySelector(\"#file\").files[0];\n    if (!file) return;\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n\n    reader.onload = function (event) {\n      const imgElement = document.createElement(\"img\");\n      imgElement.src = event.target.result;\n\n      imgElement.onload = function (e) {\n        const canvas = document.createElement(\"canvas\");\n        const MAX_WIDTH = 320;\n        const scaleSize = MAX_WIDTH / e.target.width;\n        canvas.width = MAX_WIDTH;\n        canvas.height = e.target.height * scaleSize;\n        const ctx = canvas.getContext(\"2d\");\n        ctx.drawImage(e.target, 0, 0, canvas.width, canvas.height);\n        const srcEncoded = ctx.canvas.toDataURL(e.target, \"image/jpeg\");\n        axios.post(\"http://localhost:3000/upload\", 'hello');\n        alert.show(`${model} submitted`, {\n          type: 'success',\n          position: 'top center'\n        });\n        inputReset();\n      };\n    };\n  };\n\n  return /*#__PURE__*/_jsxDEV(SubModalMain, {\n    children: /*#__PURE__*/_jsxDEV(SubModalContent, {\n      children: [/*#__PURE__*/_jsxDEV(CloseButton, {\n        onClick: () => {\n          toggleAddModel();\n          getModelOptions(memberId);\n        },\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Header, {\n        children: \"Add Model\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Article, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          action: \"sign-up_submit\",\n          method: \"get\",\n          acceptCharset: \"utf-8\",\n          children: [/*#__PURE__*/_jsxDEV(FieldSet, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              htmlFor: \"model\",\n              children: \"Model Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              id: \"model\",\n              type: \"text\",\n              name: \"model\",\n              onChange: onModelChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(Label, {\n              htmlFor: \"image\",\n              children: \"Image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              className: \"flex flex-column\",\n              encType: \"multipart/form-data\",\n              method: \"POST\",\n              children: /*#__PURE__*/_jsxDEV(Input, {\n                id: \"file\",\n                type: \"file\",\n                accept: \".jpg, .jpeg, .png\",\n                name: \"pic\",\n                onChange: onFileChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: process,\n              children: \"Process\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                id: \"input\",\n                alt: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                id: \"output\",\n                alt: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 27\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Submit, {\n            type: \"Submit\",\n            defaultValue: \"Submit\",\n            onClick: onFileUpload\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 4\n  }, this);\n};\n\n_s(AddModel, \"UgkIQt5ZyxexCTfEV+ktL3SPpfs=\", false, function () {\n  return [useAlert];\n});\n\n_c = AddModel;\n\nconst mapStateToProps = state => ({\n  memberId: state.memberState.memberId\n});\n\nconst mapDispatchToProps = dispatch => ({\n  toggleAddModel: () => dispatch(toggleAddModel()),\n  getModelOptions: memberId => {\n    dispatch(requestModelDropDownOptions(memberId));\n  }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddModel);\n\nvar _c;\n\n$RefreshReg$(_c, \"AddModel\");","map":{"version":3,"sources":["C:/Users/bryan.alvarez/Documents/webdev/git/comp-overload/client/src/components/modals/add-model.modal.jsx"],"names":["React","useState","connect","useAlert","axios","toggleAddModel","requestModelDropDownOptions","SubModalMain","SubModalContent","CloseButton","Header","Article","FieldSet","Label","Input","Submit","AddModel","getModelOptions","memberId","alert","model","setModel","filename","setFilename","onModelChange","event","target","value","onFileChange","files","inputReset","document","getElementById","onFileUpload","formData","FormData","append","name","post","show","type","position","process","file","querySelector","reader","FileReader","readAsDataURL","onload","imgElement","createElement","src","result","e","canvas","MAX_WIDTH","scaleSize","width","height","ctx","getContext","drawImage","srcEncoded","toDataURL","mapStateToProps","state","memberState","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState }  from \"react\";\r\nimport {connect} from 'react-redux';\r\nimport { useAlert } from 'react-alert';\r\n\r\nimport axios from 'axios';\r\nimport { toggleAddModel } from \"../../redux/pop-ups/pop-ups.actions\";\r\nimport { requestModelDropDownOptions } from '../../redux/drop-downs/drop-down.actions';\r\n\r\nimport { SubModalMain, SubModalContent, CloseButton, Header, Article,\r\n        FieldSet, Label, Input, Submit } from \"./modal.styles\";\r\n\r\n const AddModel = ({ toggleAddModel, getModelOptions, memberId }) => { \r\n\r\n  const alert = useAlert();\r\n\r\n  let [model, setModel] = useState('');\r\n  let [filename, setFilename] = useState(null);\r\n\r\n  const onModelChange = (event) => {\r\n    setModel(event.target.value);\r\n  };\r\n\r\n  const onFileChange = (event) => {\r\n     setFilename(event.target.files[0]);\r\n  };\r\n\r\n  const inputReset = () => {\r\n    model = null;\r\n    filename = null;\r\n    document.getElementById('model').value = '';\r\n    document.getElementById('file').value = '';\r\n  };\r\n\r\n  const onFileUpload = () => { \r\n    if (model && filename && memberId){\r\n        // Create an object of formData \r\n        const formData = new FormData(); \r\n        // Update the formData object \r\n        formData.append( \r\n          \"myFile\", \r\n          filename, \r\n          filename.name,\r\n        ); \r\n        formData.append('model', model);\r\n        formData.append('memberId', memberId);\r\n        // Request made to the backend api \r\n        // Send formData object \r\n        axios.post(\"http://localhost:3000/upload\", formData )\r\n        alert.show(`${model} submitted`, {type: 'success', position:'top center'});\r\n        inputReset();\r\n    } else {\r\n      alert.show('Please ensure that both fields contain information.', {type: 'error', position:'top center'});\r\n    }\r\n   };\r\n     \r\n  const process = () => {\r\n    const file = document.querySelector(\"#file\").files[0];\r\n  \r\n    if (!file) return;\r\n  \r\n    const reader = new FileReader();\r\n  \r\n    reader.readAsDataURL(file);\r\n  \r\n    reader.onload = function (event) {\r\n      const imgElement = document.createElement(\"img\");\r\n      imgElement.src = event.target.result;\r\n  \r\n      imgElement.onload = function (e) {\r\n        const canvas = document.createElement(\"canvas\");\r\n        const MAX_WIDTH = 320;\r\n  \r\n        const scaleSize = MAX_WIDTH / e.target.width;\r\n        canvas.width = MAX_WIDTH;\r\n        canvas.height = e.target.height * scaleSize;\r\n  \r\n        const ctx = canvas.getContext(\"2d\");\r\n  \r\n        ctx.drawImage(e.target, 0, 0, canvas.width, canvas.height);\r\n\r\n        const srcEncoded = ctx.canvas.toDataURL(e.target, \"image/jpeg\");\r\n\r\n        axios.post(\"http://localhost:3000/upload\", 'hello' )\r\n        alert.show(`${model} submitted`, {type: 'success', position:'top center'});\r\n        inputReset();\r\n      };\r\n    };\r\n  }\r\n\r\n  return (\r\n   <SubModalMain>\r\n      <SubModalContent>\r\n        {/* Retrieve updated list of models when modal is closed. */}\r\n      <CloseButton onClick={() => {toggleAddModel(); getModelOptions(memberId);} }>&times;</CloseButton>\r\n          \r\n              <Header>Add Model</Header>\r\n              <Article>\r\n                <div action=\"sign-up_submit\" method=\"get\" acceptCharset=\"utf-8\">\r\n                  <FieldSet>\r\n                      <Label htmlFor=\"model\">Model Name</Label>\r\n                      <Input id=\"model\" type=\"text\" name=\"model\" onChange={onModelChange}/>\r\n\r\n                      <Label htmlFor=\"image\">Image</Label>\r\n                      <form className='flex flex-column' encType=\"multipart/form-data\" method=\"POST\"> \r\n                        <Input id=\"file\" type=\"file\" accept=\".jpg, .jpeg, .png\" name=\"pic\" onChange={onFileChange}/>\r\n                      </form>\r\n                      <button onClick={process}>Process</button>\r\n                          <div>\r\n                            <img id=\"input\" alt='' />\r\n                          </div>\r\n                          <div>\r\n                            <img id=\"output\" alt=''  />\r\n                          </div>\r\n\r\n                  </FieldSet>\r\n                    <Submit type = \"Submit\" defaultValue=\"Submit\" onClick={onFileUpload} />\r\n                </div>\r\n              </Article>\r\n      </SubModalContent>\r\n   </SubModalMain>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  memberId: state.memberState.memberId,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  toggleAddModel: () => dispatch(toggleAddModel()),\r\n  getModelOptions : (memberId) => { dispatch(requestModelDropDownOptions(memberId))}\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddModel);\r\n"]},"metadata":{},"sourceType":"module"}