{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\alvar\\\\Documents\\\\WebDev\\\\comp-overload\\\\client\\\\src\\\\components\\\\modals\\\\add-model.modal.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { connect } from 'react-redux';\nimport { useAlert } from 'react-alert';\nimport axios from 'axios';\nimport { toggleAddModel } from \"../../redux/modal/modal.actions\";\nimport { requestModelDropDownOptions } from '../../redux/drop-downs/drop-down.actions';\nimport { SubModalMain, SubModalContent, CloseButton, Header, Article, FieldSet, Label, Input, Submit } from \"./modal.styles\";\n\nconst AddModel = ({\n  toggleAddModel,\n  getModelOptions,\n  memberId\n}) => {\n  _s();\n\n  const alert = useAlert();\n  let [model, setModel] = useState('');\n\n  const onModelChange = event => {\n    setModel(event.target.value);\n  };\n\n  const inputReset = () => {\n    model = null;\n    document.getElementById('model').value = '';\n    document.getElementById('file').value = '';\n  };\n\n  const onFileUpload = () => {\n    const file = document.querySelector(\"#file\").files[0];\n    if (!file) return;\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n\n    reader.onload = event => {\n      const imgElement = document.createElement(\"img\");\n      imgElement.src = event.target.result;\n\n      imgElement.onload = e => {\n        const canvas = document.createElement(\"canvas\");\n        const MAX_WIDTH = 400;\n\n        if (e.target.width > 400) {\n          const scaleSize = MAX_WIDTH / e.target.width;\n          canvas.width = MAX_WIDTH;\n          canvas.height = e.target.height * scaleSize;\n        } else {\n          canvas.width = e.target.width;\n          canvas.height = e.target.height;\n        }\n\n        const ctx = canvas.getContext(\"2d\");\n        ctx.drawImage(e.target, 0, 0, canvas.width, canvas.height);\n        const srcEncoded = ctx.canvas.toDataURL(e.target, \"image/jpg\");\n        axios({\n          method: 'post',\n          url: \"http://localhost:3000/upload\",\n          data: {\n            image: srcEncoded,\n            model: model,\n            memberId: memberId\n          }\n        });\n        alert.show(`${model} submitted`, {\n          type: 'success',\n          position: 'top center'\n        });\n        inputReset();\n      };\n    };\n  };\n\n  return /*#__PURE__*/_jsxDEV(SubModalMain, {\n    children: /*#__PURE__*/_jsxDEV(SubModalContent, {\n      children: [/*#__PURE__*/_jsxDEV(CloseButton, {\n        onClick: () => {\n          toggleAddModel();\n          getModelOptions(memberId);\n        },\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Header, {\n        children: \"Add Model\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Article, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          action: \"sign-up_submit\",\n          method: \"get\",\n          acceptCharset: \"utf-8\",\n          children: [/*#__PURE__*/_jsxDEV(FieldSet, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              htmlFor: \"model\",\n              children: \"Model Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              id: \"model\",\n              type: \"text\",\n              name: \"model\",\n              onChange: onModelChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(Label, {\n              htmlFor: \"image\",\n              children: \"Image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              className: \"flex flex-column\",\n              encType: \"multipart/form-data\",\n              method: \"POST\",\n              children: /*#__PURE__*/_jsxDEV(Input, {\n                id: \"file\",\n                type: \"file\",\n                accept: \".jpg, .jpeg, .png\",\n                name: \"pic\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Submit, {\n            type: \"Submit\",\n            defaultValue: \"Submit\",\n            onClick: onFileUpload\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 4\n  }, this);\n};\n\n_s(AddModel, \"ZtaOR1wpyc12ix7FIfHLM40b0ik=\", false, function () {\n  return [useAlert];\n});\n\n_c = AddModel;\n\nconst mapStateToProps = state => ({\n  memberId: state.memberState.memberId\n});\n\nconst mapDispatchToProps = dispatch => ({\n  toggleAddModel: () => dispatch(toggleAddModel()),\n  getModelOptions: memberId => {\n    dispatch(requestModelDropDownOptions(memberId));\n  }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddModel);\n\nvar _c;\n\n$RefreshReg$(_c, \"AddModel\");","map":{"version":3,"sources":["C:/Users/alvar/Documents/WebDev/comp-overload/client/src/components/modals/add-model.modal.jsx"],"names":["React","useState","connect","useAlert","axios","toggleAddModel","requestModelDropDownOptions","SubModalMain","SubModalContent","CloseButton","Header","Article","FieldSet","Label","Input","Submit","AddModel","getModelOptions","memberId","alert","model","setModel","onModelChange","event","target","value","inputReset","document","getElementById","onFileUpload","file","querySelector","files","reader","FileReader","readAsDataURL","onload","imgElement","createElement","src","result","e","canvas","MAX_WIDTH","width","scaleSize","height","ctx","getContext","drawImage","srcEncoded","toDataURL","method","url","data","image","show","type","position","mapStateToProps","state","memberState","mapDispatchToProps","dispatch"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAiC,OAAjC;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAASC,QAAT,QAAyB,aAAzB;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,QAA+B,iCAA/B;AACA,SAASC,2BAAT,QAA4C,0CAA5C;AAEA,SAASC,YAAT,EAAuBC,eAAvB,EAAwCC,WAAxC,EAAqDC,MAArD,EAA6DC,OAA7D,EACQC,QADR,EACkBC,KADlB,EACyBC,KADzB,EACgCC,MADhC,QAC8C,gBAD9C;;AAGC,MAAMC,QAAQ,GAAG,CAAC;AAAEX,EAAAA,cAAF;AAAkBY,EAAAA,eAAlB;AAAmCC,EAAAA;AAAnC,CAAD,KAAmD;AAAA;;AAEnE,QAAMC,KAAK,GAAGhB,QAAQ,EAAtB;AAEA,MAAI,CAACiB,KAAD,EAAQC,QAAR,IAAoBpB,QAAQ,CAAC,EAAD,CAAhC;;AAEA,QAAMqB,aAAa,GAAIC,KAAD,IAAW;AAC/BF,IAAAA,QAAQ,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAR;AACD,GAFD;;AAIA,QAAMC,UAAU,GAAG,MAAM;AACvBN,IAAAA,KAAK,GAAG,IAAR;AACAO,IAAAA,QAAQ,CAACC,cAAT,CAAwB,OAAxB,EAAiCH,KAAjC,GAAyC,EAAzC;AACAE,IAAAA,QAAQ,CAACC,cAAT,CAAwB,MAAxB,EAAgCH,KAAhC,GAAwC,EAAxC;AACD,GAJD;;AAOA,QAAMI,YAAY,GAAG,MAAM;AACzB,UAAMC,IAAI,GAAGH,QAAQ,CAACI,aAAT,CAAuB,OAAvB,EAAgCC,KAAhC,CAAsC,CAAtC,CAAb;AAEA,QAAI,CAACF,IAAL,EAAW;AAEX,UAAMG,MAAM,GAAG,IAAIC,UAAJ,EAAf;AAEAD,IAAAA,MAAM,CAACE,aAAP,CAAqBL,IAArB;;AAEAG,IAAAA,MAAM,CAACG,MAAP,GAAiBb,KAAD,IAAY;AAC1B,YAAMc,UAAU,GAAGV,QAAQ,CAACW,aAAT,CAAuB,KAAvB,CAAnB;AACAD,MAAAA,UAAU,CAACE,GAAX,GAAiBhB,KAAK,CAACC,MAAN,CAAagB,MAA9B;;AAGAH,MAAAA,UAAU,CAACD,MAAX,GAAqBK,CAAD,IAAO;AACzB,cAAMC,MAAM,GAAGf,QAAQ,CAACW,aAAT,CAAuB,QAAvB,CAAf;AACA,cAAMK,SAAS,GAAG,GAAlB;;AACA,YAAIF,CAAC,CAACjB,MAAF,CAASoB,KAAT,GAAiB,GAArB,EAA0B;AACxB,gBAAMC,SAAS,GAAGF,SAAS,GAAGF,CAAC,CAACjB,MAAF,CAASoB,KAAvC;AACAF,UAAAA,MAAM,CAACE,KAAP,GAAeD,SAAf;AACAD,UAAAA,MAAM,CAACI,MAAP,GAAgBL,CAAC,CAACjB,MAAF,CAASsB,MAAT,GAAkBD,SAAlC;AACD,SAJD,MAIK;AACHH,UAAAA,MAAM,CAACE,KAAP,GAAeH,CAAC,CAACjB,MAAF,CAASoB,KAAxB;AACAF,UAAAA,MAAM,CAACI,MAAP,GAAgBL,CAAC,CAACjB,MAAF,CAASsB,MAAzB;AACD;;AAED,cAAMC,GAAG,GAAGL,MAAM,CAACM,UAAP,CAAkB,IAAlB,CAAZ;AAEAD,QAAAA,GAAG,CAACE,SAAJ,CAAcR,CAAC,CAACjB,MAAhB,EAAwB,CAAxB,EAA2B,CAA3B,EAA8BkB,MAAM,CAACE,KAArC,EAA4CF,MAAM,CAACI,MAAnD;AAEA,cAAMI,UAAU,GAAGH,GAAG,CAACL,MAAJ,CAAWS,SAAX,CAAqBV,CAAC,CAACjB,MAAvB,EAA+B,WAA/B,CAAnB;AAEApB,QAAAA,KAAK,CAAC;AACJgD,UAAAA,MAAM,EAAE,MADJ;AAEJC,UAAAA,GAAG,EAAE,8BAFD;AAGJC,UAAAA,IAAI,EAAE;AACJC,YAAAA,KAAK,EAAEL,UADH;AAEJ9B,YAAAA,KAAK,EAAEA,KAFH;AAGJF,YAAAA,QAAQ,EAAEA;AAHN;AAHF,SAAD,CAAL;AAUAC,QAAAA,KAAK,CAACqC,IAAN,CAAY,GAAEpC,KAAM,YAApB,EAAiC;AAACqC,UAAAA,IAAI,EAAE,SAAP;AAAkBC,UAAAA,QAAQ,EAAC;AAA3B,SAAjC;AAEAhC,QAAAA,UAAU;AACX,OA/BD;AAgCD,KArCD;AAsCD,GA/CD;;AAiDA,sBACC,QAAC,YAAD;AAAA,2BACG,QAAC,eAAD;AAAA,8BAEA,QAAC,WAAD;AAAa,QAAA,OAAO,EAAE,MAAM;AAACrB,UAAAA,cAAc;AAAIY,UAAAA,eAAe,CAACC,QAAD,CAAf;AAA2B,SAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFA,eAIQ,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJR,eAKQ,QAAC,OAAD;AAAA,+BACE;AAAK,UAAA,MAAM,EAAC,gBAAZ;AAA6B,UAAA,MAAM,EAAC,KAApC;AAA0C,UAAA,aAAa,EAAC,OAAxD;AAAA,kCACE,QAAC,QAAD;AAAA,oCACI,QAAC,KAAD;AAAO,cAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI,QAAC,KAAD;AAAO,cAAA,EAAE,EAAC,OAAV;AAAkB,cAAA,IAAI,EAAC,MAAvB;AAA8B,cAAA,IAAI,EAAC,OAAnC;AAA2C,cAAA,QAAQ,EAAEI;AAArD;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAII,QAAC,KAAD;AAAO,cAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJJ,eAKI;AAAM,cAAA,SAAS,EAAC,kBAAhB;AAAmC,cAAA,OAAO,EAAC,qBAA3C;AAAiE,cAAA,MAAM,EAAC,MAAxE;AAAA,qCACE,QAAC,KAAD;AAAO,gBAAA,EAAE,EAAC,MAAV;AAAiB,gBAAA,IAAI,EAAC,MAAtB;AAA6B,gBAAA,MAAM,EAAC,mBAApC;AAAwD,gBAAA,IAAI,EAAC;AAA7D;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAWI,QAAC,MAAD;AAAQ,YAAA,IAAI,EAAG,QAAf;AAAwB,YAAA,YAAY,EAAC,QAArC;AAA8C,YAAA,OAAO,EAAEO;AAAvD;AAAA;AAAA;AAAA;AAAA,kBAXJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cALR;AAAA;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,UADD;AAyBD,CA3FA;;GAAMb,Q;UAESb,Q;;;KAFTa,Q;;AA6FP,MAAM2C,eAAe,GAAIC,KAAD,KAAY;AAClC1C,EAAAA,QAAQ,EAAE0C,KAAK,CAACC,WAAN,CAAkB3C;AADM,CAAZ,CAAxB;;AAIA,MAAM4C,kBAAkB,GAAIC,QAAD,KAAe;AACxC1D,EAAAA,cAAc,EAAE,MAAM0D,QAAQ,CAAC1D,cAAc,EAAf,CADU;AAExCY,EAAAA,eAAe,EAAIC,QAAD,IAAc;AAAE6C,IAAAA,QAAQ,CAACzD,2BAA2B,CAACY,QAAD,CAA5B,CAAR;AAAgD;AAF1C,CAAf,CAA3B;;AAKA,eAAehB,OAAO,CAACyD,eAAD,EAAkBG,kBAAlB,CAAP,CAA6C9C,QAA7C,CAAf","sourcesContent":["import React, { useState }  from \"react\";\r\nimport {connect} from 'react-redux';\r\nimport { useAlert } from 'react-alert';\r\n\r\nimport axios from 'axios';\r\nimport { toggleAddModel } from \"../../redux/modal/modal.actions\";\r\nimport { requestModelDropDownOptions } from '../../redux/drop-downs/drop-down.actions';\r\n\r\nimport { SubModalMain, SubModalContent, CloseButton, Header, Article,\r\n        FieldSet, Label, Input, Submit } from \"./modal.styles\";\r\n\r\n const AddModel = ({ toggleAddModel, getModelOptions, memberId }) => { \r\n\r\n  const alert = useAlert();\r\n\r\n  let [model, setModel] = useState('');\r\n\r\n  const onModelChange = (event) => {\r\n    setModel(event.target.value);\r\n  };\r\n\r\n  const inputReset = () => {\r\n    model = null;\r\n    document.getElementById('model').value = '';\r\n    document.getElementById('file').value = '';\r\n  };\r\n\r\n     \r\n  const onFileUpload = () => {\r\n    const file = document.querySelector(\"#file\").files[0];\r\n  \r\n    if (!file) return;\r\n  \r\n    const reader = new FileReader();\r\n  \r\n    reader.readAsDataURL(file);\r\n  \r\n    reader.onload = (event) =>  {\r\n      const imgElement = document.createElement(\"img\");\r\n      imgElement.src = event.target.result;\r\n      \r\n      \r\n      imgElement.onload = (e) => {\r\n        const canvas = document.createElement(\"canvas\");\r\n        const MAX_WIDTH = 400;\r\n        if (e.target.width > 400) {\r\n          const scaleSize = MAX_WIDTH / e.target.width;\r\n          canvas.width = MAX_WIDTH;\r\n          canvas.height = e.target.height * scaleSize;\r\n        }else{\r\n          canvas.width = e.target.width;\r\n          canvas.height = e.target.height\r\n        }\r\n  \r\n        const ctx = canvas.getContext(\"2d\");\r\n  \r\n        ctx.drawImage(e.target, 0, 0, canvas.width, canvas.height);\r\n\r\n        const srcEncoded = ctx.canvas.toDataURL(e.target, \"image/jpg\");\r\n\r\n        axios({\r\n          method: 'post',\r\n          url: \"http://localhost:3000/upload\",\r\n          data: {\r\n            image: srcEncoded,\r\n            model: model,\r\n            memberId: memberId\r\n          }\r\n        });\r\n\r\n        alert.show(`${model} submitted`, {type: 'success', position:'top center'});\r\n\r\n        inputReset();\r\n      };\r\n    };\r\n  }\r\n\r\n  return (\r\n   <SubModalMain>\r\n      <SubModalContent>\r\n        {/* Retrieve updated list of models when modal is closed. */}\r\n      <CloseButton onClick={() => {toggleAddModel(); getModelOptions(memberId);} }>&times;</CloseButton>\r\n          \r\n              <Header>Add Model</Header>\r\n              <Article>\r\n                <div action=\"sign-up_submit\" method=\"get\" acceptCharset=\"utf-8\">\r\n                  <FieldSet>\r\n                      <Label htmlFor=\"model\">Model Name</Label>\r\n                      <Input id=\"model\" type=\"text\" name=\"model\" onChange={onModelChange}/>\r\n\r\n                      <Label htmlFor=\"image\">Image</Label>\r\n                      <form className='flex flex-column' encType=\"multipart/form-data\" method=\"POST\"> \r\n                        <Input id=\"file\" type=\"file\" accept=\".jpg, .jpeg, .png\" name=\"pic\"/>\r\n                      </form>\r\n    \r\n                  </FieldSet>\r\n                    <Submit type = \"Submit\" defaultValue=\"Submit\" onClick={onFileUpload} />\r\n                </div>\r\n              </Article>\r\n      </SubModalContent>\r\n   </SubModalMain>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  memberId: state.memberState.memberId,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  toggleAddModel: () => dispatch(toggleAddModel()),\r\n  getModelOptions : (memberId) => { dispatch(requestModelDropDownOptions(memberId))}\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddModel);\r\n"]},"metadata":{},"sourceType":"module"}