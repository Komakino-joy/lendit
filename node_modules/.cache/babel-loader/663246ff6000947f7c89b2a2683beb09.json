{"ast":null,"code":"import { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport logger from 'redux-logger';\nimport createSagaMiddleware from 'redux-saga';\nimport { persistStore } from \"redux-persist\";\nimport rootReducer from './root-reducer';\nimport rootSaga from './root-saga';\nconst sagaMiddleware = createSagaMiddleware();\nconst middlewares = [sagaMiddleware, logger];\n\nif (process.NODE_ENV === 'development') {\n  middlewares.push(logger);\n}\n\n;\nexport const store = createStore(rootReducer, composeWithDevTools(applyMiddleware(...middlewares)));\nsagaMiddleware.run(rootSaga);\nexport const persistor = persistStore(store);","map":{"version":3,"sources":["C:/Users/alvar/Documents/WebDev/lendit/lendit/src/redux/store.js"],"names":["createStore","applyMiddleware","composeWithDevTools","logger","createSagaMiddleware","persistStore","rootReducer","rootSaga","sagaMiddleware","middlewares","process","NODE_ENV","push","store","run","persistor"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AAGA,SAASC,YAAT,QAA6B,eAA7B;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,QAAP,MAAqB,aAArB;AAEA,MAAMC,cAAc,GAAGJ,oBAAoB,EAA3C;AACA,MAAMK,WAAW,GAAG,CAACD,cAAD,EAAiBL,MAAjB,CAApB;;AAEA,IAAIO,OAAO,CAACC,QAAR,KAAqB,aAAzB,EAAwC;AACpCF,EAAAA,WAAW,CAACG,IAAZ,CAAiBT,MAAjB;AACH;;AAAA;AAED,OAAO,MAAMU,KAAK,GAAGb,WAAW,CAC5BM,WAD4B,EAChBJ,mBAAmB,CAC/BD,eAAe,CAAC,GAAGQ,WAAJ,CADgB,CADH,CAAzB;AAKPD,cAAc,CAACM,GAAf,CAAmBP,QAAnB;AAEA,OAAO,MAAMQ,SAAS,GAAGV,YAAY,CAACQ,KAAD,CAA9B","sourcesContent":["import { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport logger from 'redux-logger';\r\nimport createSagaMiddleware from 'redux-saga';\r\n\r\n\r\nimport { persistStore } from \"redux-persist\";\r\nimport rootReducer from './root-reducer';\r\nimport rootSaga from './root-saga';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst middlewares = [sagaMiddleware, logger]\r\n\r\nif (process.NODE_ENV === 'development') {\r\n    middlewares.push(logger);\r\n};\r\n\r\nexport const store = createStore(\r\n    rootReducer,composeWithDevTools( \r\n    applyMiddleware(...middlewares),\r\n    ));\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport const persistor = persistStore(store);"]},"metadata":{},"sourceType":"module"}