{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\bryan.alvarez\\\\Documents\\\\webdev\\\\git\\\\comp-overload\\\\client\\\\src\\\\components\\\\center\\\\center.component.jsx\";\n// import React, { useEffect, useState } from 'react'\nimport CustomButton from '../custom-button/custom-button.component';\nimport { connect } from \"react-redux\";\nimport base64ArrayBuffer from '../../utils/base64';\nimport { assetTransaction } from \"./center.utils\";\nimport image404 from '../../images/404.png';\nimport { checkInSelectedAssetStart, requestSelectedAssetData, checkOutSelectedAssetStart, quarantineSelectedAssetStart } from \"../../redux/asset/asset.actions\";\nimport './center.styles.scss';\n\nconst Center = ({\n  assetID,\n  assetName,\n  assetSerial,\n  assetImage,\n  assetStatus,\n  checkInAsset,\n  getUpdatedStatus,\n  checkOutAsset,\n  quarantineAsset,\n  userID\n}) => {\n  const preventDragHandler = e => {\n    e.preventDefault();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"center-container\",\n    children: assetID ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"center-inner-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header\",\n        children: [/*#__PURE__*/_jsxDEV(\"header\", {\n          className: \"asset-name\",\n          children: assetName.Upper()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"asset-serial\",\n          children: assetSerial\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"img-container\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"asset-image\",\n          src: `data:image/png;base64,${base64ArrayBuffer(assetImage.data)}`,\n          alt: \"\",\n          onDragStart: preventDragHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        // Ternary operator is being used to determine the font color for status, based on the String value\n        className: ` ${assetStatus === 'Available' ? 'available' : assetStatus.slice(0, 9) === 'In Use By' ? 'in-use' : 'quarantine'} asset-status`,\n        children: assetStatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: [/*#__PURE__*/_jsxDEV(CustomButton, {\n          isCheckIn: true,\n          onClick: () => {\n            assetStatus !== 'Available' ? assetTransaction(checkInAsset, getUpdatedStatus, assetID) : alert(`${assetName} is already checked in.`);\n          },\n          children: \"CHECK IN\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n          isCheckOut: true,\n          onClick: () => {\n            assetStatus.slice(0, 9) !== 'In Use By' ? assetTransaction(checkOutAsset, getUpdatedStatus, assetID, userID) : alert(`${assetName} is ${assetStatus}.`);\n          },\n          children: \"CHECK OUT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"footer\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"instructions\",\n          children: \"If there are issues with the asset, please fill out the form below and submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"reason-box\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n          type: \"button\",\n          onClick: () => {\n            assetStatus !== 'Quarantine' ? assetTransaction(quarantineAsset, getUpdatedStatus, assetID) : alert(`${assetName} is already in quarantine.`);\n          },\n          children: \"SUBMIT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"center-inner-container\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: image404,\n        width: \"450px\",\n        height: \"auto\",\n        alt: \"404 Error Message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 21\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Center;\n\nconst mapStateToProps = state => ({\n  state: state,\n  assetID: state.assetData.id,\n  assetName: state.assetData.name,\n  assetSerial: state.assetData.serial,\n  assetImage: state.assetData.image,\n  assetStatus: state.assetData.status,\n  userID: state.userData.id\n});\n\nconst mapDispatchToProps = dispatch => ({\n  checkInAsset: assetID => {\n    dispatch(checkInSelectedAssetStart(assetID));\n  },\n  checkOutAsset: (assetID, userID) => {\n    dispatch(checkOutSelectedAssetStart(assetID, userID));\n  },\n  quarantineAsset: assetID => {\n    dispatch(quarantineSelectedAssetStart(assetID));\n  },\n  getUpdatedStatus: assetID => {\n    dispatch(requestSelectedAssetData(assetID));\n  }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Center); //^ THE CODE BELOW IS USED TO LOAD FIRST ASSET WHEN RENDERING APP FOR FIRST TIME\n// const [asset, setAsset] = useState(null);\n// useEffect(() => {\n//     const fetchAsset = async() => {\n//         const response = await fetch(`http://localhost:3000/asset`)\n//         const asset = await response.json()\n//         setAsset(asset[0]);\n//     }\n//     fetchAsset();\n// }, []);\n\nvar _c;\n\n$RefreshReg$(_c, \"Center\");","map":{"version":3,"sources":["C:/Users/bryan.alvarez/Documents/webdev/git/comp-overload/client/src/components/center/center.component.jsx"],"names":["CustomButton","connect","base64ArrayBuffer","assetTransaction","image404","checkInSelectedAssetStart","requestSelectedAssetData","checkOutSelectedAssetStart","quarantineSelectedAssetStart","Center","assetID","assetName","assetSerial","assetImage","assetStatus","checkInAsset","getUpdatedStatus","checkOutAsset","quarantineAsset","userID","preventDragHandler","e","preventDefault","Upper","data","slice","alert","mapStateToProps","state","assetData","id","name","serial","image","status","userData","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["// import React, { useEffect, useState } from 'react'\r\nimport CustomButton from '../custom-button/custom-button.component'\r\nimport { connect } from \"react-redux\";\r\n\r\nimport base64ArrayBuffer from '../../utils/base64'\r\nimport { assetTransaction } from \"./center.utils\";\r\nimport image404 from '../../images/404.png'\r\n\r\nimport { checkInSelectedAssetStart, requestSelectedAssetData, checkOutSelectedAssetStart, quarantineSelectedAssetStart } from \"../../redux/asset/asset.actions\";\r\n\r\nimport './center.styles.scss'\r\n\r\nconst Center = ({\r\n    assetID, assetName, assetSerial, assetImage, assetStatus, checkInAsset, getUpdatedStatus ,checkOutAsset, quarantineAsset, userID }) => {\r\n\r\n    const preventDragHandler = (e) => {\r\n        e.preventDefault();\r\n      }\r\n\r\n    return (\r\n        <div className='center-container'>\r\n        {assetID ? (\r\n                <div className='center-inner-container'>\r\n                    <div className='header'>\r\n                        <header className='asset-name'>{assetName.Upper()}</header>\r\n                        <span className='asset-serial'>{assetSerial}</span>\r\n                    </div>\r\n                    <div className='img-container'>   \r\n                    {/* Here we are using our base64ArrayBuffer function to convert our image array into a viewable picture */}\r\n                        <img className='asset-image' src={`data:image/png;base64,${base64ArrayBuffer(assetImage.data)}`}  alt='' onDragStart={preventDragHandler} ></img> \r\n                    </div>\r\n                    <p \r\n                    // Ternary operator is being used to determine the font color for status, based on the String value\r\n                        className={` ${assetStatus === 'Available' ? 'available' : assetStatus.slice(0,9) === 'In Use By' ? 'in-use' : 'quarantine' } asset-status`}>\r\n                        {assetStatus}\r\n                    </p>\r\n                    <div className='button-container'>\r\n                        <CustomButton \r\n                            isCheckIn \r\n                            onClick={() => {assetStatus !== 'Available' ? assetTransaction(checkInAsset, getUpdatedStatus, assetID) : alert(`${assetName} is already checked in.`)}}>\r\n                            CHECK IN\r\n                        </CustomButton>\r\n                        <CustomButton \r\n                            isCheckOut \r\n                            onClick={() => {assetStatus.slice(0,9) !== 'In Use By' ? assetTransaction(checkOutAsset, getUpdatedStatus, assetID, userID) : alert(`${assetName} is ${assetStatus}.`)}} >\r\n                            CHECK OUT\r\n                        </CustomButton>\r\n                    </div>\r\n                    <div className='footer'>\r\n                        <span className='instructions'>If there are issues with the asset, please fill out the form below and submit</span>\r\n                        <textarea className='reason-box'></textarea>\r\n                        <CustomButton \r\n                            type='button' \r\n                            onClick={() => {assetStatus !== 'Quarantine' ? assetTransaction(quarantineAsset, getUpdatedStatus, assetID) : alert(`${assetName} is already in quarantine.`)}}>\r\n                            SUBMIT\r\n                        </CustomButton>\r\n                    </div>\r\n                </div>\r\n                ):(  \r\n                    <div className='center-inner-container'>\r\n                        <img src={image404} width='450px' height='auto' alt='404 Error Message' ></img>\r\n                    </div>\r\n                )}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    state: state,\r\n    assetID: state.assetData.id,\r\n    assetName: state.assetData.name,\r\n    assetSerial: state.assetData.serial,\r\n    assetImage: state.assetData.image,\r\n    assetStatus:state.assetData.status,\r\n    userID: state.userData.id\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    checkInAsset:       (assetID)           => { dispatch(checkInSelectedAssetStart(assetID)) },\r\n    checkOutAsset:      (assetID, userID)   => { dispatch(checkOutSelectedAssetStart(assetID, userID)) },\r\n    quarantineAsset:    (assetID)           => { dispatch(quarantineSelectedAssetStart(assetID)) },\r\n    getUpdatedStatus:   (assetID)           => { dispatch(requestSelectedAssetData(assetID)) }\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Center);\r\n\r\n//^ THE CODE BELOW IS USED TO LOAD FIRST ASSET WHEN RENDERING APP FOR FIRST TIME\r\n\r\n// const [asset, setAsset] = useState(null);\r\n    \r\n// useEffect(() => {\r\n//     const fetchAsset = async() => {\r\n//         const response = await fetch(`http://localhost:3000/asset`)\r\n//         const asset = await response.json()\r\n//         setAsset(asset[0]);\r\n//     }\r\n\r\n//     fetchAsset();\r\n// }, []);\r\n"]},"metadata":{},"sourceType":"module"}