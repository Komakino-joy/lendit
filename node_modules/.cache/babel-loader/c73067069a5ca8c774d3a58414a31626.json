{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\alvar\\\\Documents\\\\WebDev\\\\comp-overload\\\\client\\\\src\\\\components\\\\navigation\\\\navigation.component.jsx\";\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport { handleMemberSignin } from \"../../redux/site-member/site-member.actions\";\nimport { NavList, NavOption } from \"./navigation.styles\";\n\nconst Navigation = ({\n  history,\n  isSignedIn,\n  signOut\n}) => {\n  if (isSignedIn) {\n    return /*#__PURE__*/_jsxDEV(NavList, {\n      children: /*#__PURE__*/_jsxDEV(NavOption, {\n        onClick: () => {\n          signOut();\n          history.push('/signin');\n        },\n        children: \"Sign Out\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(NavList, {\n      children: [/*#__PURE__*/_jsxDEV(NavOption, {\n        onClick: () => history.push('/signin'),\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(NavOption, {\n        onClick: () => history.push('/register'),\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this);\n  }\n};\n\n_c = Navigation;\n\nconst mapStateToProps = state => ({\n  isSignedIn: state.memberState.memberSignedIn\n});\n\nconst mapDispatchToProps = dispatch => ({\n  signOut: () => {\n    dispatch(handleMemberSignin());\n  }\n});\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Navigation));\n\nvar _c;\n\n$RefreshReg$(_c, \"Navigation\");","map":{"version":3,"sources":["C:/Users/alvar/Documents/WebDev/comp-overload/client/src/components/navigation/navigation.component.jsx"],"names":["React","withRouter","connect","handleMemberSignin","NavList","NavOption","Navigation","history","isSignedIn","signOut","push","mapStateToProps","state","memberState","memberSignedIn","mapDispatchToProps","dispatch"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,6CAAnC;AAEA,SAASC,OAAT,EAAkBC,SAAlB,QAAmC,qBAAnC;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,UAAX;AAAuBC,EAAAA;AAAvB,CAAD,KAAsC;AACrD,MAAID,UAAJ,EAAgB;AACd,wBACE,QAAC,OAAD;AAAA,6BACE,QAAC,SAAD;AAAW,QAAA,OAAO,EAAE,MAAM;AAACC,UAAAA,OAAO;AAAIF,UAAAA,OAAO,CAACG,IAAR,CAAa,SAAb;AAAwB,SAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD,GAND,MAMO;AACL,wBACE,QAAC,OAAD;AAAA,8BACE,QAAC,SAAD;AAAW,QAAA,OAAO,EAAE,MAAMH,OAAO,CAACG,IAAR,CAAa,SAAb,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,SAAD;AAAW,QAAA,OAAO,EAAE,MAAMH,OAAO,CAACG,IAAR,CAAa,WAAb,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMD;AACJ,CAfD;;KAAMJ,U;;AAiBN,MAAMK,eAAe,GAAIC,KAAD,KAAY;AAChCJ,EAAAA,UAAU,EAAEI,KAAK,CAACC,WAAN,CAAkBC;AADE,CAAZ,CAAxB;;AAIA,MAAMC,kBAAkB,GAAIC,QAAD,KAAe;AACtCP,EAAAA,OAAO,EAAE,MAAM;AAACO,IAAAA,QAAQ,CAACb,kBAAkB,EAAnB,CAAR;AAA+B;AADT,CAAf,CAA3B;;AAIA,eAAeF,UAAU,CAACC,OAAO,CAACS,eAAD,EAAkBI,kBAAlB,CAAP,CAA6CT,UAA7C,CAAD,CAAzB","sourcesContent":["import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from \"react-redux\";\r\nimport { handleMemberSignin } from \"../../redux/site-member/site-member.actions\";\r\n\r\nimport { NavList, NavOption } from \"./navigation.styles\";\r\n\r\nconst Navigation = ({ history, isSignedIn, signOut }) => {\r\n    if (isSignedIn) {\r\n      return (\r\n        <NavList>\r\n          <NavOption onClick={() => {signOut(); history.push('/signin')}}>Sign Out</NavOption>\r\n        </NavList>\r\n      );\r\n    } else {\r\n      return (\r\n        <NavList>\r\n          <NavOption onClick={() => history.push('/signin')}>Sign In</NavOption>\r\n          <NavOption onClick={() => history.push('/register')}>Register</NavOption>\r\n        </NavList>\r\n      );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isSignedIn: state.memberState.memberSignedIn\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    signOut: () => {dispatch(handleMemberSignin())}\r\n  });\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Navigation));"]},"metadata":{},"sourceType":"module"}