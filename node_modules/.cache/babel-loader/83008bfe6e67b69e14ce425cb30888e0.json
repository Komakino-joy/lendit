{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\alvar\\\\Documents\\\\WebDev\\\\lendit\\\\lendit\\\\src\\\\pages\\\\signin\\\\signin.component.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { useAlert } from \"react-alert\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport { isSignedIn } from \"../../redux/site-member/site-member.selectors\";\nimport { handleMemberSignin } from \"../../redux/site-member/site-member.actions\";\nimport { SignInPageBody, SignInArticle, SignInMain, SignInFieldSet, SignInLegend, SignInInput, SignInSubmit, RegisterLinkContainer, RegisterLink, Email, Password } from \"./signin.styles\";\nimport emailIcon from \"../../images/email_icon.svg\";\nimport passwordIcon from \"../../images/password_icon.svg\";\nimport { httpSignIn } from '../../services/api.js';\n\nconst SigninPage = ({\n  history,\n  signIn\n}) => {\n  _s();\n\n  const alert = useAlert();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const onEmailChange = event => {\n    setEmail(event.target.value);\n  };\n\n  const onPasswordChange = event => {\n    setPassword(event.target.value);\n  };\n\n  const onSubmitSignIn = () => {\n    httpSignIn(email, password, signIn(), history.push());\n  };\n\n  return /*#__PURE__*/_jsxDEV(SignInPageBody, {\n    children: [/*#__PURE__*/_jsxDEV(SignInLegend, {\n      children: \"Lendit Asset Tracker\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SignInArticle, {\n      children: /*#__PURE__*/_jsxDEV(SignInMain, {\n        children: [/*#__PURE__*/_jsxDEV(SignInFieldSet, {\n          children: [/*#__PURE__*/_jsxDEV(Email, {\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: emailIcon,\n              alt: \"user icon for sign in\",\n              height: \"40px\",\n              width: \"40px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(SignInInput, {\n              placeholder: \"Email Address\",\n              type: \"text\",\n              name: \"email-address\",\n              id: \"email-address\",\n              onChange: onEmailChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Password, {\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: passwordIcon,\n              alt: \"password icon for sign in\",\n              height: \"40px\",\n              width: \"40px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(SignInInput, {\n              placeholder: \"Password\",\n              type: \"password\",\n              name: \"password\",\n              id: \"password\",\n              onChange: onPasswordChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SignInSubmit, {\n          onClick: onSubmitSignIn,\n          type: \"submit\",\n          value: \"Sign in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(RegisterLinkContainer, {\n          children: /*#__PURE__*/_jsxDEV(RegisterLink, {\n            onClick: () => history.push(\"/register\"),\n            className: \"register-link\",\n            children: \"New user?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SigninPage, \"U4cbqXemV3BP53tKylQNaB78LKU=\", false, function () {\n  return [useAlert];\n});\n\n_c = SigninPage;\nconst mapStateToProps = createStructuredSelector({\n  isSignedIn\n});\n\nconst mapDispatchToProps = dispatch => ({\n  signIn: memberId => {\n    dispatch(handleMemberSignin(memberId));\n  }\n});\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(SigninPage));\n\nvar _c;\n\n$RefreshReg$(_c, \"SigninPage\");","map":{"version":3,"sources":["C:/Users/alvar/Documents/WebDev/lendit/lendit/src/pages/signin/signin.component.jsx"],"names":["React","useState","withRouter","useAlert","connect","createStructuredSelector","isSignedIn","handleMemberSignin","SignInPageBody","SignInArticle","SignInMain","SignInFieldSet","SignInLegend","SignInInput","SignInSubmit","RegisterLinkContainer","RegisterLink","Email","Password","httpSignIn","SigninPage","history","signIn","alert","email","setEmail","password","setPassword","onEmailChange","event","target","value","onPasswordChange","onSubmitSignIn","push","emailIcon","passwordIcon","mapStateToProps","mapDispatchToProps","dispatch","memberId"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { useAlert } from \"react-alert\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport { isSignedIn } from \"../../redux/site-member/site-member.selectors\";\r\nimport { handleMemberSignin } from \"../../redux/site-member/site-member.actions\";\r\n\r\nimport {\r\n  SignInPageBody, SignInArticle, SignInMain, SignInFieldSet, SignInLegend, \r\n  SignInInput, SignInSubmit, RegisterLinkContainer, RegisterLink, Email, Password\r\n} from \"./signin.styles\";\r\n\r\n\r\nimport emailIcon from '../../images/email_icon.svg';\r\nimport passwordIcon from '../../images/password_icon.svg';\r\n\r\nimport { httpSignIn } from '../../services/api.js';\r\n\r\nconst SigninPage = ({ history, signIn }) => {\r\n  const alert = useAlert();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const onEmailChange = (event) => {\r\n    setEmail(event.target.value);\r\n  };\r\n\r\n  const onPasswordChange = (event) => {\r\n    setPassword(event.target.value);\r\n  };\r\n\r\n  const onSubmitSignIn = () => {\r\n    httpSignIn(email, password, signIn(), history.push())\r\n  };\r\n\r\n  return (\r\n    <SignInPageBody>\r\n      <SignInLegend>Lendit Asset Tracker</SignInLegend>\r\n      <SignInArticle>\r\n        <SignInMain>\r\n          <SignInFieldSet>\r\n\r\n            <Email>\r\n              <img src={emailIcon} alt='user icon for sign in' height='40px' width='40px'/>\r\n              <SignInInput\r\n                placeholder=\"Email Address\"\r\n                type=\"text\"\r\n                name=\"email-address\"\r\n                id=\"email-address\"\r\n                onChange={onEmailChange}\r\n              />\r\n            </Email>\r\n\r\n            <Password>\r\n              <img src={passwordIcon} alt='password icon for sign in' height='40px' width='40px'/>\r\n              <SignInInput\r\n                placeholder=\"Password\"\r\n                type=\"password\"\r\n                name=\"password\"\r\n                id=\"password\"\r\n                onChange={onPasswordChange}\r\n              />\r\n            </Password>\r\n          </SignInFieldSet>\r\n\r\n          <SignInSubmit\r\n            onClick={onSubmitSignIn}\r\n            type=\"submit\"\r\n            value=\"Sign in\"\r\n          />\r\n\r\n          <RegisterLinkContainer>\r\n            <RegisterLink\r\n              onClick={() => history.push(\"/register\")}\r\n              className=\"register-link\"\r\n            >\r\n              New user?\r\n            </RegisterLink>\r\n          </RegisterLinkContainer>\r\n        </SignInMain>\r\n      </SignInArticle>\r\n      \r\n    </SignInPageBody>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  isSignedIn,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  signIn: (memberId) => { dispatch(handleMemberSignin(memberId));},\r\n});\r\n\r\nexport default withRouter(\r\n  connect(mapStateToProps, mapDispatchToProps)(SigninPage)\r\n);\r\n"]},"metadata":{},"sourceType":"module"}