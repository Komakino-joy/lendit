{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\alvar\\\\Documents\\\\WebDev\\\\lendit\\\\lendit_ui\\\\src\\\\pages\\\\register\\\\register.component.jsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { handleMemberSignin } from \"../../redux/site-member/site-member.actions\";\nimport { RegistrationBody, RegistrationArticle, RegistrationMain, RegistrationFieldSet, RegistrationLegend, RegistrationLabel, RegistrationInput, RegistrationSubmit, NameFieldContainer, NameField, Email, Password } from \"./register.styles\";\n\nclass RegistrationPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onFirstNameChange = event => {\n      this.setState({\n        fname: event.target.value\n      });\n    };\n\n    this.onLastNameChange = event => {\n      this.setState({\n        lname: event.target.value\n      });\n    };\n\n    this.onEmailChange = event => {\n      this.setState({\n        email: event.target.value\n      });\n    };\n\n    this.onPasswordChange = event => {\n      this.setState({\n        password: event.target.value\n      });\n    };\n\n    this.onSubmitRegister = () => {\n      fetch(\"https://lendit-api.herokuapp.com/register\", {\n        method: \"post\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          fname: this.state.fname,\n          lname: this.state.lname,\n          email: this.state.email,\n          password: this.state.password\n        })\n      }) // * Handling incorrect credentials\n      .then(response => response.json()).then(member => {\n        if (member.id) {\n          this.props.signIn(member.id);\n          this.props.history.push(\"/home\");\n        }\n      });\n    };\n\n    this.state = {\n      fname: \"\",\n      lname: \"\",\n      email: \"\",\n      password: \"\"\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(RegistrationBody, {\n      children: /*#__PURE__*/_jsxDEV(RegistrationArticle, {\n        children: /*#__PURE__*/_jsxDEV(RegistrationMain, {\n          children: [/*#__PURE__*/_jsxDEV(RegistrationFieldSet, {\n            children: [/*#__PURE__*/_jsxDEV(RegistrationLegend, {\n              children: \"Register\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(NameFieldContainer, {\n              children: [/*#__PURE__*/_jsxDEV(NameField, {\n                children: [/*#__PURE__*/_jsxDEV(RegistrationLabel, {\n                  htmlFor: \"fname\",\n                  children: \"First Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(RegistrationInput, {\n                  type: \"text\",\n                  name: \"fname\",\n                  id: \"fname\",\n                  onChange: this.onFirstNameChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(NameField, {\n                children: [/*#__PURE__*/_jsxDEV(RegistrationLabel, {\n                  htmlFor: \"lname\",\n                  children: \"Last Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(RegistrationInput, {\n                  type: \"text\",\n                  name: \"lname\",\n                  id: \"lname\",\n                  onChange: this.onLastNameChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Email, {\n              children: [/*#__PURE__*/_jsxDEV(RegistrationLabel, {\n                htmlFor: \"email-address\",\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(RegistrationInput, {\n                type: \"email\",\n                name: \"email-address\",\n                id: \"email-address\",\n                onChange: this.onEmailChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Password, {\n              children: [/*#__PURE__*/_jsxDEV(RegistrationLabel, {\n                htmlFor: \"password\",\n                children: \"Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(RegistrationInput, {\n                type: \"password\",\n                name: \"password\",\n                id: \"password\",\n                onChange: this.onPasswordChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(RegistrationSubmit, {\n            type: \"submit\",\n            value: \"Register\",\n            onClick: this.onSubmitRegister\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  signIn: memberId => {\n    dispatch(handleMemberSignin(memberId));\n  }\n});\n\nexport default connect(null, mapDispatchToProps)(RegistrationPage);","map":{"version":3,"sources":["C:/Users/alvar/Documents/WebDev/lendit/lendit_ui/src/pages/register/register.component.jsx"],"names":["React","connect","handleMemberSignin","RegistrationBody","RegistrationArticle","RegistrationMain","RegistrationFieldSet","RegistrationLegend","RegistrationLabel","RegistrationInput","RegistrationSubmit","NameFieldContainer","NameField","Email","Password","RegistrationPage","Component","constructor","props","onFirstNameChange","event","setState","fname","target","value","onLastNameChange","lname","onEmailChange","email","onPasswordChange","password","onSubmitRegister","fetch","method","headers","body","JSON","stringify","state","then","response","json","member","id","signIn","history","push","render","mapDispatchToProps","dispatch","memberId"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { handleMemberSignin } from \"../../redux/site-member/site-member.actions\";\r\n\r\nimport {\r\n  RegistrationBody,\r\n  RegistrationArticle,\r\n  RegistrationMain,\r\n  RegistrationFieldSet,\r\n  RegistrationLegend,\r\n  RegistrationLabel,\r\n  RegistrationInput,\r\n  RegistrationSubmit,\r\n  NameFieldContainer,\r\n  NameField,\r\n  Email,\r\n  Password,\r\n} from \"./register.styles\";\r\nclass RegistrationPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      fname: \"\",\r\n      lname: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n    };\r\n  }\r\n\r\n  onFirstNameChange = (event) => {\r\n    this.setState({ fname: event.target.value });\r\n  };\r\n\r\n  onLastNameChange = (event) => {\r\n    this.setState({ lname: event.target.value });\r\n  };\r\n\r\n  onEmailChange = (event) => {\r\n    this.setState({ email: event.target.value });\r\n  };\r\n\r\n  onPasswordChange = (event) => {\r\n    this.setState({ password: event.target.value });\r\n  };\r\n\r\n  onSubmitRegister = () => {\r\n    fetch(\"https://lendit-api.herokuapp.com/register\", {\r\n      method: \"post\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        fname: this.state.fname,\r\n        lname: this.state.lname,\r\n        email: this.state.email,\r\n        password: this.state.password,\r\n      }),\r\n    })\r\n      // * Handling incorrect credentials\r\n      .then((response) => response.json())\r\n      .then((member) => {\r\n        if (member.id) {\r\n          this.props.signIn(member.id);\r\n          this.props.history.push(\"/home\");\r\n        }\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <RegistrationBody>\r\n        <RegistrationArticle>\r\n          <RegistrationMain>\r\n            <RegistrationFieldSet>\r\n              <RegistrationLegend>Register</RegistrationLegend>\r\n\r\n              <NameFieldContainer>\r\n                <NameField>\r\n                  <RegistrationLabel htmlFor=\"fname\">\r\n                    First Name\r\n                  </RegistrationLabel>\r\n                  <RegistrationInput\r\n                    type=\"text\"\r\n                    name=\"fname\"\r\n                    id=\"fname\"\r\n                    onChange={this.onFirstNameChange}\r\n                  />\r\n                </NameField>\r\n\r\n                <NameField>\r\n                  <RegistrationLabel htmlFor=\"lname\">\r\n                    Last Name\r\n                  </RegistrationLabel>\r\n                  <RegistrationInput\r\n                    type=\"text\"\r\n                    name=\"lname\"\r\n                    id=\"lname\"\r\n                    onChange={this.onLastNameChange}\r\n                  />\r\n                </NameField>\r\n              </NameFieldContainer>\r\n\r\n              <Email>\r\n                <RegistrationLabel htmlFor=\"email-address\">\r\n                  Email\r\n                </RegistrationLabel>\r\n                <RegistrationInput\r\n                  type=\"email\"\r\n                  name=\"email-address\"\r\n                  id=\"email-address\"\r\n                  onChange={this.onEmailChange}\r\n                />\r\n              </Email>\r\n\r\n              <Password>\r\n                <RegistrationLabel htmlFor=\"password\">\r\n                  Password\r\n                </RegistrationLabel>\r\n                <RegistrationInput\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  id=\"password\"\r\n                  onChange={this.onPasswordChange}\r\n                />\r\n              </Password>\r\n            </RegistrationFieldSet>\r\n\r\n            <RegistrationSubmit\r\n              type=\"submit\"\r\n              value=\"Register\"\r\n              onClick={this.onSubmitRegister}\r\n            />\r\n          </RegistrationMain>\r\n        </RegistrationArticle>\r\n      </RegistrationBody>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  signIn: (memberId) => {\r\n    dispatch(handleMemberSignin(memberId));\r\n  },\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(RegistrationPage);\r\n"]},"metadata":{},"sourceType":"module"}