{"ast":null,"code":"import assetData from './asset-reducer';\nimport AssetActionTypes from './asset.types';\nexport const requestSelectedAssetData = (assetID, ownerID) => ({\n  type: AssetActionTypes.REQUEST_SELECTED_ASSET,\n  assetID,\n  ownerID\n});\nexport const receiveSelectedAssetData = assetData => ({\n  type: AssetActionTypes.RECEIVE_SELECTED_ASSET,\n  payload: assetData\n});\nexport const checkInSelectedAssetStart = (assetID, userId, ownerId, assetName, assetSerial, assetModel) => ({\n  type: AssetActionTypes.CHECK_IN_SELECTED_ASSET_START,\n  assetID,\n  userId,\n  ownerId,\n  assetName,\n  assetSerial,\n  assetModel\n});\nexport const checkInSelectedAssetSuccess = assetData => ({\n  type: AssetActionTypes.CHECK_IN_SELECTED_ASSET_SUCCESS,\n  assetData\n});\nexport const checkOutSelectedAssetStart = (assetID, userID, ownerId, assetName, assetSerial, assetModel) => ({\n  type: AssetActionTypes.CHECK_OUT_SELECTED_ASSET_START,\n  assetID,\n  userID,\n  ownerId,\n  assetName,\n  assetSerial,\n  assetModel\n});\nexport const checkOutSelectedAssetSuccess = assetData => ({\n  type: AssetActionTypes.CHECK_OUT_SELECTED_ASSET_SUCCESS,\n  assetData\n});\nexport const quarantineSelectedAssetStart = (assetID, userID, ownerId, assetName, assetSerial, assetModel, comment) => ({\n  type: AssetActionTypes.QUARANTINE_SELECTED_ASSET_START,\n  assetID,\n  userID,\n  ownerId,\n  assetName,\n  assetSerial,\n  assetModel,\n  comment\n});\nexport const quarantineSelectedAssetSuccess = assetData => ({\n  type: AssetActionTypes.QUARANTINE_SELECTED_ASSET_SUCCESS,\n  assetData\n});","map":{"version":3,"sources":["C:/Users/alvar/Documents/WebDev/lendit/lendit/src/redux/asset/asset.actions.js"],"names":["assetData","AssetActionTypes","requestSelectedAssetData","assetID","ownerID","type","REQUEST_SELECTED_ASSET","receiveSelectedAssetData","RECEIVE_SELECTED_ASSET","payload","checkInSelectedAssetStart","userId","ownerId","assetName","assetSerial","assetModel","CHECK_IN_SELECTED_ASSET_START","checkInSelectedAssetSuccess","CHECK_IN_SELECTED_ASSET_SUCCESS","checkOutSelectedAssetStart","userID","CHECK_OUT_SELECTED_ASSET_START","checkOutSelectedAssetSuccess","CHECK_OUT_SELECTED_ASSET_SUCCESS","quarantineSelectedAssetStart","comment","QUARANTINE_SELECTED_ASSET_START","quarantineSelectedAssetSuccess","QUARANTINE_SELECTED_ASSET_SUCCESS"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,iBAAtB;AACA,OAAOC,gBAAP,MAA6B,eAA7B;AAEA,OAAO,MAAMC,wBAAwB,GAAG,CAACC,OAAD,EAAUC,OAAV,MAAuB;AAC3DC,EAAAA,IAAI,EAAEJ,gBAAgB,CAACK,sBADoC;AACZH,EAAAA,OADY;AACHC,EAAAA;AADG,CAAvB,CAAjC;AAIP,OAAO,MAAMG,wBAAwB,GAAIP,SAAD,KAAgB;AACnDK,EAAAA,IAAI,EAAEJ,gBAAgB,CAACO,sBAD4B;AAEnDC,EAAAA,OAAO,EAAET;AAF0C,CAAhB,CAAjC;AAKP,OAAO,MAAMU,yBAAyB,GAAG,CAACP,OAAD,EAAUQ,MAAV,EAAkBC,OAAlB,EAA2BC,SAA3B,EAAsCC,WAAtC,EAAmDC,UAAnD,MAAoE;AACzGV,EAAAA,IAAI,EAAEJ,gBAAgB,CAACe,6BADkF;AACnDb,EAAAA,OADmD;AAC1CQ,EAAAA,MAD0C;AAClCC,EAAAA,OADkC;AACzBC,EAAAA,SADyB;AACdC,EAAAA,WADc;AACDC,EAAAA;AADC,CAApE,CAAlC;AAIP,OAAO,MAAME,2BAA2B,GAAIjB,SAAD,KAAgB;AACvDK,EAAAA,IAAI,EAAEJ,gBAAgB,CAACiB,+BADgC;AACClB,EAAAA;AADD,CAAhB,CAApC;AAIP,OAAO,MAAMmB,0BAA0B,GAAG,CAAChB,OAAD,EAAUiB,MAAV,EAAkBR,OAAlB,EAA2BC,SAA3B,EAAsCC,WAAtC,EAAmDC,UAAnD,MAAmE;AACzGV,EAAAA,IAAI,EAAEJ,gBAAgB,CAACoB,8BADkF;AAClDlB,EAAAA,OADkD;AACzCiB,EAAAA,MADyC;AACjCR,EAAAA,OADiC;AACxBC,EAAAA,SADwB;AACbC,EAAAA,WADa;AACAC,EAAAA;AADA,CAAnE,CAAnC;AAIP,OAAO,MAAMO,4BAA4B,GAAItB,SAAD,KAAgB;AACxDK,EAAAA,IAAI,EAAEJ,gBAAgB,CAACsB,gCADiC;AACCvB,EAAAA;AADD,CAAhB,CAArC;AAIP,OAAO,MAAMwB,4BAA4B,GAAG,CAACrB,OAAD,EAAUiB,MAAV,EAAkBR,OAAlB,EAA2BC,SAA3B,EAAsCC,WAAtC,EAAmDC,UAAnD,EAA+DU,OAA/D,MAA4E;AACpHpB,EAAAA,IAAI,EAAEJ,gBAAgB,CAACyB,+BAD6F;AAC5DvB,EAAAA,OAD4D;AACnDiB,EAAAA,MADmD;AAC3CR,EAAAA,OAD2C;AAClCC,EAAAA,SADkC;AACvBC,EAAAA,WADuB;AACVC,EAAAA,UADU;AACEU,EAAAA;AADF,CAA5E,CAArC;AAIP,OAAO,MAAME,8BAA8B,GAAI3B,SAAD,KAAgB;AAC1DK,EAAAA,IAAI,EAAEJ,gBAAgB,CAAC2B,iCADmC;AACA5B,EAAAA;AADA,CAAhB,CAAvC","sourcesContent":["import assetData from './asset-reducer';\r\nimport AssetActionTypes from './asset.types';\r\n\r\nexport const requestSelectedAssetData = (assetID, ownerID) => ({ \r\n    type: AssetActionTypes.REQUEST_SELECTED_ASSET, assetID, ownerID\r\n});\r\n\r\nexport const receiveSelectedAssetData = (assetData) => ({\r\n     type: AssetActionTypes.RECEIVE_SELECTED_ASSET,\r\n     payload: assetData\r\n});\r\n\r\nexport const checkInSelectedAssetStart = (assetID, userId, ownerId, assetName, assetSerial, assetModel ) => ({\r\n    type: AssetActionTypes.CHECK_IN_SELECTED_ASSET_START, assetID, userId, ownerId, assetName, assetSerial, assetModel\r\n});\r\n\r\nexport const checkInSelectedAssetSuccess = (assetData) => ({\r\n    type: AssetActionTypes.CHECK_IN_SELECTED_ASSET_SUCCESS, assetData\r\n});\r\n\r\nexport const checkOutSelectedAssetStart = (assetID, userID, ownerId, assetName, assetSerial, assetModel) => ({\r\n    type: AssetActionTypes.CHECK_OUT_SELECTED_ASSET_START, assetID, userID, ownerId, assetName, assetSerial, assetModel\r\n});\r\n\r\nexport const checkOutSelectedAssetSuccess = (assetData) => ({\r\n    type: AssetActionTypes.CHECK_OUT_SELECTED_ASSET_SUCCESS, assetData\r\n});\r\n\r\nexport const quarantineSelectedAssetStart = (assetID, userID, ownerId, assetName, assetSerial, assetModel, comment) => ({\r\n    type: AssetActionTypes.QUARANTINE_SELECTED_ASSET_START, assetID, userID, ownerId, assetName, assetSerial, assetModel, comment\r\n});\r\n\r\nexport const quarantineSelectedAssetSuccess = (assetData) => ({\r\n    type: AssetActionTypes.QUARANTINE_SELECTED_ASSET_SUCCESS, assetData\r\n});"]},"metadata":{},"sourceType":"module"}