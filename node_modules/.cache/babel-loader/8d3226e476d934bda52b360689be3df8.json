{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import _slicedToArray from\"C:/Users/alvar/Documents/a_Web_Development_Projects/FINAL_COPIES_OF_PROJECTS/lendit/lendit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import{connect}from\"react-redux\";import{createStructuredSelector}from\"reselect\";import{currentMemberId}from\"../../redux/site-member/site-member.selectors\";import{toggleAddUser as _toggleAddUser}from\"../../redux/modal/modal.actions\";import{requestUserDropDownOptions}from'../../redux/drop-downs/drop-down.actions';import{useAlert}from'react-alert';import{httpCreateNewUser}from\"../../services/api\";import{ModalMain,ModalContent,CloseButton,Header,Article,FieldSet,Input,Submit}from\"./modal.styles\";var AddUser=function AddUser(_ref){var toggleAddUser=_ref.toggleAddUser,getUserOptions=_ref.getUserOptions,memberId=_ref.memberId;var alert=useAlert();var _useState=useState(''),_useState2=_slicedToArray(_useState,2),userID=_useState2[0],setUserID=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),fname=_useState4[0],setFname=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),lname=_useState6[0],setLname=_useState6[1];var onUseridChange=function onUseridChange(event){setUserID(event.target.value);};var onFnameChange=function onFnameChange(event){setFname(event.target.value);};var onLnameChange=function onLnameChange(event){setLname(event.target.value);};var inputReset=function inputReset(){userID=null;fname=null;lname=null;document.getElementById('userid').value='';document.getElementById('fname').value='';document.getElementById('lname').value='';document.getElementById('userid').focus();};var submitUser=function submitUser(event){if(userID&&fname&&lname&&memberId){httpCreateNewUser(userID,fname,lname,memberId);alert.show(\"\".concat(userID,\" submitted.\"),{type:'success',position:'top center'});inputReset();}else{alert.show('Please ensure that all fields are filled out.',{type:'error',position:'top center'});}};return/*#__PURE__*/_jsx(ModalMain,{children:/*#__PURE__*/_jsxs(ModalContent,{children:[/*#__PURE__*/_jsx(CloseButton,{onClick:function onClick(){toggleAddUser();getUserOptions(memberId);},children:\"\\xD7\"}),/*#__PURE__*/_jsx(Header,{children:\"Add User\"}),/*#__PURE__*/_jsx(Article,{children:/*#__PURE__*/_jsxs(\"div\",{action:\"sign-up_submit\",method:\"get\",acceptCharset:\"utf-8\",children:[/*#__PURE__*/_jsxs(FieldSet,{id:\"sign_up\",children:[/*#__PURE__*/_jsx(Input,{onChange:onUseridChange,placeholder:\"User ID (Required)\",type:\"text\",name:\"userid\",id:\"userid\"}),/*#__PURE__*/_jsx(Input,{onChange:onFnameChange,placeholder:\"First Name (Required)\",type:\"text\",name:\"fname\",id:\"fname\"}),/*#__PURE__*/_jsx(Input,{onChange:onLnameChange,placeholder:\"Last Name (Required)\",type:\"text\",name:\"lname\",id:\"lname\"})]}),/*#__PURE__*/_jsx(Submit,{onClick:function onClick(){return submitUser();},type:\"submit\",defaultValue:\"Submit\"})]})})]})});};var mapStateToProps=createStructuredSelector({memberId:currentMemberId});var mapDispatchToProps=function mapDispatchToProps(dispatch){return{toggleAddUser:function toggleAddUser(){return dispatch(_toggleAddUser());},getUserOptions:function getUserOptions(memberId){dispatch(requestUserDropDownOptions(memberId));}};};export default connect(mapStateToProps,mapDispatchToProps)(AddUser);","map":{"version":3,"sources":["C:/Users/alvar/Documents/a_Web_Development_Projects/FINAL_COPIES_OF_PROJECTS/lendit/lendit/src/components/modals/add-user.modal.jsx"],"names":["React","useState","connect","createStructuredSelector","currentMemberId","toggleAddUser","requestUserDropDownOptions","useAlert","httpCreateNewUser","ModalMain","ModalContent","CloseButton","Header","Article","FieldSet","Input","Submit","AddUser","getUserOptions","memberId","alert","userID","setUserID","fname","setFname","lname","setLname","onUseridChange","event","target","value","onFnameChange","onLnameChange","inputReset","document","getElementById","focus","submitUser","show","type","position","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { createStructuredSelector } from \"reselect\";\r\n\r\nimport { currentMemberId } from \"../../redux/site-member/site-member.selectors\";\r\nimport { toggleAddUser } from \"../../redux/modal/modal.actions\";\r\nimport { requestUserDropDownOptions } from '../../redux/drop-downs/drop-down.actions';\r\n\r\nimport { useAlert } from 'react-alert';\r\n\r\nimport { httpCreateNewUser } from \"../../services/api\";\r\n\r\nimport { ModalMain, ModalContent, CloseButton, Header, Article, FieldSet, Input,Submit } from \"./modal.styles\";\r\n\r\nconst AddUser = ( {toggleAddUser, getUserOptions, memberId} ) =>{\r\n\r\n  const alert = useAlert();\r\n\r\n  let [userID, setUserID] = useState('');\r\n  let [fname, setFname] = useState('');\r\n  let [lname, setLname] = useState('');\r\n\r\n  const onUseridChange = (event) => {\r\n    setUserID(event.target.value); \r\n  } ;\r\n\r\n  const onFnameChange = (event) => {\r\n    setFname(event.target.value);\r\n  };\r\n\r\n const onLnameChange = (event) => {\r\n    setLname(event.target.value); \r\n  };\r\n\r\n  const inputReset = () => {\r\n    userID = null;\r\n    fname = null;\r\n    lname = null;\r\n    document.getElementById('userid').value = '';\r\n    document.getElementById('fname').value = '';\r\n    document.getElementById('lname').value = '';\r\n    document.getElementById('userid').focus();\r\n  };\r\n\r\n  const submitUser = (event) => {\r\n    if (userID && fname && lname && memberId){\r\n      httpCreateNewUser(userID, fname, lname, memberId);\r\n      alert.show(`${userID} submitted.`, {type: 'success', position:'top center'});\r\n      inputReset();\r\n    } else {\r\n      alert.show('Please ensure that all fields are filled out.', {type: 'error', position:'top center'});\r\n    }\r\n  };\r\n  \r\n  return (\r\n   <ModalMain>\r\n      <ModalContent>\r\n        {/* Retrieve updated list of users when modal is closed. */}\r\n        <CloseButton onClick={() => {toggleAddUser(); getUserOptions(memberId);}}>&times;</CloseButton>\r\n        <Header>Add User</Header>\r\n        <Article>\r\n          <div action=\"sign-up_submit\" method=\"get\" acceptCharset=\"utf-8\">\r\n            <FieldSet id=\"sign_up\">\r\n                <Input onChange={onUseridChange} placeholder=\"User ID (Required)\" type=\"text\" name=\"userid\" id=\"userid\"/>\r\n                <Input onChange={onFnameChange}  placeholder=\"First Name (Required)\"  type=\"text\" name=\"fname\"  id=\"fname\" />\r\n                <Input onChange={onLnameChange}  placeholder=\"Last Name (Required)\" type=\"text\" name=\"lname\"  id=\"lname\"/>\r\n            </FieldSet>\r\n            <Submit onClick={() => submitUser()} type = \"submit\" defaultValue=\"Submit\"/>\r\n          </div>\r\n        </Article>\r\n      </ModalContent>\r\n   </ModalMain>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  memberId: currentMemberId\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  toggleAddUser : () => dispatch(toggleAddUser()),\r\n  getUserOptions: (memberId) => { dispatch(requestUserDropDownOptions(memberId))}\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddUser);"]},"metadata":{},"sourceType":"module"}