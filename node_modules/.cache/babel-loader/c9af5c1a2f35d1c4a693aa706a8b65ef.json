{"ast":null,"code":"export const fetchSelectedUserData = async userID => {\n  const settings = {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      id: userID\n    })\n  };\n\n  try {\n    const response = await fetch(`http://localhost:3000/user`, settings);\n    const user = await response.json();\n    return user;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const checkInAsset = async assetID => {\n  const settings = {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      id: assetID\n    })\n  };\n\n  try {\n    console.log('STEP 6: API Call begins');\n    await fetch(`http://localhost:3000/checkin`, settings);\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const checkOutAsset = async assetID => {\n  const settings = {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      id: assetID,\n      username: userID\n    })\n  };\n\n  try {\n    console.log('STEP 6: API Call begins');\n    await fetch(`http://localhost:3000/checkin`, settings);\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const fetchSelectedAssetData = async assetID => {\n  const settings = {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      id: assetID\n    })\n  };\n\n  try {\n    console.log('Second API Fetch');\n    const response = await fetch(`http://localhost:3000/asset`, settings);\n    console.log(response);\n    const asset = await response.json();\n    console.log(asset);\n    return asset;\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"sources":["C:/Users/bryan.alvarez/Documents/webdev/git/comp-overload/client/src/services/api.js"],"names":["fetchSelectedUserData","userID","settings","method","headers","Accept","body","JSON","stringify","id","response","fetch","user","json","error","console","log","checkInAsset","assetID","checkOutAsset","username","fetchSelectedAssetData","asset"],"mappings":"AAAA,OAAO,MAAMA,qBAAqB,GAAG,MAAMC,MAAN,IAAiB;AAClD,QAAMC,QAAQ,GAAG;AACbC,IAAAA,MAAM,EAAC,MADM;AAEbC,IAAAA,OAAO,EAAE;AACLC,MAAAA,MAAM,EAAE,kBADH;AAEL,sBAAgB;AAFX,KAFI;AAMbC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBC,MAAAA,EAAE,EAACR;AADc,KAAf;AANO,GAAjB;;AAUA,MAAG;AACC,UAAMS,QAAQ,GAAG,MAAMC,KAAK,CAAE,4BAAF,EAA+BT,QAA/B,CAA5B;AACA,UAAMU,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACA,WAAOD,IAAP;AACH,GAJD,CAIE,OAAME,KAAN,EAAa;AACXC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AACJ,CAlBM;AAoBP,OAAO,MAAMG,YAAY,GAAG,MAAMC,OAAN,IAAkB;AAC1C,QAAMhB,QAAQ,GAAG;AACbC,IAAAA,MAAM,EAAC,MADM;AAEbC,IAAAA,OAAO,EAAE;AACLC,MAAAA,MAAM,EAAE,kBADH;AAEL,sBAAgB;AAFX,KAFI;AAMbC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBC,MAAAA,EAAE,EAACS;AADc,KAAf;AANO,GAAjB;;AAUA,MAAG;AACCH,IAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACA,UAAML,KAAK,CAAE,+BAAF,EAAkCT,QAAlC,CAAX;AACH,GAHD,CAGE,OAAMY,KAAN,EAAa;AACXC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AACJ,CAjBM;AAmBP,OAAO,MAAMK,aAAa,GAAG,MAAMD,OAAN,IAAkB;AAC3C,QAAMhB,QAAQ,GAAG;AACbC,IAAAA,MAAM,EAAC,MADM;AAEbC,IAAAA,OAAO,EAAE;AACLC,MAAAA,MAAM,EAAE,kBADH;AAEL,sBAAgB;AAFX,KAFI;AAMbC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBC,MAAAA,EAAE,EAACS,OADc;AAEjBE,MAAAA,QAAQ,EAAEnB;AAFO,KAAf;AANO,GAAjB;;AAWA,MAAG;AACCc,IAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACA,UAAML,KAAK,CAAE,+BAAF,EAAkCT,QAAlC,CAAX;AACH,GAHD,CAGE,OAAMY,KAAN,EAAa;AACXC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AACJ,CAlBM;AAqBP,OAAO,MAAMO,sBAAsB,GAAG,MAAMH,OAAN,IAAkB;AACpD,QAAMhB,QAAQ,GAAG;AACbC,IAAAA,MAAM,EAAC,MADM;AAEbC,IAAAA,OAAO,EAAE;AACLC,MAAAA,MAAM,EAAE,kBADH;AAEL,sBAAgB;AAFX,KAFI;AAMbC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBC,MAAAA,EAAE,EAACS;AADc,KAAf;AANO,GAAjB;;AAUA,MAAG;AACCH,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACA,UAAMN,QAAQ,GAAG,MAAMC,KAAK,CAAE,6BAAF,EAAgCT,QAAhC,CAA5B;AACAa,IAAAA,OAAO,CAACC,GAAR,CAAYN,QAAZ;AACA,UAAMY,KAAK,GAAG,MAAMZ,QAAQ,CAACG,IAAT,EAApB;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYM,KAAZ;AACA,WAAOA,KAAP;AACH,GAPD,CAOE,OAAMR,KAAN,EAAa;AACXC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AACJ,CArBM","sourcesContent":["export const fetchSelectedUserData = async(userID) => {\r\n    const settings = { \r\n        method:'POST',\r\n        headers: {\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n            id:userID\r\n        })\r\n    };\r\n    try{\r\n        const response = await fetch(`http://localhost:3000/user`, settings)\r\n        const user = await response.json();\r\n        return user\r\n    } catch(error) {\r\n        console.log(error)\r\n    }\r\n}\r\n\r\nexport const checkInAsset = async(assetID) => {\r\n    const settings = { \r\n        method:'POST',\r\n        headers: {\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n            id:assetID\r\n        })\r\n    };\r\n    try{\r\n        console.log('STEP 6: API Call begins')\r\n        await fetch(`http://localhost:3000/checkin`, settings)\r\n    } catch(error) {\r\n        console.log(error)\r\n    }\r\n}\r\n\r\nexport const checkOutAsset = async(assetID) => {\r\n    const settings = { \r\n        method:'POST',\r\n        headers: {\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n            id:assetID,\r\n            username: userID\r\n        })\r\n    };\r\n    try{\r\n        console.log('STEP 6: API Call begins')\r\n        await fetch(`http://localhost:3000/checkin`, settings)\r\n    } catch(error) {\r\n        console.log(error)\r\n    }\r\n}\r\n\r\n\r\nexport const fetchSelectedAssetData = async(assetID) => {\r\n    const settings = { \r\n        method:'POST',\r\n        headers: {\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n            id:assetID\r\n        })\r\n    };\r\n    try{\r\n        console.log('Second API Fetch')\r\n        const response = await fetch(`http://localhost:3000/asset`, settings);\r\n        console.log(response)\r\n        const asset = await response.json();\r\n        console.log(asset)\r\n        return asset\r\n    } catch(error) {\r\n        console.log(error);\r\n    }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}