{"ast":null,"code":"import { call, put, takeLatest, all } from \"redux-saga/effects\";\nimport { REQUEST_SELECTED_USER, receiveSelectedUserData } from \"../user/user.actions\";\nimport { httpFetchSelectedUserData } from '../../services/api';\n\nfunction* getUserData(action) {\n  try {\n    const userData = yield call(httpFetchSelectedUserData, action.userID);\n    yield put(receiveSelectedUserData(userData));\n  } catch (error) {\n    console.log(error);\n  }\n}\n\n;\nexport function* requestSelectedUserSaga() {\n  yield takeLatest(REQUEST_SELECTED_USER, getUserData);\n}\n;\nexport function* userSagas() {\n  yield all([call(requestSelectedUserSaga)]);\n}\n;","map":{"version":3,"sources":["C:/Users/alvar/Documents/WebDev/lendit/lendit/src/redux/user/user.sagas.js"],"names":["call","put","takeLatest","all","REQUEST_SELECTED_USER","receiveSelectedUserData","httpFetchSelectedUserData","getUserData","action","userData","userID","error","console","log","requestSelectedUserSaga","userSagas"],"mappings":"AAAA,SAASA,IAAT,EAAeC,GAAf,EAAoBC,UAApB,EAAgCC,GAAhC,QAA2C,oBAA3C;AACA,SACIC,qBADJ,EAEIC,uBAFJ,QAGS,sBAHT;AAIA,SAASC,yBAAT,QAA0C,oBAA1C;;AAEA,UAAUC,WAAV,CAAsBC,MAAtB,EAA8B;AAC1B,MAAG;AACC,UAAMC,QAAQ,GAAG,MAAMT,IAAI,CAACM,yBAAD,EAA4BE,MAAM,CAACE,MAAnC,CAA3B;AACA,UAAMT,GAAG,CAAEI,uBAAuB,CAACI,QAAD,CAAzB,CAAT;AACH,GAHD,CAGE,OAAME,KAAN,EAAa;AACXC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AACJ;;AAAA;AAED,OAAO,UAAUG,uBAAV,GAAoC;AACvC,QAAMZ,UAAU,CAAEE,qBAAF,EAAyBG,WAAzB,CAAhB;AACH;AAAA;AAGD,OAAO,UAAUQ,SAAV,GAAsB;AACzB,QAAMZ,GAAG,CAAG,CACRH,IAAI,CAACc,uBAAD,CADI,CAAH,CAAT;AAGH;AAAA","sourcesContent":["import { call, put, takeLatest, all } from \"redux-saga/effects\";\r\nimport { \r\n    REQUEST_SELECTED_USER,\r\n    receiveSelectedUserData\r\n  } from \"../user/user.actions\";\r\nimport { httpFetchSelectedUserData } from '../../services/api';\r\n\r\nfunction* getUserData(action) {\r\n    try{\r\n        const userData = yield call(httpFetchSelectedUserData, action.userID);\r\n        yield put (receiveSelectedUserData(userData));\r\n    } catch(error) {\r\n        console.log(error);\r\n    }\r\n};\r\n\r\nexport function* requestSelectedUserSaga() {\r\n    yield takeLatest( REQUEST_SELECTED_USER, getUserData ) ;\r\n};\r\n\r\n\r\nexport function* userSagas() {\r\n    yield all ( [ \r\n        call(requestSelectedUserSaga)\r\n    ] )\r\n};"]},"metadata":{},"sourceType":"module"}