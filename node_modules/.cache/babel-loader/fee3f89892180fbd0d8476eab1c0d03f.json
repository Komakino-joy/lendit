{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import _slicedToArray from\"C:/Users/alvar/Documents/WebDev/lendit/lendit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import{withRouter}from\"react-router-dom\";import{useAlert}from\"react-alert\";import{connect}from\"react-redux\";import{createStructuredSelector}from\"reselect\";import{isSignedIn}from\"../../redux/site-member/site-member.selectors\";import{handleMemberSignin}from\"../../redux/site-member/site-member.actions\";import{SignInPageBody,SignInArticle,SignInMain,SignInFieldSet,SignInLegend,SignInInput,SignInSubmit,RegisterLinkContainer,RegisterLink,Email,Password}from\"./signin.styles\";import{API_URL}from'../../services/api';import emailIcon from\"../../images/email_icon.svg\";import passwordIcon from\"../../images/password_icon.svg\";var SigninPage=function SigninPage(_ref){var history=_ref.history,signIn=_ref.signIn;var alert=useAlert();var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),email=_useState2[0],setEmail=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),password=_useState4[0],setPassword=_useState4[1];var onEmailChange=function onEmailChange(event){setEmail(event.target.value);};var onPasswordChange=function onPasswordChange(event){setPassword(event.target.value);};var onSubmitSignIn=function onSubmitSignIn(){fetch(\"\".concat(API_URL,\"/members/signin\"),{method:\"post\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({email:email,password:password})}).then(function(response){return response.json();}).then(function(member){if(member.id){signIn(member.id);history.push(\"/home\");}else{alert.show('Invalid credentials',{type:\"error\",position:\"top center\"});}});};return/*#__PURE__*/_jsxs(SignInPageBody,{children:[/*#__PURE__*/_jsx(SignInLegend,{children:\"Lendit Asset Tracker\"}),/*#__PURE__*/_jsx(SignInArticle,{children:/*#__PURE__*/_jsxs(SignInMain,{children:[/*#__PURE__*/_jsxs(SignInFieldSet,{children:[/*#__PURE__*/_jsxs(Email,{children:[/*#__PURE__*/_jsx(\"img\",{src:emailIcon,alt:\"user icon for sign in\",height:\"40px\",width:\"40px\"}),/*#__PURE__*/_jsx(SignInInput,{placeholder:\"Email Address\",type:\"text\",name:\"email-address\",id:\"email-address\",onChange:onEmailChange})]}),/*#__PURE__*/_jsxs(Password,{children:[/*#__PURE__*/_jsx(\"img\",{src:passwordIcon,alt:\"password icon for sign in\",height:\"40px\",width:\"40px\"}),/*#__PURE__*/_jsx(SignInInput,{placeholder:\"Password\",type:\"password\",name:\"password\",id:\"password\",onChange:onPasswordChange})]})]}),/*#__PURE__*/_jsx(SignInSubmit,{onClick:onSubmitSignIn,type:\"submit\",value:\"Sign in\"}),/*#__PURE__*/_jsx(RegisterLinkContainer,{children:/*#__PURE__*/_jsx(RegisterLink,{onClick:function onClick(){return history.push(\"/register\");},className:\"register-link\",children:\"New user?\"})})]})})]});};var mapStateToProps=createStructuredSelector({isSignedIn:isSignedIn});var mapDispatchToProps=function mapDispatchToProps(dispatch){return{signIn:function signIn(memberId){dispatch(handleMemberSignin(memberId));}};};export default withRouter(connect(mapStateToProps,mapDispatchToProps)(SigninPage));","map":{"version":3,"sources":["C:/Users/alvar/Documents/WebDev/lendit/lendit/src/pages/signin/signin.component.jsx"],"names":["React","useState","withRouter","useAlert","connect","createStructuredSelector","isSignedIn","handleMemberSignin","SignInPageBody","SignInArticle","SignInMain","SignInFieldSet","SignInLegend","SignInInput","SignInSubmit","RegisterLinkContainer","RegisterLink","Email","Password","API_URL","SigninPage","history","signIn","alert","email","setEmail","password","setPassword","onEmailChange","event","target","value","onPasswordChange","onSubmitSignIn","fetch","method","headers","body","JSON","stringify","then","response","json","member","id","push","show","type","position","emailIcon","passwordIcon","mapStateToProps","mapDispatchToProps","dispatch","memberId"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { useAlert } from \"react-alert\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport { isSignedIn } from \"../../redux/site-member/site-member.selectors\";\r\nimport { handleMemberSignin } from \"../../redux/site-member/site-member.actions\";\r\n\r\nimport {\r\n  SignInPageBody, SignInArticle, SignInMain, SignInFieldSet, SignInLegend, \r\n  SignInInput, SignInSubmit, RegisterLinkContainer, RegisterLink, Email, Password\r\n} from \"./signin.styles\";\r\n\r\nimport { API_URL } from '../../services/api';\r\n\r\nimport emailIcon from '../../images/email_icon.svg';\r\nimport passwordIcon from '../../images/password_icon.svg';\r\n\r\nconst SigninPage = ({ history, signIn }) => {\r\n  const alert = useAlert();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const onEmailChange = (event) => {\r\n    setEmail(event.target.value);\r\n  };\r\n\r\n  const onPasswordChange = (event) => {\r\n    setPassword(event.target.value);\r\n  };\r\n\r\n  const onSubmitSignIn = () => {\r\n    fetch(`${API_URL}/members/signin`, {\r\n        method: \"post\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          email: email,\r\n          password: password,\r\n        }),\r\n      })\r\n      .then((response) => response.json())\r\n      .then((member) => {\r\n        if (member.id) {\r\n          signIn(member.id);\r\n          history.push(\"/home\");\r\n        } else{\r\n          alert.show('Invalid credentials' , { type: \"error\" , position:\"top center\"})\r\n        }\r\n      })\r\n  };\r\n\r\n  return (\r\n    <SignInPageBody>\r\n      <SignInLegend>Lendit Asset Tracker</SignInLegend>\r\n      <SignInArticle>\r\n        <SignInMain>\r\n          <SignInFieldSet>\r\n\r\n            <Email>\r\n              <img src={emailIcon} alt='user icon for sign in' height='40px' width='40px'/>\r\n              <SignInInput\r\n                placeholder=\"Email Address\"\r\n                type=\"text\"\r\n                name=\"email-address\"\r\n                id=\"email-address\"\r\n                onChange={onEmailChange}\r\n              />\r\n            </Email>\r\n\r\n            <Password>\r\n              <img src={passwordIcon} alt='password icon for sign in' height='40px' width='40px'/>\r\n              <SignInInput\r\n                placeholder=\"Password\"\r\n                type=\"password\"\r\n                name=\"password\"\r\n                id=\"password\"\r\n                onChange={onPasswordChange}\r\n              />\r\n            </Password>\r\n          </SignInFieldSet>\r\n\r\n          <SignInSubmit\r\n            onClick={onSubmitSignIn}\r\n            type=\"submit\"\r\n            value=\"Sign in\"\r\n          />\r\n\r\n          <RegisterLinkContainer>\r\n            <RegisterLink\r\n              onClick={() => history.push(\"/register\")}\r\n              className=\"register-link\"\r\n            >\r\n              New user?\r\n            </RegisterLink>\r\n          </RegisterLinkContainer>\r\n        </SignInMain>\r\n      </SignInArticle>\r\n      \r\n    </SignInPageBody>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  isSignedIn,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  signIn: (memberId) => { dispatch(handleMemberSignin(memberId));},\r\n});\r\n\r\nexport default withRouter(\r\n  connect(mapStateToProps, mapDispatchToProps)(SigninPage)\r\n);\r\n"]},"metadata":{},"sourceType":"module"}