{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\bryan.alvarez\\\\Documents\\\\webdev\\\\git\\\\comp-overload\\\\client\\\\src\\\\components\\\\left\\\\left.component.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { createStructuredSelector } from 'reselect';\nimport { connect } from \"react-redux\";\nimport AssetDropDown from '../custom-drop-down/asset-drop-down.component';\nimport UserDropDown from \"../custom-drop-down/user-drop-down.component\";\nimport { LeftContainer, LeftInner, Tag } from \"./left.styles\";\nimport { requestSelectedAssetData } from \"../../redux/asset/asset.actions\";\nimport { requestAssetDropDownOptions } from '../../redux/drop-downs/drop-down.actions';\nimport { currentMemberId } from \"../../redux/site-member/site-member.selectors\";\nimport { selectAssets } from \"../../redux/drop-downs/drop-down.selectors\";\nimport selectedListItemID from \"../custom-drop-down/drop-down.utils\";\n\nconst ScanboxContainer = ({\n  getAssetDetails,\n  getAssetOptions,\n  assets,\n  memberId\n}) => {\n  _s();\n\n  useEffect(() => {\n    // Get Data from /allunits.\n    getAssetOptions(memberId);\n  }, [getAssetOptions, memberId]); //\n\n  return /*#__PURE__*/_jsxDEV(LeftContainer, {\n    children: /*#__PURE__*/_jsxDEV(LeftInner, {\n      children: [/*#__PURE__*/_jsxDEV(Tag, {\n        children: \"ASSET ID\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        onChange: getAssetDetails,\n        id: \"asset-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          text: \" \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 17\n        }, this), assets ? assets.map(asset => /*#__PURE__*/_jsxDEV(\"option\", {\n          children: [\" \", asset.id, \" \"]\n        }, asset.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this)) : /*#__PURE__*/_jsxDEV(\"option\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Tag, {\n        children: \"USER ID\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(UserDropDown, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ScanboxContainer, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = ScanboxContainer;\nconst mapStateToProps = createStructuredSelector({\n  memberId: currentMemberId,\n  assets: selectAssets\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getAssetDetails: () => {\n    dispatch(requestSelectedAssetData(selectedListItemID('asset-list')));\n  },\n  getAssetOptions: memberId => {\n    dispatch(requestAssetDropDownOptions(memberId));\n  }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ScanboxContainer);\n\nvar _c;\n\n$RefreshReg$(_c, \"ScanboxContainer\");","map":{"version":3,"sources":["C:/Users/bryan.alvarez/Documents/webdev/git/comp-overload/client/src/components/left/left.component.jsx"],"names":["React","useEffect","createStructuredSelector","connect","AssetDropDown","UserDropDown","LeftContainer","LeftInner","Tag","requestSelectedAssetData","requestAssetDropDownOptions","currentMemberId","selectAssets","selectedListItemID","ScanboxContainer","getAssetDetails","getAssetOptions","assets","memberId","map","asset","id","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAAgC,OAAhC;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,aAAP,MAA0B,+CAA1B;AACA,OAAOC,YAAP,MAAyB,8CAAzB;AAEA,SAAQC,aAAR,EAAuBC,SAAvB,EAAkCC,GAAlC,QAA6C,eAA7C;AAGA,SAASC,wBAAT,QAAyC,iCAAzC;AACA,SAASC,2BAAT,QAA4C,0CAA5C;AACA,SAASC,eAAT,QAAgC,+CAAhC;AACA,SAASC,YAAT,QAA6B,4CAA7B;AACA,OAAQC,kBAAR,MAAiC,qCAAjC;;AAKA,MAAMC,gBAAgB,GAAG,CAAC;AAAEC,EAAAA,eAAF;AAAmBC,EAAAA,eAAnB;AAAoCC,EAAAA,MAApC;AAA4CC,EAAAA;AAA5C,CAAD,KAA4D;AAAA;;AAEjFjB,EAAAA,SAAS,CAAC,MAAM;AACZ;AACAe,IAAAA,eAAe,CAACE,QAAD,CAAf;AACD,GAHM,EAGJ,CAACF,eAAD,EAAkBE,QAAlB,CAHI,CAAT,CAFiF,CAK9C;;AAEnC,sBACI,QAAC,aAAD;AAAA,2BACI,QAAC,SAAD;AAAA,8BACI,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,QAAQ,EAAEH,eAAf;AAAgC,QAAA,EAAE,EAAC,YAAnC;AAAA,gCACA;AAAQ,UAAA,IAAI,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,gBADA,EAGIE,MAAM,GACFA,MAAM,CAACE,GAAP,CAAWC,KAAK,iBACpB;AAAA,0BAA4BA,KAAK,CAACC,EAAlC;AAAA,WAAcD,KAAK,CAACC,EAApB;AAAA;AAAA;AAAA;AAAA,gBADI,CADE,gBAKN;AAAA;AAAA;AAAA;AAAA,gBARJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAcI,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAdJ,eAeI,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,cAfJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAoBE,CA3BN;;GAAMP,gB;;KAAAA,gB;AA+BN,MAAMQ,eAAe,GAAGpB,wBAAwB,CAAC;AAC7CgB,EAAAA,QAAQ,EAAEP,eADmC;AAE7CM,EAAAA,MAAM,EAAEL;AAFqC,CAAD,CAAhD;;AAKA,MAAMW,kBAAkB,GAAIC,QAAD,KAAe;AACtCT,EAAAA,eAAe,EAAE,MAAM;AAAES,IAAAA,QAAQ,CAACf,wBAAwB,CAACI,kBAAkB,CAAC,YAAD,CAAnB,CAAzB,CAAR;AAAqE,GADxD;AAEtCG,EAAAA,eAAe,EAAGE,QAAD,IAAc;AAAEM,IAAAA,QAAQ,CAACd,2BAA2B,CAACQ,QAAD,CAA5B,CAAR;AAAgD;AAF3C,CAAf,CAA3B;;AAMA,eAAef,OAAO,CAACmB,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CT,gBAA7C,CAAf","sourcesContent":["import React, {useEffect}  from 'react'\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { connect } from \"react-redux\";\r\n\r\nimport AssetDropDown from '../custom-drop-down/asset-drop-down.component';\r\nimport UserDropDown from \"../custom-drop-down/user-drop-down.component\";\r\n\r\nimport {LeftContainer, LeftInner, Tag } from \"./left.styles\";\r\n\r\n\r\nimport { requestSelectedAssetData } from \"../../redux/asset/asset.actions\";\r\nimport { requestAssetDropDownOptions } from '../../redux/drop-downs/drop-down.actions'\r\nimport { currentMemberId } from \"../../redux/site-member/site-member.selectors\";\r\nimport { selectAssets } from \"../../redux/drop-downs/drop-down.selectors\";\r\nimport  selectedListItemID  from \"../custom-drop-down/drop-down.utils\";\r\n\r\n\r\n\r\n\r\nconst ScanboxContainer = ({ getAssetDetails, getAssetOptions, assets, memberId }) => {\r\n    \r\n    useEffect(() => {\r\n        // Get Data from /allunits.\r\n        getAssetOptions(memberId)\r\n      }, [getAssetOptions, memberId]); //\r\n\r\n    return (\r\n        <LeftContainer>\r\n            <LeftInner>\r\n                <Tag>ASSET ID</Tag>\r\n                <div onChange={getAssetDetails} id=\"asset-list\"> \r\n                <option text=' '/>\r\n                {   \r\n                    assets ? (\r\n                        assets.map(asset => (\r\n                    <option key={ asset.id }> { asset.id } </option> \r\n                    ))\r\n                    ):(\r\n                    <option></option>\r\n                    )\r\n                }\r\n                </div>\r\n                <Tag>USER ID</Tag>\r\n                <UserDropDown/>\r\n            </LeftInner>\r\n        </LeftContainer>\r\n    )}\r\n\r\n\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    memberId: currentMemberId,\r\n    assets: selectAssets\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    getAssetDetails: () => { dispatch(requestSelectedAssetData(selectedListItemID('asset-list')))},\r\n    getAssetOptions: (memberId) => { dispatch(requestAssetDropDownOptions(memberId))}\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ScanboxContainer);"]},"metadata":{},"sourceType":"module"}