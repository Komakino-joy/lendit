{"ast":null,"code":"import { RECEIVE_SELECTED_ASSET } from \"./asset.actions\";\nconst INITIAL_STATE = {}; // eslint-disable-next-line import/no-anonymous-default-export\n\nconst assetData = (state = INITIAL_STATE, {\n  type,\n  assetData\n}) => {\n  let flatObj = Object.assign({}, ...function _flatten(o) {\n    return [].concat(...Object.keys(o).map(k => typeof o[k] === 'object' ? _flatten(o[k]) : {\n      [k]: o[k]\n    }));\n  }(assetData));\n  console.log(`\n  TYPE: ${type},  \n  ASSET_DATA: ${flatObj}`);\n\n  switch (type) {\n    case RECEIVE_SELECTED_ASSET:\n      return assetData;\n\n    default:\n      return state;\n  }\n};\n\nexport default assetData;","map":{"version":3,"sources":["C:/Users/bryan.alvarez/Documents/webdev/git/lendit/lendit/src/redux/asset/asset-reducer.js"],"names":["RECEIVE_SELECTED_ASSET","INITIAL_STATE","assetData","state","type","flatObj","Object","assign","_flatten","o","concat","keys","map","k","console","log"],"mappings":"AAAA,SACEA,sBADF,QAEO,iBAFP;AAIA,MAAMC,aAAa,GAAG,EAAtB,C,CAGA;;AACA,MAAMC,SAAS,GAAG,CAACC,KAAK,GAAGF,aAAT,EAA0B;AAAEG,EAAAA,IAAF;AAAQF,EAAAA;AAAR,CAA1B,KAAkD;AAClE,MAAIG,OAAO,GAAGC,MAAM,CAACC,MAAP,CACZ,EADY,EAEZ,GAAG,SAASC,QAAT,CAAkBC,CAAlB,EAAqB;AACtB,WAAO,GAAGC,MAAH,CAAU,GAAGJ,MAAM,CAACK,IAAP,CAAYF,CAAZ,EACjBG,GADiB,CACbC,CAAC,IACJ,OAAOJ,CAAC,CAACI,CAAD,CAAR,KAAgB,QAAhB,GACEL,QAAQ,CAACC,CAAC,CAACI,CAAD,CAAF,CADV,GAEG;AAAC,OAACA,CAAD,GAAKJ,CAAC,CAACI,CAAD;AAAP,KAJa,CAAb,CAAP;AAOD,GARE,CAQDX,SARC,CAFS,CAAd;AAYAY,EAAAA,OAAO,CAACC,GAAR,CAAa;AACf,UAAUX,IAAK;AACf,gBAAgBC,OAAQ,EAFtB;;AAGA,UAAQD,IAAR;AACE,SAAKJ,sBAAL;AACE,aAAOE,SAAP;;AACF;AACE,aAAOC,KAAP;AAJJ;AAMD,CAtBD;;AAwBA,eAAeD,SAAf","sourcesContent":["import { \r\n  RECEIVE_SELECTED_ASSET\r\n} from \"./asset.actions\";\r\n\r\nconst INITIAL_STATE = {\r\n}\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nconst assetData = (state = INITIAL_STATE  , { type, assetData }) => {\r\n  let flatObj = Object.assign(\r\n    {}, \r\n    ...function _flatten(o) { \r\n      return [].concat(...Object.keys(o)\r\n        .map(k => \r\n          typeof o[k] === 'object' ?\r\n            _flatten(o[k]) : \r\n            ({[k]: o[k]})\r\n        )\r\n      );\r\n    }(assetData)\r\n  )\r\n  console.log(`\r\n  TYPE: ${type},  \r\n  ASSET_DATA: ${flatObj}`);\r\n  switch (type) {\r\n    case RECEIVE_SELECTED_ASSET:\r\n      return assetData;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default assetData; "]},"metadata":{},"sourceType":"module"}