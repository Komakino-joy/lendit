{"ast":null,"code":"export const fetchSelectedAssetData = async assetID => {\n  const settings = {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      id: assetID\n    })\n  };\n\n  try {\n    const response = await fetch(`https://lendit-api.herokuapp.com/asset`, settings);\n    const asset = await response.json();\n    return asset;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const fetchSelectedUserData = async userID => {\n  const settings = {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      id: userID\n    })\n  };\n\n  try {\n    const response = await fetch(`https://lendit-api.herokuapp.com/user`, settings);\n    const user = await response.json();\n    return user;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const checkInAsset = async (assetId, owner, assetName, assetSerial, assetModel) => {\n  const settings = {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      id: assetId,\n      owner,\n      assetName,\n      assetSerial,\n      assetModel\n    })\n  };\n\n  try {\n    await fetch(`https://lendit-api.herokuapp.com/checkin`, settings);\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const checkOutAsset = async (assetID, userID, owner, assetName, assetSerial, assetModel) => {\n  const settings = {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      id: assetID,\n      username: userID,\n      owner,\n      assetName,\n      assetSerial,\n      assetModel\n    })\n  };\n\n  try {\n    await fetch(`https://lendit-api.herokuapp.com/checkout`, settings);\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const quarantineAsset = async (assetID, userID, owner, assetName, assetSerial, assetModel, comment) => {\n  const settings = {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      id: assetID,\n      username: userID,\n      owner,\n      assetName,\n      assetSerial,\n      assetModel,\n      comment\n    })\n  };\n\n  try {\n    await fetch(`https://lendit-api.herokuapp.com/quarantine`, settings);\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const createNewUser = async (userId, fname, lname, memberId) => {\n  const settings = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      userid: userId,\n      fname: fname,\n      lname: lname,\n      memberId: memberId\n    })\n  };\n\n  try {\n    const response = await fetch(`https://lendit-api.herokuapp.com/adduser`, settings);\n    const reply = await response.json();\n    return reply;\n  } catch (error) {\n    return error;\n  }\n};\nexport const createNewAsset = async (assetID, assetName, assetModel, assetSerial, memberId) => {\n  const settings = {\n    method: \"post\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      id: assetID,\n      name: assetName,\n      model: assetModel,\n      serial: assetSerial,\n      memberId: memberId\n    })\n  };\n\n  try {\n    const response = await fetch(\"https://lendit-api.herokuapp.com/addasset\", settings);\n    const reply = await response.json();\n    return reply;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const removeAsset = async assetID => {\n  const settings = {\n    method: \"delete\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      id: assetID\n    })\n  };\n\n  try {\n    const response = await fetch(\"https://lendit-api.herokuapp.com/removeasset\", settings);\n    const reply = await response.json();\n    return reply;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const fetchAllAssetsForDropDown = async dispatchData => {\n  const settings = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      memberId: dispatchData.payload\n    })\n  };\n\n  try {\n    const response = await fetch(\"https://lendit-api.herokuapp.com/allunits\", settings);\n    const assetList = await response.json();\n    return assetList;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const fetchAllUsersForDropDown = async dispatchData => {\n  const settings = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      memberId: dispatchData.payload\n    })\n  };\n\n  try {\n    const response = await fetch(\"https://lendit-api.herokuapp.com/allusers\", settings);\n    const assetList = await response.json();\n    return assetList;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const fetchAllModelsForDropDown = async dispatchData => {\n  const settings = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      memberId: dispatchData.payload\n    })\n  };\n\n  try {\n    const response = await fetch(\"https://lendit-api.herokuapp.com/allmodels\", settings);\n    const assetList = await response.json();\n    return assetList;\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"sources":["C:/Users/alvar/Documents/WebDev/lendit/lendit_ui/src/services/api.js"],"names":["fetchSelectedAssetData","assetID","settings","method","headers","Accept","body","JSON","stringify","id","response","fetch","asset","json","error","console","log","fetchSelectedUserData","userID","user","checkInAsset","assetId","owner","assetName","assetSerial","assetModel","checkOutAsset","username","quarantineAsset","comment","createNewUser","userId","fname","lname","memberId","userid","reply","createNewAsset","name","model","serial","removeAsset","fetchAllAssetsForDropDown","dispatchData","payload","assetList","fetchAllUsersForDropDown","fetchAllModelsForDropDown"],"mappings":"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","sourcesContent":["export const fetchSelectedAssetData = async (assetID) => {\r\n  const settings = {\r\n    method: \"POST\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({\r\n      id: assetID,\r\n    }),\r\n  };\r\n  try {\r\n    const response = await fetch(\r\n      `https://lendit-api.herokuapp.com/asset`,\r\n      settings\r\n    );\r\n    const asset = await response.json();\r\n    return asset;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const fetchSelectedUserData = async (userID) => {\r\n  const settings = {\r\n    method: \"POST\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({\r\n      id: userID,\r\n    }),\r\n  };\r\n  try {\r\n    const response = await fetch(\r\n      `https://lendit-api.herokuapp.com/user`,\r\n      settings\r\n    );\r\n    const user = await response.json();\r\n    return user;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const checkInAsset = async (\r\n  assetId,\r\n  owner,\r\n  assetName,\r\n  assetSerial,\r\n  assetModel\r\n) => {\r\n  const settings = {\r\n    method: \"POST\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({\r\n      id: assetId,\r\n      owner,\r\n      assetName,\r\n      assetSerial,\r\n      assetModel,\r\n    }),\r\n  };\r\n  try {\r\n    await fetch(`https://lendit-api.herokuapp.com/checkin`, settings);\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const checkOutAsset = async (\r\n  assetID,\r\n  userID,\r\n  owner,\r\n  assetName,\r\n  assetSerial,\r\n  assetModel\r\n) => {\r\n  const settings = {\r\n    method: \"POST\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({\r\n      id: assetID,\r\n      username: userID,\r\n      owner,\r\n      assetName,\r\n      assetSerial,\r\n      assetModel,\r\n    }),\r\n  };\r\n  try {\r\n    await fetch(`https://lendit-api.herokuapp.com/checkout`, settings);\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const quarantineAsset = async (\r\n  assetID,\r\n  userID,\r\n  owner,\r\n  assetName,\r\n  assetSerial,\r\n  assetModel,\r\n  comment\r\n) => {\r\n  const settings = {\r\n    method: \"POST\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({\r\n      id: assetID,\r\n      username: userID,\r\n      owner,\r\n      assetName,\r\n      assetSerial,\r\n      assetModel,\r\n      comment,\r\n    }),\r\n  };\r\n  try {\r\n    await fetch(`https://lendit-api.herokuapp.com/quarantine`, settings);\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const createNewUser = async (userId, fname, lname, memberId) => {\r\n  const settings = {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify({\r\n      userid: userId,\r\n      fname: fname,\r\n      lname: lname,\r\n      memberId: memberId,\r\n    }),\r\n  };\r\n  try {\r\n    const response = await fetch(\r\n      `https://lendit-api.herokuapp.com/adduser`,\r\n      settings\r\n    );\r\n    const reply = await response.json();\r\n    return reply;\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nexport const createNewAsset = async (\r\n  assetID,\r\n  assetName,\r\n  assetModel,\r\n  assetSerial,\r\n  memberId\r\n) => {\r\n  const settings = {\r\n    method: \"post\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify({\r\n      id: assetID,\r\n      name: assetName,\r\n      model: assetModel,\r\n      serial: assetSerial,\r\n      memberId: memberId,\r\n    }),\r\n  };\r\n  try {\r\n    const response = await fetch(\r\n      \"https://lendit-api.herokuapp.com/addasset\",\r\n      settings\r\n    );\r\n    const reply = await response.json();\r\n    return reply;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const removeAsset = async (assetID) => {\r\n  const settings = {\r\n    method: \"delete\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify({\r\n      id: assetID,\r\n    }),\r\n  };\r\n  try {\r\n    const response = await fetch(\r\n      \"https://lendit-api.herokuapp.com/removeasset\",\r\n      settings\r\n    );\r\n    const reply = await response.json();\r\n    return reply;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const fetchAllAssetsForDropDown = async (dispatchData) => {\r\n  const settings = {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify({\r\n      memberId: dispatchData.payload,\r\n    }),\r\n  };\r\n  try {\r\n    const response = await fetch(\r\n      \"https://lendit-api.herokuapp.com/allunits\",\r\n      settings\r\n    );\r\n    const assetList = await response.json();\r\n    return assetList;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const fetchAllUsersForDropDown = async (dispatchData) => {\r\n  const settings = {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify({\r\n      memberId: dispatchData.payload,\r\n    }),\r\n  };\r\n  try {\r\n    const response = await fetch(\r\n      \"https://lendit-api.herokuapp.com/allusers\",\r\n      settings\r\n    );\r\n    const assetList = await response.json();\r\n    return assetList;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const fetchAllModelsForDropDown = async (dispatchData) => {\r\n  const settings = {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify({\r\n      memberId: dispatchData.payload,\r\n    }),\r\n  };\r\n  try {\r\n    const response = await fetch(\r\n      \"https://lendit-api.herokuapp.com/allmodels\",\r\n      settings\r\n    );\r\n    const assetList = await response.json();\r\n    return assetList;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}