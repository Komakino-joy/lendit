{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\bryan.alvarez\\\\Documents\\\\webdev\\\\git\\\\comp-overload\\\\client\\\\src\\\\components\\\\custom-drop-down\\\\model-drop-down.component.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { createStructuredSelector } from 'reselect';\nimport { connect } from \"react-redux\";\nimport { requestModelDropDownOptions } from '../../redux/drop-downs/drop-down.actions';\nimport { currentMemberId } from \"../../redux/site-member/site-member.selectors\";\nimport { selectModels } from \"../../redux/drop-downs/drop-down.selectors\";\nimport { DropDownContainer, DropDown } from \"./drop-down.styles\";\n\nconst ModelDropDown = ({\n  models,\n  getModelOptions,\n  memberId,\n  ...props\n}) => {\n  _s();\n\n  useEffect(() => {\n    // Get Data from /allusers when component mounts.\n    getModelOptions(memberId);\n  }, [getModelOptions, memberId]); // getUserOptions will not update, it was passed as a dependency to mute the console.warning. \n\n  return /*#__PURE__*/_jsxDEV(DropDownContainer, { ...props,\n    children: /*#__PURE__*/_jsxDEV(DropDown, {\n      id: \"asset-model\",\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        children: \"Select a model\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), models ? models.map(model => /*#__PURE__*/_jsxDEV(\"option\", {\n        children: [\" \", model.model_name, \" \"]\n      }, model.model_name, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 25\n      }, this)) : /*#__PURE__*/_jsxDEV(\"option\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ModelDropDown, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = ModelDropDown;\nconst mapStateToProps = createStructuredSelector({\n  memberId: currentMemberId,\n  models: selectModels\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getModelOptions: memberId => {\n    dispatch(requestModelDropDownOptions(memberId));\n  }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ModelDropDown);\n\nvar _c;\n\n$RefreshReg$(_c, \"ModelDropDown\");","map":{"version":3,"sources":["C:/Users/bryan.alvarez/Documents/webdev/git/comp-overload/client/src/components/custom-drop-down/model-drop-down.component.jsx"],"names":["React","useEffect","createStructuredSelector","connect","requestModelDropDownOptions","currentMemberId","selectModels","DropDownContainer","DropDown","ModelDropDown","models","getModelOptions","memberId","props","map","model","model_name","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";;;;;AACA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,wBAAT,QAAyC,UAAzC;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,2BAAT,QAA4C,0CAA5C;AAEA,SAASC,eAAT,QAAgC,+CAAhC;AACA,SAASC,YAAT,QAA6B,4CAA7B;AAEA,SAASC,iBAAT,EAA4BC,QAA5B,QAA4C,oBAA5C;;AAEA,MAAMC,aAAa,GAAE,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,eAAV;AAA2BC,EAAAA,QAA3B;AAAqC,KAAGC;AAAxC,CAAD,KAAqD;AAAA;;AAEtEZ,EAAAA,SAAS,CAAC,MAAM;AACZ;AACAU,IAAAA,eAAe,CAACC,QAAD,CAAf;AACD,GAHM,EAGJ,CAACD,eAAD,EAAkBC,QAAlB,CAHI,CAAT,CAFsE,CAKnC;;AAEnC,sBACI,QAAC,iBAAD,OAAuBC,KAAvB;AAAA,2BACI,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC,aAAb;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAGQH,MAAM,GACJA,MAAM,CAACI,GAAP,CAAWC,KAAK,iBACd;AAAA,wBAAoCA,KAAK,CAACC,UAA1C;AAAA,SAAcD,KAAK,CAACC,UAApB;AAAA;AAAA;AAAA;AAAA,cADF,CADI,gBAKF;AAAA;AAAA;AAAA;AAAA,cARZ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH,CAvBD;;GAAMP,a;;KAAAA,a;AAyBN,MAAMQ,eAAe,GAAGf,wBAAwB,CAAC;AAC7CU,EAAAA,QAAQ,EAAEP,eADmC;AAE7CK,EAAAA,MAAM,EAAEJ;AAFqC,CAAD,CAAhD;;AAKA,MAAMY,kBAAkB,GAAIC,QAAD,KAAe;AACtCR,EAAAA,eAAe,EAAIC,QAAD,IAAc;AAAEO,IAAAA,QAAQ,CAACf,2BAA2B,CAACQ,QAAD,CAA5B,CAAR;AAAgD;AAD5C,CAAf,CAA3B;;AAIA,eAAeT,OAAO,CAACc,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CT,aAA7C,CAAf","sourcesContent":["\r\nimport React, {useEffect} from 'react'\r\nimport { createStructuredSelector } from 'reselect';\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { requestModelDropDownOptions } from '../../redux/drop-downs/drop-down.actions'\r\n\r\nimport { currentMemberId } from \"../../redux/site-member/site-member.selectors\";\r\nimport { selectModels } from \"../../redux/drop-downs/drop-down.selectors\";\r\n\r\nimport { DropDownContainer, DropDown } from \"./drop-down.styles\";\r\n\r\nconst ModelDropDown =({ models, getModelOptions, memberId, ...props }) => {\r\n\r\n    useEffect(() => {\r\n        // Get Data from /allusers when component mounts.\r\n        getModelOptions(memberId)\r\n      }, [getModelOptions, memberId]); // getUserOptions will not update, it was passed as a dependency to mute the console.warning. \r\n    \r\n    return(\r\n        <DropDownContainer {...props}>\r\n            <DropDown id=\"asset-model\">\r\n                <option>Select a model</option>\r\n                  {   \r\n                    models ? (\r\n                      models.map(model => (\r\n                        <option key={ model.model_name }> { model.model_name } </option> \r\n                      ))\r\n                      ):(\r\n                        <option></option>\r\n                      )\r\n                  }\r\n            </DropDown>\r\n        </DropDownContainer>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    memberId: currentMemberId,\r\n    models: selectModels\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    getModelOptions : (memberId) => { dispatch(requestModelDropDownOptions(memberId))}\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ModelDropDown);\r\n"]},"metadata":{},"sourceType":"module"}