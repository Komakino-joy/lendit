{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\alvar\\\\Documents\\\\WebDev\\\\comp-overload\\\\client\\\\src\\\\components\\\\center\\\\center.utils.js\";\nimport { CurrentAssetStatus } from \"../../redux/asset/asset.selectors\";\n\nfunction timeout(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\n; // Used to add a gap between updating the database and requesting the new asset details from the database\n\nexport const assetTransaction = async (transaction, fetchNew, assetID, userID = null) => {\n  if (transaction.name === 'checkOutAsset' && !userID) {\n    alert('User is required to check out a unit');\n  } else if (assetID) {\n    console.log( /*#__PURE__*/_jsxDEV(CurrentAssetStatus, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 21\n    }, this));\n  } else {\n    try {\n      await transaction(assetID, userID);\n      await timeout(100);\n      await fetchNew(assetID);\n    } catch (e) {\n      console.log(e);\n    }\n  }\n}; // transaction.name === 'checkOutAsset' && assetID.status.slice(0, 10) === 'In Use By '","map":{"version":3,"sources":["C:/Users/alvar/Documents/WebDev/comp-overload/client/src/components/center/center.utils.js"],"names":["CurrentAssetStatus","timeout","ms","Promise","resolve","setTimeout","assetTransaction","transaction","fetchNew","assetID","userID","name","alert","console","log","e"],"mappings":";;AAAA,SAASA,kBAAT,QAAmC,mCAAnC;;AAGA,SAASC,OAAT,CAAiBC,EAAjB,EAAqB;AACjB,SAAO,IAAIC,OAAJ,CAAYC,OAAO,IAAIC,UAAU,CAACD,OAAD,EAAUF,EAAV,CAAjC,CAAP;AACH;;AAAA,C,CACD;;AACA,OAAO,MAAMI,gBAAgB,GAAG,OAAOC,WAAP,EAAoBC,QAApB,EAA8BC,OAA9B,EAAuCC,MAAM,GAAG,IAAhD,KAAyD;AACrF,MAAIH,WAAW,CAACI,IAAZ,KAAqB,eAArB,IAAwC,CAACD,MAA7C,EAAqD;AACjDE,IAAAA,KAAK,CAAC,sCAAD,CAAL;AACH,GAFD,MAEM,IAAIH,OAAJ,EAAa;AACfI,IAAAA,OAAO,CAACC,GAAR,eAAY,QAAC,kBAAD;AAAA;AAAA;AAAA;AAAA,YAAZ;AACH,GAFK,MAEC;AAEH,QAAG;AACC,YAAMP,WAAW,CAACE,OAAD,EAAUC,MAAV,CAAjB;AACA,YAAMT,OAAO,CAAC,GAAD,CAAb;AACA,YAAMO,QAAQ,CAACC,OAAD,CAAd;AACH,KAJD,CAIE,OAAMM,CAAN,EAAS;AACPF,MAAAA,OAAO,CAACC,GAAR,CAAYC,CAAZ;AACH;AACJ;AACJ,CAfM,C,CAkBP","sourcesContent":["import { CurrentAssetStatus } from \"../../redux/asset/asset.selectors\";\r\n\r\n\r\nfunction timeout(ms) {\r\n    return new Promise(resolve => setTimeout(resolve, ms));\r\n};\r\n// Used to add a gap between updating the database and requesting the new asset details from the database\r\nexport const assetTransaction = async( transaction, fetchNew, assetID, userID = null) => {\r\n    if (transaction.name === 'checkOutAsset' && !userID) {\r\n        alert('User is required to check out a unit')\r\n    }else if (assetID) {\r\n        console.log(<CurrentAssetStatus/>)\r\n    } else {\r\n\r\n        try{\r\n            await transaction(assetID, userID);\r\n            await timeout(100);\r\n            await fetchNew(assetID);\r\n        } catch(e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n};\r\n\r\n\r\n// transaction.name === 'checkOutAsset' && assetID.status.slice(0, 10) === 'In Use By '"]},"metadata":{},"sourceType":"module"}