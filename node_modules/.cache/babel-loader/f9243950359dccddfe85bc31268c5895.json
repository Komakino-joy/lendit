{"ast":null,"code":"import { all, call, takeLatest, put } from 'redux-saga/effects';\nimport { httpRegisterUser, httpSignInUser } from '../../services/api';\nimport SiteMemberActionTypes from './site-member.types';\nimport { registrationFailure, registrationSuccess, signInFailure, signInSuccess } from './site-member.actions';\nexport function* register({\n  payload: {\n    fname,\n    lname,\n    email,\n    password\n  }\n}) {\n  try {\n    const user = yield httpRegisterUser(fname, lname, email, password);\n    yield put(registrationSuccess(user));\n  } catch (error) {\n    yield put(registrationFailure(error));\n  }\n}\n;\nexport function* onRegistrationStart() {\n  yield takeLatest(SiteMemberActionTypes.REGISTER_START, register);\n}\n;\nexport function* onSignInStart() {\n  yield takeLatest(SiteMemberActionTypes.SIGN_IN_START, signIn);\n}\nexport function* siteMemberSagas() {\n  yield all([call(onRegistrationStart), call(onSignInStart)]);\n}\n;","map":{"version":3,"sources":["C:/Users/bryan.alvarez/Documents/webdev/git/lendit/lendit/src/redux/site-member/site-member.sagas.js"],"names":["all","call","takeLatest","put","httpRegisterUser","httpSignInUser","SiteMemberActionTypes","registrationFailure","registrationSuccess","signInFailure","signInSuccess","register","payload","fname","lname","email","password","user","error","onRegistrationStart","REGISTER_START","onSignInStart","SIGN_IN_START","signIn","siteMemberSagas"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,UAApB,EAAgCC,GAAhC,QAA2C,oBAA3C;AAEA,SACIC,gBADJ,EAEIC,cAFJ,QAGO,oBAHP;AAKA,OAAOC,qBAAP,MAAkC,qBAAlC;AAEA,SACIC,mBADJ,EAEIC,mBAFJ,EAGIC,aAHJ,EAIIC,aAJJ,QAKO,uBALP;AAOA,OAAO,UAAUC,QAAV,CAAmB;AAACC,EAAAA,OAAO,EAAE;AAAEC,IAAAA,KAAF;AAASC,IAAAA,KAAT;AAAgBC,IAAAA,KAAhB;AAAuBC,IAAAA;AAAvB;AAAV,CAAnB,EAAiE;AACpE,MAAG;AACC,UAAMC,IAAI,GAAG,MAAOb,gBAAgB,CAACS,KAAD,EAAQC,KAAR,EAAeC,KAAf,EAAsBC,QAAtB,CAApC;AACA,UAAMb,GAAG,CAACK,mBAAmB,CAACS,IAAD,CAApB,CAAT;AACH,GAHD,CAGC,OAAMC,KAAN,EAAY;AACT,UAAMf,GAAG,CAACI,mBAAmB,CAACW,KAAD,CAApB,CAAT;AACH;AACJ;AAAA;AAED,OAAO,UAAUC,mBAAV,GAAgC;AACnC,QAAMjB,UAAU,CAACI,qBAAqB,CAACc,cAAvB,EAAuCT,QAAvC,CAAhB;AACH;AAAA;AAED,OAAO,UAAUU,aAAV,GAA0B;AAC7B,QAAMnB,UAAU,CAACI,qBAAqB,CAACgB,aAAvB,EAAsCC,MAAtC,CAAhB;AACH;AAED,OAAO,UAAUC,eAAV,GAA4B;AAC/B,QAAMxB,GAAG,CAAC,CACNC,IAAI,CAACkB,mBAAD,CADE,EAENlB,IAAI,CAACoB,aAAD,CAFE,CAAD,CAAT;AAIH;AAAA","sourcesContent":["import { all, call, takeLatest, put } from 'redux-saga/effects';\r\n\r\nimport { \r\n    httpRegisterUser, \r\n    httpSignInUser \r\n} from '../../services/api';\r\n\r\nimport SiteMemberActionTypes from './site-member.types';\r\n\r\nimport {\r\n    registrationFailure,\r\n    registrationSuccess,\r\n    signInFailure,\r\n    signInSuccess\r\n} from './site-member.actions'\r\n\r\nexport function* register({payload: { fname, lname, email, password }}) {\r\n    try{\r\n        const user = yield  httpRegisterUser(fname, lname, email, password);\r\n        yield put(registrationSuccess(user)); \r\n    }catch(error){\r\n        yield put(registrationFailure(error));\r\n    } \r\n};\r\n\r\nexport function* onRegistrationStart() {\r\n    yield takeLatest(SiteMemberActionTypes.REGISTER_START, register)\r\n};\r\n\r\nexport function* onSignInStart() {\r\n    yield takeLatest(SiteMemberActionTypes.SIGN_IN_START, signIn)\r\n}\r\n\r\nexport function* siteMemberSagas() {\r\n    yield all([\r\n        call(onRegistrationStart),\r\n        call(onSignInStart),\r\n    ]);\r\n};"]},"metadata":{},"sourceType":"module"}