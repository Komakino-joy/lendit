{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\bryan.alvarez\\\\Documents\\\\webdev\\\\git\\\\lendit\\\\lendit\\\\src\\\\pages\\\\register\\\\register.component.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useAlert } from \"react-alert\";\nimport { connect } from \"react-redux\";\nimport { handleMemberSignin } from \"../../redux/site-member/site-member.actions\";\nimport { RegistrationPageBody, RegistrationArticle, RegistrationMain, RegistrationFieldSet, RegistrationLegend, RegistrationLabel, RegistrationInput, RegistrationSubmit, NameFieldContainer, NameField, Email, Password } from \"./register.styles\";\n\nconst RegistrationPage = ({\n  history,\n  signIn\n}) => {\n  _s();\n\n  const [fname, setFname] = useState('');\n  const [lname, setLname] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const alert = useAlert();\n\n  const onFirstNameChange = event => {\n    setFname(event.target.value);\n  };\n\n  const onLastNameChange = event => {\n    setLname(event.target.value);\n  };\n\n  const onEmailChange = event => {\n    setEmail(event.target.value);\n  };\n\n  const onPasswordChange = event => {\n    setPassword(event.target.value);\n  };\n\n  const onSubmitRegister = () => {\n    fetch(\"http://localhost:3000/register\", {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        fname: fname,\n        lname: lname,\n        email: email,\n        password: password\n      })\n    }) // * Handling incorrect credentials\n    .then(response => response.json()).then(member => {\n      if (member.id) {\n        signIn(member);\n        history.push(\"/home\");\n      } else {\n        alert.show('Unable to register', {\n          type: \"error\",\n          position: \"top center\"\n        });\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(RegistrationPageBody, {\n    children: [/*#__PURE__*/_jsxDEV(RegistrationLegend, {\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RegistrationArticle, {\n      children: /*#__PURE__*/_jsxDEV(RegistrationMain, {\n        children: [/*#__PURE__*/_jsxDEV(RegistrationFieldSet, {\n          children: [/*#__PURE__*/_jsxDEV(NameFieldContainer, {\n            children: [/*#__PURE__*/_jsxDEV(NameField, {\n              children: /*#__PURE__*/_jsxDEV(RegistrationInput, {\n                placeholder: \"First Name\",\n                type: \"text\",\n                name: \"fname\",\n                id: \"fname\",\n                onChange: onFirstNameChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(NameField, {\n              children: [/*#__PURE__*/_jsxDEV(RegistrationLabel, {\n                htmlFor: \"lname\",\n                children: \"Last Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(RegistrationInput, {\n                type: \"text\",\n                name: \"lname\",\n                id: \"lname\",\n                onChange: onLastNameChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Email, {\n            children: [/*#__PURE__*/_jsxDEV(RegistrationLabel, {\n              htmlFor: \"email-address\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(RegistrationInput, {\n              type: \"email\",\n              name: \"email-address\",\n              id: \"email-address\",\n              onChange: onEmailChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Password, {\n            children: [/*#__PURE__*/_jsxDEV(RegistrationLabel, {\n              htmlFor: \"password\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(RegistrationInput, {\n              type: \"password\",\n              name: \"password\",\n              id: \"password\",\n              onChange: onPasswordChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(RegistrationSubmit, {\n          type: \"submit\",\n          value: \"Register\",\n          onClick: onSubmitRegister\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RegistrationPage, \"qhknfonJIz/u/Gn402ZlFkdywSg=\", false, function () {\n  return [useAlert];\n});\n\n_c = RegistrationPage;\n\nconst mapDispatchToProps = dispatch => ({\n  signIn: memberId => {\n    dispatch(handleMemberSignin(memberId));\n  }\n});\n\nexport default connect(null, mapDispatchToProps)(RegistrationPage);\n\nvar _c;\n\n$RefreshReg$(_c, \"RegistrationPage\");","map":{"version":3,"sources":["C:/Users/bryan.alvarez/Documents/webdev/git/lendit/lendit/src/pages/register/register.component.jsx"],"names":["React","useState","useAlert","connect","handleMemberSignin","RegistrationPageBody","RegistrationArticle","RegistrationMain","RegistrationFieldSet","RegistrationLegend","RegistrationLabel","RegistrationInput","RegistrationSubmit","NameFieldContainer","NameField","Email","Password","RegistrationPage","history","signIn","fname","setFname","lname","setLname","email","setEmail","password","setPassword","alert","onFirstNameChange","event","target","value","onLastNameChange","onEmailChange","onPasswordChange","onSubmitRegister","fetch","method","headers","body","JSON","stringify","then","response","json","member","id","push","show","type","position","mapDispatchToProps","dispatch","memberId"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useAlert } from \"react-alert\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { handleMemberSignin } from \"../../redux/site-member/site-member.actions\";\r\n\r\nimport { RegistrationPageBody, RegistrationArticle, RegistrationMain, RegistrationFieldSet, RegistrationLegend, \r\n  RegistrationLabel, RegistrationInput, RegistrationSubmit, NameFieldContainer, NameField, Email, Password\r\n} from \"./register.styles\";\r\n\r\nconst RegistrationPage = ({ history, signIn }) =>{\r\n\r\n  const [fname, setFname] = useState('');\r\n  const [lname, setLname] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const alert = useAlert();\r\n\r\n  const onFirstNameChange = (event) => {\r\n    setFname(event.target.value);\r\n  };\r\n\r\n  const onLastNameChange = (event) => {\r\n    setLname(event.target.value);\r\n  };\r\n\r\n  const onEmailChange = (event) => {\r\n    setEmail(event.target.value);\r\n  };\r\n\r\n  const onPasswordChange = (event) => {\r\n    setPassword(event.target.value);\r\n  };\r\n\r\n  const onSubmitRegister = () => {\r\n    fetch(\"http://localhost:3000/register\", {\r\n      method: \"post\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        fname: fname,\r\n        lname: lname,\r\n        email: email,\r\n        password: password,\r\n      }),\r\n    })\r\n      // * Handling incorrect credentials\r\n      .then((response) => response.json())\r\n      .then((member) => {\r\n        if (member.id) {\r\n          signIn(member);\r\n          history.push(\"/home\");\r\n        } else {\r\n          alert.show('Unable to register' , { type: \"error\" , position:\"top center\"})\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <RegistrationPageBody>\r\n      <RegistrationLegend>Register</RegistrationLegend>\r\n      <RegistrationArticle>\r\n        <RegistrationMain>\r\n          <RegistrationFieldSet>\r\n            <NameFieldContainer>\r\n              <NameField>\r\n                <RegistrationInput\r\n                  placeholder='First Name'\r\n                  type=\"text\"\r\n                  name=\"fname\"\r\n                  id=\"fname\"\r\n                  onChange={onFirstNameChange}\r\n                />\r\n              </NameField>\r\n\r\n              <NameField>\r\n                <RegistrationLabel htmlFor=\"lname\">\r\n                  Last Name\r\n                </RegistrationLabel>\r\n                <RegistrationInput\r\n                  type=\"text\"\r\n                  name=\"lname\"\r\n                  id=\"lname\"\r\n                  onChange={onLastNameChange}\r\n                />\r\n              </NameField>\r\n            </NameFieldContainer>\r\n\r\n            <Email>\r\n              <RegistrationLabel htmlFor=\"email-address\">\r\n                Email\r\n              </RegistrationLabel>\r\n              <RegistrationInput\r\n                type=\"email\"\r\n                name=\"email-address\"\r\n                id=\"email-address\"\r\n                onChange={onEmailChange}\r\n              />\r\n            </Email>\r\n\r\n            <Password>\r\n              <RegistrationLabel htmlFor=\"password\">\r\n                Password\r\n              </RegistrationLabel>\r\n              <RegistrationInput\r\n                type=\"password\"\r\n                name=\"password\"\r\n                id=\"password\"\r\n                onChange={onPasswordChange}\r\n              />\r\n            </Password>\r\n          </RegistrationFieldSet>\r\n\r\n          <RegistrationSubmit\r\n            type=\"submit\"\r\n            value=\"Register\"\r\n            onClick={onSubmitRegister}\r\n          />\r\n        </RegistrationMain>\r\n      </RegistrationArticle>\r\n    </RegistrationPageBody>\r\n  );\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  signIn: (memberId) => {\r\n    dispatch(handleMemberSignin(memberId));\r\n  },\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(RegistrationPage);\r\n"]},"metadata":{},"sourceType":"module"}