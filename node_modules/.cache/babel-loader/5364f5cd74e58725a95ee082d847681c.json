{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\alvar\\\\Documents\\\\WebDev\\\\lendit\\\\lendit\\\\src\\\\pages\\\\register\\\\register.component.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useAlert } from \"react-alert\";\nimport { RegistrationPageBody, RegistrationArticle, RegistrationMain, RegistrationFieldSet, RegistrationLegend, RegistrationInput, RegistrationSubmit, NameFieldContainer, NameField, Email, Password, PasswordRules, SignInLinkContainer, SignInLink, PasswordPopup } from \"./register.styles\";\nimport infoIcon from \"../../images/info_icon.svg\";\nimport { API_URL } from '../../services/api';\n\nconst RegistrationPage = ({\n  history\n}) => {\n  _s();\n\n  const [fname, setFname] = useState('');\n  const [lname, setLname] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [failedPassword, setFailedPassword] = useState(false);\n  const alert = useAlert();\n\n  const onFirstNameChange = event => {\n    setFname(event.target.value);\n  };\n\n  const onLastNameChange = event => {\n    setLname(event.target.value);\n  };\n\n  const onEmailChange = event => {\n    setEmail(event.target.value);\n  };\n\n  const onPasswordChange = event => {\n    setPassword(event.target.value);\n  };\n\n  const onSubmitRegister = () => {\n    if (!fname || !lname || !email || !password) {\n      alert.show('Missing required fields', {\n        type: \"error\",\n        position: \"top center\"\n      });\n      return;\n    }\n\n    ; // regular expression: password must contain 8 characters minimum, one capital letter, and one number.\n\n    const VALIDATE_PWORD = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{8,}$/;\n\n    if (!VALIDATE_PWORD.test(password)) {\n      setFailedPassword(true);\n      return;\n    }\n\n    ;\n    fetch(`${API_URL}/members/register`, {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        fname: fname,\n        lname: lname,\n        email: email,\n        password: password\n      })\n    }) // * Handling incorrect credentials\n    .then(response => response.json()).then(member => {\n      if (member.id) {\n        history.push(\"/signin\");\n      } else {\n        alert.show('Unable to register', {\n          type: \"error\",\n          position: \"top center\"\n        });\n      }\n    });\n  };\n\n  const [popupVisibility, setPopupVisibility] = useState(true);\n\n  const onPasswordHover = visibility => {\n    setPopupVisibility(visibility);\n  };\n\n  return /*#__PURE__*/_jsxDEV(RegistrationPageBody, {\n    children: [/*#__PURE__*/_jsxDEV(RegistrationLegend, {\n      children: \"Registration\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RegistrationArticle, {\n      children: /*#__PURE__*/_jsxDEV(RegistrationMain, {\n        children: [/*#__PURE__*/_jsxDEV(RegistrationFieldSet, {\n          children: [/*#__PURE__*/_jsxDEV(NameFieldContainer, {\n            children: [/*#__PURE__*/_jsxDEV(NameField, {\n              children: /*#__PURE__*/_jsxDEV(RegistrationInput, {\n                placeholder: \"First Name (required)\",\n                type: \"text\",\n                name: \"fname\",\n                id: \"fname\",\n                onChange: onFirstNameChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(NameField, {\n              children: /*#__PURE__*/_jsxDEV(RegistrationInput, {\n                style: {\n                  marginLeft: \"15%\"\n                },\n                placeholder: \"Last Name (required)\",\n                type: \"text\",\n                name: \"lname\",\n                id: \"lname\",\n                onChange: onLastNameChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Email, {\n            children: /*#__PURE__*/_jsxDEV(RegistrationInput, {\n              placeholder: \"Email (required)\",\n              type: \"email\",\n              name: \"email-address\",\n              id: \"email-address\",\n              onChange: onEmailChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Password, {\n            onMouseOver: () => setPopupVisibility(true),\n            onMouseOut: () => setPopupVisibility(false),\n            children: [/*#__PURE__*/_jsxDEV(RegistrationInput, {\n              placeholder: \"Password (required)\",\n              type: \"password\",\n              name: \"password\",\n              id: \"password\",\n              onChange: onPasswordChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 15\n            }, this), popupVisibility ? /*#__PURE__*/_jsxDEV(PasswordPopup, {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Password Rules:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"-Must be at least 8 characters long\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"-Must contain at least one uppercase letter.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"-Must contain at least one lowercase letter.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"-Must contain at least one number.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 19\n            }, this) : null, /*#__PURE__*/_jsxDEV(\"img\", {\n              src: infoIcon,\n              height: \"20px\",\n              width: \"20px\",\n              alt: \"info-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this), failedPassword ? /*#__PURE__*/_jsxDEV(PasswordRules, {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Password Rules:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"-Must be at least 8 characters long\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"-Must contain at least one uppercase letter.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"-Must contain at least one lowercase letter.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"-Must contain at least one number.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 15\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(RegistrationSubmit, {\n          type: \"submit\",\n          value: \"Register\",\n          onClick: onSubmitRegister\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SignInLinkContainer, {\n          children: /*#__PURE__*/_jsxDEV(SignInLink, {\n            onClick: () => history.push(\"/signin\"),\n            className: \"signin-link\",\n            children: \"Already have an account?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RegistrationPage, \"LqESHEpq9dMYzUaB89IGViFhw44=\", false, function () {\n  return [useAlert];\n});\n\n_c = RegistrationPage;\nexport default RegistrationPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegistrationPage\");","map":{"version":3,"sources":["C:/Users/alvar/Documents/WebDev/lendit/lendit/src/pages/register/register.component.jsx"],"names":["React","useState","useAlert","RegistrationPageBody","RegistrationArticle","RegistrationMain","RegistrationFieldSet","RegistrationLegend","RegistrationInput","RegistrationSubmit","NameFieldContainer","NameField","Email","Password","PasswordRules","SignInLinkContainer","SignInLink","PasswordPopup","API_URL","RegistrationPage","history","fname","setFname","lname","setLname","email","setEmail","password","setPassword","failedPassword","setFailedPassword","alert","onFirstNameChange","event","target","value","onLastNameChange","onEmailChange","onPasswordChange","onSubmitRegister","show","type","position","VALIDATE_PWORD","test","fetch","method","headers","body","JSON","stringify","then","response","json","member","id","push","popupVisibility","setPopupVisibility","onPasswordHover","visibility","marginLeft","infoIcon"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useAlert } from \"react-alert\";\r\n\r\nimport { RegistrationPageBody, RegistrationArticle, RegistrationMain, RegistrationFieldSet, RegistrationLegend, \r\n  RegistrationInput, RegistrationSubmit, NameFieldContainer, NameField, Email, Password,PasswordRules, SignInLinkContainer, SignInLink,\r\n  PasswordPopup\r\n} from \"./register.styles\";\r\n\r\nimport infoIcon from '../../images/info_icon.svg';\r\n\r\nimport { API_URL } from '../../services/api';\r\n\r\nconst RegistrationPage = ({ history }) =>{\r\n\r\n  const [fname, setFname] = useState('');\r\n  const [lname, setLname] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [failedPassword, setFailedPassword] = useState(false);\r\n\r\n  const alert = useAlert();\r\n\r\n  const onFirstNameChange = (event) => {\r\n    setFname(event.target.value);\r\n  };\r\n\r\n  const onLastNameChange = (event) => {\r\n    setLname(event.target.value);\r\n  };\r\n\r\n  const onEmailChange = (event) => {\r\n    setEmail(event.target.value);\r\n  };\r\n\r\n  const onPasswordChange = (event) => {\r\n    setPassword(event.target.value);\r\n  };\r\n\r\n  const onSubmitRegister = () => {\r\n\r\n    if (!fname || !lname || !email || !password) {\r\n      alert.show('Missing required fields' , { type: \"error\" , position:\"top center\"});\r\n      return;\r\n    };\r\n\r\n    // regular expression: password must contain 8 characters minimum, one capital letter, and one number.\r\n    const VALIDATE_PWORD = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{8,}$/\r\n\r\n    if ( !VALIDATE_PWORD.test(password) ) {\r\n      setFailedPassword(true);\r\n      return;\r\n    };\r\n  \r\n    fetch(`${API_URL}/members/register`, {\r\n      method: \"post\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        fname: fname,\r\n        lname: lname,\r\n        email: email,\r\n        password: password,\r\n      }),\r\n    })\r\n      // * Handling incorrect credentials\r\n      .then((response) => response.json())\r\n      .then((member) => {\r\n        if (member.id) {\r\n          history.push(\"/signin\");\r\n        } else {\r\n          alert.show('Unable to register' , { type: \"error\" , position:\"top center\"})\r\n        }\r\n      });\r\n  };\r\n\r\n  const [popupVisibility, setPopupVisibility] = useState(true);\r\n\r\n  const onPasswordHover = (visibility) => {\r\n    setPopupVisibility(visibility);\r\n  };\r\n\r\n  return (\r\n    <RegistrationPageBody>\r\n      <RegistrationLegend>Registration</RegistrationLegend>\r\n      <RegistrationArticle>\r\n        <RegistrationMain>\r\n          <RegistrationFieldSet>\r\n            <NameFieldContainer>\r\n              <NameField>\r\n                <RegistrationInput\r\n                  placeholder='First Name (required)'\r\n                  type=\"text\"\r\n                  name=\"fname\"\r\n                  id=\"fname\"\r\n                  onChange={onFirstNameChange}\r\n                />\r\n              </NameField>\r\n\r\n              <NameField>\r\n                <RegistrationInput\r\n                  style = {{marginLeft:\"15%\"}}\r\n                  placeholder='Last Name (required)'\r\n                  type=\"text\"\r\n                  name=\"lname\"\r\n                  id=\"lname\"\r\n                  onChange={onLastNameChange}\r\n                />\r\n              </NameField>\r\n            </NameFieldContainer>\r\n\r\n            <Email>\r\n              <RegistrationInput\r\n                placeholder='Email (required)'\r\n                type=\"email\"\r\n                name=\"email-address\"\r\n                id=\"email-address\"\r\n                onChange={onEmailChange}\r\n              />\r\n            </Email>\r\n              \r\n            <Password \r\n              onMouseOver={() => setPopupVisibility(true)} \r\n              onMouseOut={() => setPopupVisibility(false)} >\r\n              <RegistrationInput\r\n                placeholder='Password (required)'\r\n                type=\"password\"\r\n                name=\"password\"\r\n                id=\"password\"\r\n                onChange={onPasswordChange}\r\n              />\r\n            { popupVisibility ?\r\n                  <PasswordPopup>\r\n                    <span>Password Rules:</span>\r\n                    <br/>\r\n                    <span>-Must be at least 8 characters long</span>\r\n                    <br/>\r\n                    <span>-Must contain at least one uppercase letter.</span>\r\n                    <br/>\r\n                    <span>-Must contain at least one lowercase letter.</span>\r\n                    <br/>\r\n                    <span>-Must contain at least one number.</span>\r\n                  </PasswordPopup>\r\n              : null}\r\n              <img src={infoIcon} height='20px' width='20px' alt=\"info-icon\"></img>\r\n            </Password>\r\n\r\n            {\r\n              failedPassword ?\r\n              <PasswordRules>\r\n                <span>Password Rules:</span>\r\n                <br/>\r\n                <span>-Must be at least 8 characters long</span>\r\n                <br/>\r\n                <span>-Must contain at least one uppercase letter.</span>\r\n                <br/>\r\n                <span>-Must contain at least one lowercase letter.</span>\r\n                <br/>\r\n                <span>-Must contain at least one number.</span>\r\n              </PasswordRules>\r\n              : null\r\n            }\r\n          </RegistrationFieldSet>\r\n\r\n          <RegistrationSubmit\r\n            type=\"submit\"\r\n            value=\"Register\"\r\n            onClick={onSubmitRegister}\r\n          />\r\n          <SignInLinkContainer>\r\n            <SignInLink onClick={() => history.push(\"/signin\")} className=\"signin-link\">\r\n                Already have an account?\r\n            </SignInLink>\r\n          </SignInLinkContainer>\r\n        </RegistrationMain>\r\n      </RegistrationArticle>\r\n    </RegistrationPageBody>\r\n  );\r\n}\r\n\r\n\r\nexport default RegistrationPage;\r\n"]},"metadata":{},"sourceType":"module"}