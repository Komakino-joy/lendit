{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\bryan.alvarez\\\\Documents\\\\webdev\\\\git\\\\comp-overload\\\\client\\\\src\\\\components\\\\modals\\\\activity-tracking.modal.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { toggleActvityTracking } from \"../../redux/modal/modal.actions\";\nimport { ModalMain, ModalContent, CloseButton, Header, Article, FieldSet, Label, Submit, ModalDate } from \"./modal.styles\";\nimport AssetDropDown from '../custom-drop-down/asset-drop-down.component';\nimport UserDropDown from \"../custom-drop-down/user-drop-down.component\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nconst ActivityTracking = ({\n  toggleActvityTracking,\n  memberId\n}) => {\n  _s();\n\n  const [startDate, setStartDate] = useState(new Date());\n  const [endDate, setEndDate] = useState(new Date());\n  let [userId, setUserId] = useState('');\n  let [assetId, setAssetId] = useState('');\n\n  const onUseridChange = event => {\n    setUserId(event.target.value);\n  }; // const inputReset = () => {\n  //   userID = null;\n  //   asset-id = null;\n  //   user-id = null;\n  //   document.getElementById('userid').value = '';\n  //   document.getElementById('asset-id').value = '';\n  //   document.getElementById('user-id').value = '';\n  //   document.getElementById('userid').focus();\n  // };\n  // const fetchReport = (event) => {\n  //   console.log(Date.parse(startDate))\n  //   console.log(Date.parse(endDate))\n  // };\n\n\n  return /*#__PURE__*/_jsxDEV(ModalMain, {\n    children: /*#__PURE__*/_jsxDEV(ModalContent, {\n      children: [/*#__PURE__*/_jsxDEV(CloseButton, {\n        onClick: () => {\n          toggleActvityTracking();\n        },\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Header, {\n        children: \"Activity Tracking\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => console.log(userId),\n        children: \" Click me\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Article, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          action: \"sign-up_submit\",\n          method: \"get\",\n          acceptCharset: \"utf-8\",\n          children: [/*#__PURE__*/_jsxDEV(FieldSet, {\n            id: \"sign_up\",\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              htmlFor: \"email-address\",\n              children: \"Start Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ModalDate, {\n              selected: startDate,\n              timeInputLabel: \"Time:\",\n              dateFormat: \"MM/dd/yyyy h:mm aa\",\n              showTimeInput: true,\n              onChange: date => setStartDate(date)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Label, {\n              htmlFor: \"email-address\",\n              children: \"End Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ModalDate, {\n              selected: endDate,\n              timeInputLabel: \"Time:\",\n              dateFormat: \"MM/dd/yyyy h:mm aa\",\n              showTimeInput: true,\n              onChange: date => setEndDate(date)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Label, {\n              htmlFor: \"asset-id\",\n              children: \"Asset ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(AssetDropDown, {\n              type: \"text\",\n              name: \"asset-id\",\n              id: \"asset-id\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Label, {\n              htmlFor: \"user-id\",\n              children: \"User ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(UserDropDown, {\n              onChange: data => setUserId(data.value),\n              type: \"text\",\n              name: \"user-id\",\n              id: \"user-id\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Submit, {\n            type: \"submit\",\n            defaultValue: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 4\n  }, this);\n};\n\n_s(ActivityTracking, \"HR+KAOOM3Pn8/ok+k+VOI+d8fCg=\");\n\n_c = ActivityTracking;\n\nconst mapStateToProps = state => ({\n  memberId: state.memberState.memberId\n});\n\nconst mapDispatchToProps = dispatch => ({\n  toggleActvityTracking: () => dispatch(toggleActvityTracking())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ActivityTracking);\n\nvar _c;\n\n$RefreshReg$(_c, \"ActivityTracking\");","map":{"version":3,"sources":["C:/Users/bryan.alvarez/Documents/webdev/git/comp-overload/client/src/components/modals/activity-tracking.modal.jsx"],"names":["React","useState","connect","toggleActvityTracking","ModalMain","ModalContent","CloseButton","Header","Article","FieldSet","Label","Submit","ModalDate","AssetDropDown","UserDropDown","ActivityTracking","memberId","startDate","setStartDate","Date","endDate","setEndDate","userId","setUserId","assetId","setAssetId","onUseridChange","event","target","value","console","log","date","data","mapStateToProps","state","memberState","mapDispatchToProps","dispatch"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,qBAAT,QAAsC,iCAAtC;AAEA,SAASC,SAAT,EAAoBC,YAApB,EAAkCC,WAAlC,EAA+CC,MAA/C,EAAuDC,OAAvD,EACEC,QADF,EACYC,KADZ,EACmBC,MADnB,EAC2BC,SAD3B,QAEO,gBAFP;AAIA,OAAOC,aAAP,MAA0B,+CAA1B;AACA,OAAOC,YAAP,MAAyB,8CAAzB;AAGA,OAAO,4CAAP;;AAEA,MAAMC,gBAAgB,GAAG,CAAE;AAACZ,EAAAA,qBAAD;AAAwBa,EAAAA;AAAxB,CAAF,KAAwC;AAAA;;AAE/D,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BjB,QAAQ,CAAC,IAAIkB,IAAJ,EAAD,CAA1C;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBpB,QAAQ,CAAC,IAAIkB,IAAJ,EAAD,CAAtC;AAEA,MAAI,CAACG,MAAD,EAASC,SAAT,IAAsBtB,QAAQ,CAAC,EAAD,CAAlC;AACA,MAAI,CAACuB,OAAD,EAAUC,UAAV,IAAwBxB,QAAQ,CAAC,EAAD,CAApC;;AAEA,QAAMyB,cAAc,GAAIC,KAAD,IAAW;AAChCJ,IAAAA,SAAS,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAT;AACD,GAFD,CAR+D,CAc/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;AAKA,sBACC,QAAC,SAAD;AAAA,2BAEG,QAAC,YAAD;AAAA,8BAEE,QAAC,WAAD;AAAa,QAAA,OAAO,EAAE,MAAM;AAAC1B,UAAAA,qBAAqB;AAAG,SAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAQ,QAAA,OAAO,EAAE,MAAM2B,OAAO,CAACC,GAAR,CAAYT,MAAZ,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE,QAAC,OAAD;AAAA,+BACE;AAAK,UAAA,MAAM,EAAC,gBAAZ;AAA6B,UAAA,MAAM,EAAC,KAApC;AAA0C,UAAA,aAAa,EAAC,OAAxD;AAAA,kCACE,QAAC,QAAD;AAAU,YAAA,EAAE,EAAC,SAAb;AAAA,oCACI,QAAC,KAAD;AAAO,cAAA,OAAO,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI,QAAC,SAAD;AACE,cAAA,QAAQ,EAAEL,SADZ;AAEE,cAAA,cAAc,EAAC,OAFjB;AAGE,cAAA,UAAU,EAAC,oBAHb;AAIE,cAAA,aAAa,MAJf;AAKE,cAAA,QAAQ,EAAEe,IAAI,IAAId,YAAY,CAACc,IAAD;AALhC;AAAA;AAAA;AAAA;AAAA,oBAFJ,eASI,QAAC,KAAD;AAAO,cAAA,OAAO,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBATJ,eAUI,QAAC,SAAD;AACE,cAAA,QAAQ,EAAEZ,OADZ;AAEE,cAAA,cAAc,EAAC,OAFjB;AAGE,cAAA,UAAU,EAAC,oBAHb;AAIE,cAAA,aAAa,MAJf;AAIgB,cAAA,QAAQ,EAAEY,IAAI,IAAIX,UAAU,CAACW,IAAD;AAJ5C;AAAA;AAAA;AAAA;AAAA,oBAVJ,eAgBI,QAAC,KAAD;AAAO,cAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAhBJ,eAiBI,QAAC,aAAD;AAAgB,cAAA,IAAI,EAAC,MAArB;AAA4B,cAAA,IAAI,EAAC,UAAjC;AAA6C,cAAA,EAAE,EAAC;AAAhD;AAAA;AAAA;AAAA;AAAA,oBAjBJ,eAkBI,QAAC,KAAD;AAAO,cAAA,OAAO,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAlBJ,eAmBI,QAAC,YAAD;AAAc,cAAA,QAAQ,EAAEC,IAAI,IAAIV,SAAS,CAACU,IAAI,CAACJ,KAAN,CAAzC;AAAuD,cAAA,IAAI,EAAC,MAA5D;AAAmE,cAAA,IAAI,EAAC,SAAxE;AAAmF,cAAA,EAAE,EAAC;AAAtF;AAAA;AAAA;AAAA;AAAA,oBAnBJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAsBE,QAAC,MAAD;AAAS,YAAA,IAAI,EAAG,QAAhB;AAAyB,YAAA,YAAY,EAAC;AAAtC;AAAA;AAAA;AAAA;AAAA,kBAtBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFH;AAAA;AAAA;AAAA;AAAA,UADD;AAqCD,CArED;;GAAMd,gB;;KAAAA,gB;;AAuEN,MAAMmB,eAAe,GAAIC,KAAD,KAAY;AAClCnB,EAAAA,QAAQ,EAAEmB,KAAK,CAACC,WAAN,CAAkBpB;AADM,CAAZ,CAAxB;;AAIA,MAAMqB,kBAAkB,GAAIC,QAAD,KAAe;AACxCnC,EAAAA,qBAAqB,EAAG,MAAMmC,QAAQ,CAACnC,qBAAqB,EAAtB;AADE,CAAf,CAA3B;;AAIA,eAAeD,OAAO,CAACgC,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CtB,gBAA7C,CAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { toggleActvityTracking } from \"../../redux/modal/modal.actions\";\r\n\r\nimport { ModalMain, ModalContent, CloseButton, Header, Article,\r\n  FieldSet, Label, Submit, ModalDate\r\n} from \"./modal.styles\";\r\n\r\nimport AssetDropDown from '../custom-drop-down/asset-drop-down.component';\r\nimport UserDropDown from \"../custom-drop-down/user-drop-down.component\";\r\n\r\n\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nconst ActivityTracking = ( {toggleActvityTracking, memberId} ) =>{\r\n\r\n  const [startDate, setStartDate] = useState(new Date());\r\n  const [endDate, setEndDate] = useState(new Date());\r\n\r\n  let [userId, setUserId] = useState('');\r\n  let [assetId, setAssetId] = useState('');\r\n\r\n  const onUseridChange = (event) => {\r\n    setUserId(event.target.value); \r\n  } ;\r\n\r\n\r\n\r\n  // const inputReset = () => {\r\n  //   userID = null;\r\n  //   asset-id = null;\r\n  //   user-id = null;\r\n  //   document.getElementById('userid').value = '';\r\n  //   document.getElementById('asset-id').value = '';\r\n  //   document.getElementById('user-id').value = '';\r\n  //   document.getElementById('userid').focus();\r\n  // };\r\n\r\n  // const fetchReport = (event) => {\r\n  //   console.log(Date.parse(startDate))\r\n  //   console.log(Date.parse(endDate))\r\n  // };\r\n  \r\n\r\n\r\n\r\n  return (\r\n   <ModalMain>\r\n     \r\n      <ModalContent>\r\n        {/* Retrieve updated list of users when modal is closed. */}\r\n        <CloseButton onClick={() => {toggleActvityTracking()}}>&times;</CloseButton>\r\n        <Header>Activity Tracking</Header>\r\n        <button onClick={() => console.log(userId)}> Click me</button>\r\n        <Article>\r\n          <div action=\"sign-up_submit\" method=\"get\" acceptCharset=\"utf-8\">\r\n            <FieldSet id=\"sign_up\">\r\n                <Label htmlFor=\"email-address\">Start Date</Label>\r\n                <ModalDate \r\n                  selected={startDate} \r\n                  timeInputLabel=\"Time:\"\r\n                  dateFormat=\"MM/dd/yyyy h:mm aa\"\r\n                  showTimeInput\r\n                  onChange={date => setStartDate(date)} \r\n                />\r\n                <Label htmlFor=\"email-address\">End Date</Label>\r\n                <ModalDate\r\n                  selected={endDate}       \r\n                  timeInputLabel=\"Time:\"\r\n                  dateFormat=\"MM/dd/yyyy h:mm aa\"\r\n                  showTimeInput onChange={date => setEndDate(date)} \r\n                />\r\n                <Label htmlFor=\"asset-id\">Asset ID</Label>\r\n                <AssetDropDown  type=\"text\" name=\"asset-id\"  id=\"asset-id\" />\r\n                <Label htmlFor=\"user-id\">User ID</Label>\r\n                <UserDropDown onChange={data => setUserId(data.value)} type=\"text\" name=\"user-id\"  id=\"user-id\"/>\r\n            </FieldSet>\r\n            <Submit  type = \"submit\" defaultValue=\"Submit\"/>\r\n          </div>\r\n        </Article>\r\n      </ModalContent>\r\n   </ModalMain>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  memberId: state.memberState.memberId\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  toggleActvityTracking : () => dispatch(toggleActvityTracking())\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ActivityTracking);"]},"metadata":{},"sourceType":"module"}