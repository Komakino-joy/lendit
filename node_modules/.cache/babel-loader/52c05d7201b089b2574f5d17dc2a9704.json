{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\alvar\\\\Documents\\\\WebDev\\\\comp-overload\\\\src\\\\components\\\\custom-button\\\\custom-button.component.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { checkInSelectedAsset } from \"../../redux/asset/asset.actions\";\nimport './custom-button.styles.scss';\n\nconst checkIn = ({\n  state\n}) => {\n  console.log(`Checking In:  ${typeof state}`);\n};\n\nconst checkOut = () => {\n  console.log(\"Checking Out\");\n};\n\nconst submitting = () => {\n  console.log(\"submitting\");\n};\n\nconst CustomButton = ({\n  children,\n  isCheckIn,\n  isCheckOut,\n  state,\n  getAssetDetails,\n  ...props\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      className: `${isCheckIn ? 'check-in' : isCheckOut ? 'check-out' : 'submit'}  custom-button`,\n      onClick: isCheckIn ? () => console.log(state) : isCheckOut ? checkOut : submitting,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n\n_c = CustomButton;\n\nconst mapStateToProps = state => ({\n  state: state\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getAssetDetails: () => {\n    dispatch(checkInSelectedAsset());\n  }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CustomButton);\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomButton\");","map":{"version":3,"sources":["C:/Users/alvar/Documents/WebDev/comp-overload/src/components/custom-button/custom-button.component.jsx"],"names":["React","connect","checkInSelectedAsset","checkIn","state","console","log","checkOut","submitting","CustomButton","children","isCheckIn","isCheckOut","getAssetDetails","props","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,oBAAT,QAAqC,iCAArC;AAEA,OAAO,6BAAP;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAC3BC,EAAAA,OAAO,CAACC,GAAR,CAAa,iBAAgB,OAAOF,KAAM,EAA1C;AACH,CAFD;;AAIA,MAAMG,QAAQ,GAAG,MAAM;AACnBF,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACH,CAFD;;AAIA,MAAME,UAAU,GAAG,MAAM;AACrBH,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACH,CAFD;;AAIA,MAAMG,YAAY,GAAG,CAAC;AAACC,EAAAA,QAAD;AAAWC,EAAAA,SAAX;AAAsBC,EAAAA,UAAtB;AAAkCR,EAAAA,KAAlC;AAAyCS,EAAAA,eAAzC;AAA0D,KAAGC;AAA7D,CAAD,KAAyE;AAC1F,sBACI;AAAA,2BACI;AACI,MAAA,SAAS,EAAG,GAAEH,SAAS,GAAG,UAAH,GAAgBC,UAAU,GAAG,WAAH,GAAiB,QAAU,iBADhF;AAEI,MAAA,OAAO,EAAED,SAAS,GAAG,MAAMN,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAAT,GAA8BQ,UAAU,GAAGL,QAAH,GAAcC,UAF5E;AAAA,gBAIKE;AAJL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,CAXD;;KAAMD,Y;;AAaN,MAAMM,eAAe,GAAIX,KAAD,KAAY;AAChCA,EAAAA,KAAK,EAAEA;AADyB,CAAZ,CAAxB;;AAIA,MAAMY,kBAAkB,GAAIC,QAAD,KAAe;AACtCJ,EAAAA,eAAe,EAAE,MAAM;AAAEI,IAAAA,QAAQ,CAACf,oBAAoB,EAArB,CAAR;AAAiC;AADpB,CAAf,CAA3B;;AAIA,eAAeD,OAAO,CAACc,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CP,YAA7C,CAAf","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { checkInSelectedAsset } from \"../../redux/asset/asset.actions\";\r\n\r\nimport './custom-button.styles.scss';\r\n\r\nconst checkIn = ({ state }) => {\r\n    console.log(`Checking In:  ${typeof state}`)\r\n};\r\n\r\nconst checkOut = () => {\r\n    console.log(\"Checking Out\")\r\n};\r\n\r\nconst submitting = () => {\r\n    console.log(\"submitting\")\r\n};\r\n\r\nconst CustomButton = ({children, isCheckIn, isCheckOut, state, getAssetDetails, ...props}) => {\r\n    return (\r\n        <div>\r\n            <button\r\n                className={`${isCheckIn ? 'check-in' : isCheckOut ? 'check-out' : 'submit' }  custom-button`}\r\n                onClick={isCheckIn ? () => console.log(state) : isCheckOut ? checkOut : submitting} \r\n            >\r\n                {children}\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    state: state\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    getAssetDetails: () => { dispatch(checkInSelectedAsset())}\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CustomButton);\r\n"]},"metadata":{},"sourceType":"module"}