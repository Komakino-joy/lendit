{"ast":null,"code":"export const fetchSelectedAssetData = async assetID => {\n  const settings = {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      id: assetID\n    })\n  };\n\n  try {\n    const response = await fetch(`http://localhost:3000/asset`, settings);\n    const asset = await response.json();\n    return asset;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const fetchSelectedUserData = async userID => {\n  const settings = {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      id: userID\n    })\n  };\n\n  try {\n    const response = await fetch(`http://localhost:3000/user`, settings);\n    const user = await response.json();\n    return user;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const checkInAsset = async (assetId, owner, assetName, assetSerial, assetModel, assetComments) => {\n  const settings = {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      id: assetId,\n      owner,\n      assetName,\n      assetSerial,\n      assetModel,\n      assetComments,\n      timestamp: new Date()\n    })\n  };\n\n  try {\n    await fetch(`http://localhost:3000/checkin`, settings);\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const checkOutAsset = async (assetID, userID) => {\n  const settings = {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      id: assetID,\n      username: userID\n    })\n  };\n\n  try {\n    await fetch(`http://localhost:3000/checkout`, settings);\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const quarantineAsset = async (assetID, quarantineReason) => {\n  const settings = {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      id: assetID,\n      reason: quarantineReason\n    })\n  };\n\n  try {\n    await fetch(`http://localhost:3000/quarantine`, settings);\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const createNewUser = async (userId, fname, lname, memberId) => {\n  const settings = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      userid: userId,\n      fname: fname,\n      lname: lname,\n      memberId: memberId\n    })\n  };\n\n  try {\n    const response = await fetch(`http://localhost:3000/adduser`, settings);\n    const reply = await response.json();\n    return reply;\n  } catch (error) {\n    return error;\n  }\n};\nexport const createNewAsset = async (assetID, assetName, assetModel, assetSerial, memberId) => {\n  const settings = {\n    method: 'post',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      id: assetID,\n      name: assetName,\n      model: assetModel,\n      serial: assetSerial,\n      memberId: memberId\n    })\n  };\n\n  try {\n    const response = await fetch('http://localhost:3000/addasset', settings);\n    const reply = await response.json();\n    return reply;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const removeAsset = async assetID => {\n  const settings = {\n    method: 'delete',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      id: assetID\n    })\n  };\n\n  try {\n    const response = await fetch('http://localhost:3000/removeasset', settings);\n    const reply = await response.json();\n    return reply;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const fetchAllAssetsForDropDown = async dispatchData => {\n  const settings = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      memberId: dispatchData.payload\n    })\n  };\n\n  try {\n    const response = await fetch('http://localhost:3000/allunits', settings);\n    const assetList = await response.json();\n    return assetList;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const fetchAllUsersForDropDown = async dispatchData => {\n  const settings = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      memberId: dispatchData.payload\n    })\n  };\n\n  try {\n    const response = await fetch('http://localhost:3000/allusers', settings);\n    const assetList = await response.json();\n    return assetList;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const fetchAllModelsForDropDown = async dispatchData => {\n  const settings = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      memberId: dispatchData.payload\n    })\n  };\n\n  try {\n    const response = await fetch('http://localhost:3000/allmodels', settings);\n    const assetList = await response.json();\n    return assetList;\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"sources":["C:/Users/alvar/Documents/WebDev/comp-overload/client/src/services/api.js"],"names":["fetchSelectedAssetData","assetID","settings","method","headers","Accept","body","JSON","stringify","id","response","fetch","asset","json","error","console","log","fetchSelectedUserData","userID","user","checkInAsset","assetId","owner","assetName","assetSerial","assetModel","assetComments","timestamp","Date","checkOutAsset","username","quarantineAsset","quarantineReason","reason","createNewUser","userId","fname","lname","memberId","userid","reply","createNewAsset","name","model","serial","removeAsset","fetchAllAssetsForDropDown","dispatchData","payload","assetList","fetchAllUsersForDropDown","fetchAllModelsForDropDown"],"mappings":"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","sourcesContent":["export const fetchSelectedAssetData = async(assetID) => {\r\n    const settings = { \r\n        method:'POST',\r\n        headers: {\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n            id:assetID\r\n        })\r\n    };\r\n    try{\r\n        const response = await fetch(`http://localhost:3000/asset`, settings);\r\n        const asset = await response.json();\r\n        return asset\r\n    } catch(error) {\r\n        console.log(error);\r\n    }\r\n};\r\n\r\nexport const fetchSelectedUserData = async(userID) => {\r\n    const settings = { \r\n        method:'POST',\r\n        headers: {\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n            id:userID\r\n        })\r\n    };\r\n    try{\r\n        const response = await fetch(`http://localhost:3000/user`, settings)\r\n        const user = await response.json();\r\n        return user\r\n    } catch(error) {\r\n        console.log(error)\r\n    }\r\n};\r\n\r\nexport const checkInAsset = async(assetId, owner, assetName, assetSerial, assetModel, assetComments ) => {\r\n    const settings = { \r\n        method:'POST',\r\n        headers: {\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n            id:assetId,\r\n            owner,\r\n            assetName,\r\n            assetSerial,\r\n            assetModel,\r\n            assetComments,\r\n            timestamp: new Date()\r\n\r\n        })\r\n    };\r\n    try{\r\n        await fetch(`http://localhost:3000/checkin`, settings)\r\n    } catch(error) {\r\n        console.log(error)\r\n    }\r\n};\r\n\r\nexport const checkOutAsset = async(assetID, userID) => {\r\n    const settings = { \r\n        method:'POST',\r\n        headers: {\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n            id:assetID,\r\n            username: userID\r\n        })\r\n    };\r\n    try{\r\n        await fetch(`http://localhost:3000/checkout`, settings)\r\n    } catch(error) {\r\n        console.log(error)\r\n    }\r\n};\r\n\r\nexport const quarantineAsset = async(assetID, quarantineReason) => {\r\n    const settings = { \r\n        method:'POST',\r\n        headers: {\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n            id:assetID,\r\n            reason:quarantineReason\r\n        })\r\n    };\r\n    try{\r\n        await fetch(`http://localhost:3000/quarantine`, settings)\r\n    } catch(error) {\r\n        console.log(error)\r\n    }\r\n};\r\n\r\nexport const createNewUser = async(userId, fname, lname, memberId) => {\r\n    const settings = { \r\n        method:'POST',\r\n        headers: {'Content-Type': 'application/json'},\r\n        body : JSON.stringify({\r\n          userid: userId,\r\n          fname: fname,\r\n          lname: lname,\r\n          memberId: memberId\r\n        })\r\n    };\r\n    try{\r\n        const response = await fetch(`http://localhost:3000/adduser`, settings)\r\n        const reply = await response.json()\r\n        return reply\r\n    } catch(error) {\r\n        return error\r\n    }\r\n};  \r\n\r\nexport const createNewAsset = async(assetID, assetName, assetModel, assetSerial, memberId) => {\r\n    const settings = {\r\n        method: 'post',\r\n        headers: {'Content-Type': 'application/json'},\r\n        body : JSON.stringify({\r\n            id: assetID,\r\n            name: assetName,\r\n            model: assetModel,\r\n            serial: assetSerial,\r\n            memberId: memberId\r\n        })\r\n    };\r\n    try {\r\n        const response = await fetch('http://localhost:3000/addasset', settings)\r\n        const reply = await response.json()\r\n        return(reply)\r\n    } catch(error) {\r\n        console.log(error)\r\n    }\r\n};\r\n\r\nexport const removeAsset = async(assetID) => {\r\n    const settings = {\r\n        method: 'delete',\r\n        headers: {'Content-Type': 'application/json'},\r\n        body : JSON.stringify({\r\n            id: assetID\r\n        })\r\n    };\r\n    try {\r\n        const response = await fetch('http://localhost:3000/removeasset', settings)\r\n        const reply = await response.json()\r\n        return(reply)\r\n    } catch(error) {\r\n        console.log(error)\r\n    }\r\n};\r\n\r\n\r\nexport const fetchAllAssetsForDropDown = async(dispatchData) => {\r\n    const settings = {\r\n        method: 'POST',\r\n        headers: {'Content-Type': 'application/json'},\r\n        body: JSON.stringify({\r\n            memberId: dispatchData.payload\r\n        })\r\n    }\r\n    try {\r\n        const response = await fetch('http://localhost:3000/allunits', settings)\r\n        const assetList = await response.json();\r\n        return assetList  \r\n    } catch(error) {\r\n        console.log(error)\r\n    }\r\n};\r\n\r\nexport const fetchAllUsersForDropDown = async(dispatchData) => {\r\n    const settings = {\r\n        method: 'POST',\r\n        headers: {'Content-Type': 'application/json'},\r\n        body: JSON.stringify({\r\n            memberId: dispatchData.payload\r\n        })\r\n    }\r\n    try {\r\n        const response = await fetch('http://localhost:3000/allusers', settings)\r\n        const assetList = await response.json();\r\n        return assetList  \r\n    } catch(error) {\r\n        console.log(error)\r\n    }\r\n};\r\n\r\nexport const fetchAllModelsForDropDown = async(dispatchData) => {\r\n    const settings = {\r\n        method: 'POST',\r\n        headers: {'Content-Type': 'application/json'},\r\n        body: JSON.stringify({\r\n            memberId: dispatchData.payload\r\n        })\r\n    }\r\n    try {\r\n        const response = await fetch('http://localhost:3000/allmodels', settings)\r\n        const assetList = await response.json();\r\n        return assetList  \r\n    } catch(error) {\r\n        console.log(error)\r\n    }\r\n};\r\n\r\n"]},"metadata":{},"sourceType":"module"}