{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\alvar\\\\Documents\\\\WebDev\\\\lendit\\\\lendit\\\\src\\\\pages\\\\register\\\\register.component.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useAlert } from 'react-alert';\nimport { connect } from 'react-redux';\nimport { registrationStart } from '../../redux/site-member/site-member.actions';\nimport { RegistrationPageBody, RegistrationArticle, RegistrationMain, RegistrationFieldSet, RegistrationLegend, RegistrationInput, RegistrationSubmit, NameFieldContainer, NameField, Email, Password, PasswordRules, SignInLinkContainer, SignInLink, ToolTip, InfoIcon } from './register.styles';\nimport infoIconSvg from \"../../images/info_icon.svg\";\nimport passwordTooltip from \"../../images/password_tooltip.svg\";\n\nconst RegistrationPage = ({\n  history,\n  registrationStart\n}) => {\n  _s();\n\n  const [fname, setFname] = useState('');\n  const [lname, setLname] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [failedPassword, setFailedPassword] = useState(false);\n  const [toolTipVisibility, setToolTipVisibility] = useState(false);\n  const alert = useAlert();\n\n  const onMouseOverInfo = () => {\n    setToolTipVisibility(true);\n    setFailedPassword(false);\n  };\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n\n    switch (name) {\n      case 'fname':\n        setFname(value);\n        break;\n\n      case 'lname':\n        setLname(value);\n        break;\n\n      case 'email':\n        setEmail(value);\n        break;\n\n      case 'password':\n        setPassword(value);\n        break;\n\n      case 'confirmPassword':\n        setConfirmPassword(value);\n        break;\n\n      default:\n        break;\n    }\n\n    ;\n  };\n\n  const resetInput = () => {\n    setFname('');\n    setLname('');\n    setEmail('');\n    setPassword('');\n    setConfirmPassword('');\n  };\n\n  const onSubmitRegister = async () => {\n    if (!fname || !lname || !email || !password) {\n      alert.show('Missing required fields', {\n        type: 'error',\n        position: 'top center'\n      });\n      return;\n    }\n\n    ;\n\n    if (password !== confirmPassword) {\n      alert.show('Passwords do not match', {\n        type: 'error',\n        position: 'top center'\n      });\n      return;\n    }\n\n    ; // regular expression: password must contain 8 characters minimum, one capital letter, and one number.\n\n    const VALIDATE_PWORD = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{8,}$/;\n\n    if (!VALIDATE_PWORD.test(password)) {\n      setFailedPassword(true);\n      return;\n    }\n\n    ;\n    await registrationStart({\n      fname,\n      lname,\n      email,\n      password\n    });\n    resetInput();\n    await history.push('/signin');\n  };\n\n  return /*#__PURE__*/_jsxDEV(RegistrationPageBody, {\n    children: [/*#__PURE__*/_jsxDEV(RegistrationLegend, {\n      children: \"Registration\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RegistrationArticle, {\n      children: /*#__PURE__*/_jsxDEV(RegistrationMain, {\n        children: [/*#__PURE__*/_jsxDEV(RegistrationFieldSet, {\n          children: [/*#__PURE__*/_jsxDEV(NameFieldContainer, {\n            children: [/*#__PURE__*/_jsxDEV(NameField, {\n              children: /*#__PURE__*/_jsxDEV(RegistrationInput, {\n                placeholder: \"First Name (required)\",\n                type: \"text\",\n                name: \"fname\",\n                id: \"fname\",\n                onChange: handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(NameField, {\n              children: /*#__PURE__*/_jsxDEV(RegistrationInput, {\n                style: {\n                  marginLeft: '15%'\n                },\n                placeholder: \"Last Name (required)\",\n                type: \"text\",\n                name: \"lname\",\n                id: \"lname\",\n                onChange: handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Email, {\n            children: /*#__PURE__*/_jsxDEV(RegistrationInput, {\n              placeholder: \"Email (required)\",\n              type: \"email\",\n              name: \"email\",\n              id: \"email\",\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Password, {\n            children: [/*#__PURE__*/_jsxDEV(RegistrationInput, {\n              placeholder: \"Password (required)\",\n              type: \"password\",\n              name: \"password\",\n              id: \"password\",\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(InfoIcon, {\n                src: infoIconSvg,\n                alt: \"info-icon\",\n                onMouseOver: onMouseOverInfo,\n                onMouseOut: () => setToolTipVisibility(false)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 15\n              }, this), toolTipVisibility ? /*#__PURE__*/_jsxDEV(ToolTip, {\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: passwordTooltip,\n                  alt: \"password tooltip\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 145,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 19\n              }, this) : null]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(RegistrationInput, {\n            placeholder: \"Confirm Password (required)\",\n            type: \"password\",\n            name: \"confirmPassword\",\n            id: \"confirmPassword\",\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, this), failedPassword ? /*#__PURE__*/_jsxDEV(PasswordRules, {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Password must: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"be at least 8 characters long; contain at least one uppercase letter;\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Contain at least one lowercase letter; contain at least one number.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 15\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(RegistrationSubmit, {\n          type: \"submit\",\n          value: \"Register\",\n          onClick: onSubmitRegister\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SignInLinkContainer, {\n          children: /*#__PURE__*/_jsxDEV(SignInLink, {\n            onClick: () => history.push('/signin'),\n            className: \"signin-link\",\n            children: \"Already have an account?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RegistrationPage, \"mh6gIQxvzjYzCqmJlpiSTTLAeZ8=\", false, function () {\n  return [useAlert];\n});\n\n_c = RegistrationPage;\n\nconst mapDispatchToProps = dispatch => ({\n  registrationStart: userRegistrationInfo => dispatch(registrationStart(userRegistrationInfo))\n});\n\nexport default connect(null, mapDispatchToProps)(RegistrationPage);\n\nvar _c;\n\n$RefreshReg$(_c, \"RegistrationPage\");","map":{"version":3,"sources":["C:/Users/alvar/Documents/WebDev/lendit/lendit/src/pages/register/register.component.jsx"],"names":["React","useState","useAlert","connect","registrationStart","RegistrationPageBody","RegistrationArticle","RegistrationMain","RegistrationFieldSet","RegistrationLegend","RegistrationInput","RegistrationSubmit","NameFieldContainer","NameField","Email","Password","PasswordRules","SignInLinkContainer","SignInLink","ToolTip","InfoIcon","RegistrationPage","history","fname","setFname","lname","setLname","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","failedPassword","setFailedPassword","toolTipVisibility","setToolTipVisibility","alert","onMouseOverInfo","handleChange","event","name","value","target","resetInput","onSubmitRegister","show","type","position","VALIDATE_PWORD","test","push","marginLeft","infoIconSvg","passwordTooltip","mapDispatchToProps","dispatch","userRegistrationInfo"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { useAlert } from 'react-alert';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { registrationStart } from '../../redux/site-member/site-member.actions';\r\n\r\nimport { RegistrationPageBody, RegistrationArticle, RegistrationMain, RegistrationFieldSet, RegistrationLegend, \r\n  RegistrationInput, RegistrationSubmit, NameFieldContainer, NameField, Email, Password,PasswordRules, SignInLinkContainer, SignInLink,\r\n  ToolTip, InfoIcon\r\n} from './register.styles';\r\n\r\nimport infoIconSvg from '../../images/info_icon.svg';\r\nimport passwordTooltip from '../../images/password_tooltip.svg';\r\n\r\nconst RegistrationPage = ({ history, registrationStart }) =>{\r\n\r\n  const [fname, setFname] = useState('');\r\n  const [lname, setLname] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [failedPassword, setFailedPassword] = useState(false);\r\n  const [toolTipVisibility, setToolTipVisibility] = useState(false);\r\n\r\n  const alert = useAlert();\r\n\r\n  const onMouseOverInfo = () => {\r\n    setToolTipVisibility(true); \r\n    setFailedPassword(false)\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    const {name, value} = event.target;\r\n    \r\n    switch(name) {\r\n        case 'fname':\r\n            setFname(value);\r\n            break;\r\n        case 'lname':\r\n            setLname(value);\r\n            break;\r\n        case 'email':\r\n              setEmail(value);\r\n              break;\r\n        case 'password':\r\n            setPassword(value);\r\n            break;\r\n        case 'confirmPassword':\r\n            setConfirmPassword(value)\r\n            break;\r\n        default:\r\n            break;\r\n      };\r\n  };\r\n\r\n  const resetInput = () => {\r\n    setFname('');\r\n    setLname('');\r\n    setEmail('');\r\n    setPassword('');\r\n    setConfirmPassword('');\r\n  };\r\n\r\n  const onSubmitRegister = async() => {\r\n\r\n    if (!fname || !lname || !email || !password) {\r\n      alert.show('Missing required fields' , { type: 'error' , position:'top center'});\r\n      return;\r\n    };\r\n\r\n    if (password !== confirmPassword) {\r\n      alert.show('Passwords do not match' , { type: 'error' , position:'top center'});\r\n      return;\r\n    };\r\n\r\n    // regular expression: password must contain 8 characters minimum, one capital letter, and one number.\r\n    const VALIDATE_PWORD = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{8,}$/\r\n\r\n    if ( !VALIDATE_PWORD.test(password) ) {\r\n      setFailedPassword(true);\r\n      return;\r\n    };\r\n  \r\n    await registrationStart({ fname, lname, email, password });\r\n    resetInput();\r\n    await history.push('/signin')\r\n  };\r\n\r\n  return (\r\n    <RegistrationPageBody>\r\n      <RegistrationLegend>Registration</RegistrationLegend>\r\n      <RegistrationArticle>\r\n        <RegistrationMain>\r\n          <RegistrationFieldSet>\r\n            <NameFieldContainer>\r\n              <NameField>\r\n                <RegistrationInput\r\n                  placeholder='First Name (required)'\r\n                  type='text'\r\n                  name='fname'\r\n                  id='fname'\r\n                  onChange={handleChange}\r\n                />\r\n              </NameField>\r\n\r\n              <NameField>\r\n                <RegistrationInput\r\n                  style = {{marginLeft:'15%'}}\r\n                  placeholder='Last Name (required)'\r\n                  type='text'\r\n                  name='lname'\r\n                  id='lname'\r\n                  onChange={handleChange}\r\n                />\r\n              </NameField>\r\n            </NameFieldContainer>\r\n\r\n            <Email>\r\n              <RegistrationInput\r\n                placeholder='Email (required)'\r\n                type='email'\r\n                name='email'\r\n                id='email'\r\n                onChange={handleChange}\r\n              />\r\n            </Email>\r\n              \r\n            <Password>\r\n              <RegistrationInput\r\n                placeholder='Password (required)'\r\n                type='password'\r\n                name='password'\r\n                id='password'\r\n                onChange={handleChange}\r\n              />\r\n              <div>\r\n              <InfoIcon \r\n                src={infoIconSvg} \r\n                alt='info-icon'\r\n                onMouseOver={onMouseOverInfo} \r\n                onMouseOut={() => setToolTipVisibility(false)}\r\n                />\r\n                { toolTipVisibility ?\r\n                  <ToolTip>\r\n                    <img src={passwordTooltip} alt='password tooltip' ></img>\r\n                  </ToolTip>\r\n              : null}\r\n              </div>\r\n            </Password>\r\n            <RegistrationInput\r\n              placeholder='Confirm Password (required)'\r\n              type='password'\r\n              name='confirmPassword'\r\n              id='confirmPassword'\r\n              onChange={handleChange}\r\n            />\r\n            {\r\n              failedPassword ?\r\n              <PasswordRules>\r\n                <span>Password must: </span>\r\n                <br/>\r\n                <span>be at least 8 characters long; contain at least one uppercase letter;</span>\r\n                <br/>\r\n                <span>Contain at least one lowercase letter; contain at least one number.</span>\r\n              </PasswordRules>\r\n              : null\r\n            }\r\n          </RegistrationFieldSet>\r\n            \r\n          <RegistrationSubmit\r\n            type='submit'\r\n            value='Register'\r\n            onClick={onSubmitRegister}\r\n          />\r\n          \r\n          <SignInLinkContainer>\r\n            <SignInLink onClick={() => history.push('/signin')} className='signin-link'>\r\n                Already have an account?\r\n            </SignInLink>\r\n          </SignInLinkContainer>\r\n          \r\n        </RegistrationMain>\r\n        \r\n      </RegistrationArticle>\r\n\r\n    </RegistrationPageBody>\r\n  );\r\n}\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  registrationStart: (userRegistrationInfo) => dispatch(registrationStart(userRegistrationInfo)),\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(RegistrationPage);\r\n"]},"metadata":{},"sourceType":"module"}