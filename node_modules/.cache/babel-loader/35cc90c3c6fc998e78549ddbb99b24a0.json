{"ast":null,"code":"import { call, put, takeLatest, all } from \"redux-saga/effects\";\nimport DropDownActionTypes from './drop-down.types';\nimport { receiveAssetDropDownOptions, receiveUserDropDownOptions, receiveModelDropDownOptions } from \"./drop-down.actions\";\nimport { httpFetchAllAssetsForDropDown, fetchAllUsersForDropDown, httpFetchAllModelsForDropDown } from \"../../services/api\";\n\nfunction* getAssetList(memberId) {\n  console.log('HELLLLLLLOOOOOOOOOOOOOOOOOOOOO', memberId);\n\n  try {\n    const assetList = yield httpFetchAllAssetsForDropDown(memberId);\n    console.log('GOOOOOOOOOOOOOOOOOOOOOOODDDDDDDD', assetList);\n    yield put(receiveAssetDropDownOptions(assetList));\n  } catch (error) {\n    console.log(error);\n  }\n}\n\n;\nexport function* requestAssetListSaga() {\n  yield takeLatest(DropDownActionTypes.REQUEST_ASSET_DROP_DOWN_OPTIONS, getAssetList);\n}\n;\n\nfunction* getUserList(dropDownOptions) {\n  try {\n    const userList = yield call(fetchAllUsersForDropDown, dropDownOptions);\n    yield put(receiveUserDropDownOptions(userList));\n  } catch (error) {\n    console.log(error);\n  }\n}\n\n;\nexport function* requestUserListSaga() {\n  yield takeLatest(DropDownActionTypes.REQUEST_USER_DROP_DOWN_OPTIONS, getUserList);\n}\n;\n\nfunction* getModelList(dropDownOptions) {\n  try {\n    const modelList = yield call(httpFetchAllModelsForDropDown, dropDownOptions);\n    yield put(receiveModelDropDownOptions(modelList));\n  } catch (error) {\n    console.log(error);\n  }\n}\n\n;\nexport function* requestModelListSaga() {\n  yield takeLatest(DropDownActionTypes.REQUEST_MODEL_DROP_DOWN_OPTIONS, getModelList);\n}\n;\nexport function* dropDownSagas() {\n  yield all([call(requestAssetListSaga), call(requestUserListSaga), call(requestModelListSaga)]);\n}\n;","map":{"version":3,"sources":["C:/Users/bryan.alvarez/Documents/webdev/git/lendit/lendit/src/redux/drop-downs/drop-downs.sagas.js"],"names":["call","put","takeLatest","all","DropDownActionTypes","receiveAssetDropDownOptions","receiveUserDropDownOptions","receiveModelDropDownOptions","httpFetchAllAssetsForDropDown","fetchAllUsersForDropDown","httpFetchAllModelsForDropDown","getAssetList","memberId","console","log","assetList","error","requestAssetListSaga","REQUEST_ASSET_DROP_DOWN_OPTIONS","getUserList","dropDownOptions","userList","requestUserListSaga","REQUEST_USER_DROP_DOWN_OPTIONS","getModelList","modelList","requestModelListSaga","REQUEST_MODEL_DROP_DOWN_OPTIONS","dropDownSagas"],"mappings":"AAAA,SAASA,IAAT,EAAeC,GAAf,EAAoBC,UAApB,EAAgCC,GAAhC,QAA2C,oBAA3C;AAEE,OAAOC,mBAAP,MAAgC,mBAAhC;AAEA,SACIC,2BADJ,EAEIC,0BAFJ,EAGIC,2BAHJ,QAIS,qBAJT;AAMA,SACIC,6BADJ,EAEIC,wBAFJ,EAGIC,6BAHJ,QAIS,oBAJT;;AAOA,UAAUC,YAAV,CAAuBC,QAAvB,EAAiC;AAC/BC,EAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ,EAA8CF,QAA9C;;AACA,MAAI;AACF,UAAMG,SAAS,GAAG,MAAMP,6BAA6B,CAACI,QAAD,CAArD;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ,EAAgDC,SAAhD;AACA,UAAMd,GAAG,CAACI,2BAA2B,CAACU,SAAD,CAA5B,CAAT;AACD,GAJD,CAIE,OAAOC,KAAP,EAAc;AACdH,IAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACD;AACF;;AAAA;AAED,OAAQ,UAAUC,oBAAV,GAAiC;AACvC,QAAMf,UAAU,CAACE,mBAAmB,CAACc,+BAArB,EAAsDP,YAAtD,CAAhB;AACD;AAAA;;AAED,UAAUQ,WAAV,CAAsBC,eAAtB,EAAuC;AACrC,MAAI;AACF,UAAMC,QAAQ,GAAG,MAAMrB,IAAI,CAACS,wBAAD,EAA2BW,eAA3B,CAA3B;AACA,UAAMnB,GAAG,CAACK,0BAA0B,CAACe,QAAD,CAA3B,CAAT;AACD,GAHD,CAGE,OAAOL,KAAP,EAAc;AACdH,IAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACD;AACF;;AAAA;AAED,OAAQ,UAAUM,mBAAV,GAAgC;AACtC,QAAMpB,UAAU,CAACE,mBAAmB,CAACmB,8BAArB,EAAqDJ,WAArD,CAAhB;AACD;AAAA;;AAED,UAAUK,YAAV,CAAuBJ,eAAvB,EAAwC;AACtC,MAAI;AACF,UAAMK,SAAS,GAAG,MAAMzB,IAAI,CAACU,6BAAD,EAAgCU,eAAhC,CAA5B;AACA,UAAMnB,GAAG,CAACM,2BAA2B,CAACkB,SAAD,CAA5B,CAAT;AACD,GAHD,CAGE,OAAOT,KAAP,EAAc;AACdH,IAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACD;AACF;;AAAA;AAED,OAAQ,UAAUU,oBAAV,GAAiC;AACvC,QAAMxB,UAAU,CAACE,mBAAmB,CAACuB,+BAArB,EAAsDH,YAAtD,CAAhB;AACD;AAAA;AAED,OAAO,UAAUI,aAAV,GAA0B;AAC/B,QAAMzB,GAAG,CAAC,CACRH,IAAI,CAACiB,oBAAD,CADI,EAERjB,IAAI,CAACsB,mBAAD,CAFI,EAGRtB,IAAI,CAAC0B,oBAAD,CAHI,CAAD,CAAT;AAKH;AAAA","sourcesContent":["import { call, put, takeLatest, all } from \"redux-saga/effects\";\r\n\r\n  import DropDownActionTypes from './drop-down.types';\r\n\r\n  import { \r\n      receiveAssetDropDownOptions,\r\n      receiveUserDropDownOptions,\r\n      receiveModelDropDownOptions\r\n    } from \"./drop-down.actions\";\r\n\r\n  import { \r\n      httpFetchAllAssetsForDropDown,\r\n      fetchAllUsersForDropDown ,\r\n      httpFetchAllModelsForDropDown\r\n    } from \"../../services/api\";\r\n\r\n\r\n  function* getAssetList(memberId) {\r\n    console.log('HELLLLLLLOOOOOOOOOOOOOOOOOOOOO', memberId)\r\n    try {\r\n      const assetList = yield httpFetchAllAssetsForDropDown(memberId);\r\n      console.log('GOOOOOOOOOOOOOOOOOOOOOOODDDDDDDD', assetList)\r\n      yield put(receiveAssetDropDownOptions(assetList));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  \r\n  export  function* requestAssetListSaga() {\r\n    yield takeLatest(DropDownActionTypes.REQUEST_ASSET_DROP_DOWN_OPTIONS, getAssetList);\r\n  };\r\n  \r\n  function* getUserList(dropDownOptions) {\r\n    try {\r\n      const userList = yield call(fetchAllUsersForDropDown, dropDownOptions);\r\n      yield put(receiveUserDropDownOptions(userList));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  \r\n  export  function* requestUserListSaga() {\r\n    yield takeLatest(DropDownActionTypes.REQUEST_USER_DROP_DOWN_OPTIONS, getUserList);\r\n  };\r\n  \r\n  function* getModelList(dropDownOptions) {\r\n    try {\r\n      const modelList = yield call(httpFetchAllModelsForDropDown, dropDownOptions);\r\n      yield put(receiveModelDropDownOptions(modelList));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  \r\n  export  function* requestModelListSaga() {\r\n    yield takeLatest(DropDownActionTypes.REQUEST_MODEL_DROP_DOWN_OPTIONS, getModelList);\r\n  };\r\n\r\n  export function* dropDownSagas() {\r\n    yield all([\r\n      call(requestAssetListSaga), \r\n      call(requestUserListSaga),\r\n      call(requestModelListSaga)\r\n    ])\r\n};"]},"metadata":{},"sourceType":"module"}