{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\alvar\\\\Documents\\\\WebDev\\\\comp-overload\\\\client\\\\src\\\\pages\\\\register\\\\register.component.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { handleMemberSignin } from \"../../redux/site-member/site-member.actions\";\nimport { RegistrationBody, RegistrationContainer, RegistrationInnerContainer, RegistrationFieldSet, RegistrationLegend, RegistrationLabel, RegistrationInput, RegistrationSubmit, NameFieldContainer, FormContainer, NameField, Email, Password } from \"./register.styles\";\n\nclass RegistrationPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onFirstNameChange = event => {\n      this.setState({\n        fname: event.target.value\n      });\n    };\n\n    this.onLastNameChange = event => {\n      this.setState({\n        lname: event.target.value\n      });\n    };\n\n    this.onEmailChange = event => {\n      this.setState({\n        email: event.target.value\n      });\n    };\n\n    this.onPasswordChange = event => {\n      this.setState({\n        password: event.target.value\n      });\n    };\n\n    this.onSubmitRegister = () => {\n      fetch('http://localhost:3000/register', {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          fname: this.state.fname,\n          lname: this.state.lname,\n          email: this.state.email,\n          password: this.state.password\n        })\n      }) // * Handling incorrect credentials\n      .then(response => response.json()).then(member => {\n        if (member) {\n          this.props.signIn();\n          this.props.history.push('/home');\n        }\n      });\n    };\n\n    this.state = {\n      fname: '',\n      lname: '',\n      email: '',\n      password: ''\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(RegistrationBody, {\n      children: /*#__PURE__*/_jsxDEV(RegistrationContainer, {\n        children: /*#__PURE__*/_jsxDEV(RegistrationInnerContainer, {\n          children: /*#__PURE__*/_jsxDEV(FormContainer, {\n            children: [/*#__PURE__*/_jsxDEV(RegistrationFieldSet, {\n              children: [/*#__PURE__*/_jsxDEV(RegistrationLegend, {\n                children: \"Register\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(NameFieldContainer, {\n                children: [/*#__PURE__*/_jsxDEV(NameField, {\n                  children: [/*#__PURE__*/_jsxDEV(RegistrationLabel, {\n                    htmlFor: \"fname\",\n                    children: \"First Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 72,\n                    columnNumber: 33\n                  }, this), /*#__PURE__*/_jsxDEV(RegistrationInput, {\n                    type: \"text\",\n                    name: \"fname\",\n                    id: \"fname\",\n                    onChange: this.onFirstNameChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 73,\n                    columnNumber: 33\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(NameField, {\n                  children: [/*#__PURE__*/_jsxDEV(RegistrationLabel, {\n                    htmlFor: \"lname\",\n                    children: \"Last Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 82,\n                    columnNumber: 33\n                  }, this), /*#__PURE__*/_jsxDEV(RegistrationInput, {\n                    type: \"text\",\n                    name: \"lname\",\n                    id: \"lname\",\n                    onChange: this.onLastNameChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 83,\n                    columnNumber: 33\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(Email, {\n                children: [/*#__PURE__*/_jsxDEV(RegistrationLabel, {\n                  htmlFor: \"email-address\",\n                  children: \"Email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(RegistrationInput, {\n                  type: \"email\",\n                  name: \"email-address\",\n                  id: \"email-address\",\n                  onChange: this.onEmailChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(Password, {\n                children: [/*#__PURE__*/_jsxDEV(RegistrationLabel, {\n                  htmlFor: \"password\",\n                  children: \"Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(RegistrationInput, {\n                  type: \"password\",\n                  name: \"password\",\n                  id: \"password\",\n                  onChange: this.onPasswordChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"\",\n              children: /*#__PURE__*/_jsxDEV(RegistrationSubmit, {\n                type: \"submit\",\n                value: \"Register\",\n                onClick: this.onSubmitRegister\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  signIn: () => {\n    dispatch(handleMemberSignin());\n  }\n});\n\nexport default connect(null, mapDispatchToProps)(RegistrationPage);","map":{"version":3,"sources":["C:/Users/alvar/Documents/WebDev/comp-overload/client/src/pages/register/register.component.jsx"],"names":["React","connect","handleMemberSignin","RegistrationBody","RegistrationContainer","RegistrationInnerContainer","RegistrationFieldSet","RegistrationLegend","RegistrationLabel","RegistrationInput","RegistrationSubmit","NameFieldContainer","FormContainer","NameField","Email","Password","RegistrationPage","Component","constructor","props","onFirstNameChange","event","setState","fname","target","value","onLastNameChange","lname","onEmailChange","email","onPasswordChange","password","onSubmitRegister","fetch","method","headers","body","JSON","stringify","state","then","response","json","member","signIn","history","push","render","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { handleMemberSignin } from \"../../redux/site-member/site-member.actions\";\r\n\r\nimport { RegistrationBody, RegistrationContainer, RegistrationInnerContainer, RegistrationFieldSet,\r\n        RegistrationLegend, RegistrationLabel, RegistrationInput, RegistrationSubmit, NameFieldContainer,\r\n        FormContainer, NameField, Email, Password\r\n} from \"./register.styles\";\r\nclass RegistrationPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            fname: '',\r\n            lname: '',\r\n            email: '',\r\n            password: ''\r\n        }\r\n    }\r\n\r\n    onFirstNameChange = (event) => {\r\n        this.setState({fname: event.target.value})\r\n    }\r\n\r\n    onLastNameChange = (event) => {\r\n        this.setState({lname: event.target.value})\r\n    }\r\n\r\n\r\n    onEmailChange = (event) => {\r\n        this.setState({email: event.target.value})\r\n    }\r\n\r\n    onPasswordChange = (event) => {\r\n        this.setState({password: event.target.value})\r\n    }\r\n\r\n    onSubmitRegister = () => {\r\n        fetch('http://localhost:3000/register', {\r\n            method: 'post',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify({\r\n                fname: this.state.fname,\r\n                lname: this.state.lname,\r\n                email: this.state.email,\r\n                password: this.state.password\r\n            })\r\n        })\r\n        // * Handling incorrect credentials\r\n        .then(response => response.json()) \r\n        .then(member => {\r\n            if (member) {\r\n                this.props.signIn()\r\n                this.props.history.push('/home')\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {    \r\n        return (\r\n        <RegistrationBody>\r\n            <RegistrationContainer>\r\n                <RegistrationInnerContainer>\r\n\r\n                    <FormContainer>\r\n                        <RegistrationFieldSet>\r\n                        <RegistrationLegend>Register</RegistrationLegend>    \r\n\r\n                        <NameFieldContainer>\r\n\r\n                            <NameField>   \r\n                                <RegistrationLabel htmlFor=\"fname\">First Name</RegistrationLabel>\r\n                                <RegistrationInput\r\n                                    type=\"text\" \r\n                                    name=\"fname\"  \r\n                                    id=\"fname\"\r\n                                    onChange ={this.onFirstNameChange }\r\n                                    />\r\n                            </NameField>\r\n\r\n                            <NameField>   \r\n                                <RegistrationLabel htmlFor=\"lname\">Last Name</RegistrationLabel>\r\n                                <RegistrationInput \r\n                                    type=\"text\" \r\n                                    name=\"lname\"  \r\n                                    id=\"lname\"\r\n                                    onChange ={this.onLastNameChange }\r\n                                />\r\n                            </NameField>\r\n\r\n                        </NameFieldContainer>\r\n\r\n\r\n                        <Email>\r\n                            <RegistrationLabel htmlFor=\"email-address\">Email</RegistrationLabel>\r\n                            <RegistrationInput\r\n                                type=\"email\" \r\n                                name=\"email-address\"  \r\n                                id=\"email-address\"\r\n                                onChange = {this.onEmailChange}\r\n                            />\r\n                        </Email>\r\n\r\n                        <Password>\r\n                            <RegistrationLabel htmlFor=\"password\">Password</RegistrationLabel>\r\n                            <RegistrationInput\r\n                                type=\"password\" \r\n                                name=\"password\"  \r\n                                id=\"password\"\r\n                                onChange ={this.onPasswordChange}\r\n                            />\r\n                        </Password>\r\n                        \r\n                        </RegistrationFieldSet>\r\n                        <div className=\"\">\r\n                        <RegistrationSubmit\r\n                            type=\"submit\" \r\n                            value=\"Register\"\r\n                            onClick = {this.onSubmitRegister}\r\n                            />\r\n                        </div>\r\n                    </FormContainer>\r\n                </RegistrationInnerContainer>\r\n            </RegistrationContainer>\r\n        </RegistrationBody>\r\n    )}\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    signIn: () => {dispatch(handleMemberSignin())}\r\n  });\r\n\r\n\r\nexport default connect(null, mapDispatchToProps)(RegistrationPage)\r\n"]},"metadata":{},"sourceType":"module"}