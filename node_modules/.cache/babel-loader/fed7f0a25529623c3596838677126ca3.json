{"ast":null,"code":"import { call, put, takeLatest, all } from \"redux-saga/effects\";\nimport { REQUEST_ASSET_DROP_DOWN_OPTIONS, receiveAssetDropDownOptions, REQUEST_USER_DROP_DOWN_OPTIONS, receiveUserDropDownOptions } from \"./drop-down.actions\";\nimport { fetchAllAssetsForDropDown, fetchAllUsersForDropDown } from \"../../services/api\";\n\nfunction* getAssetList(dropDownOptions) {\n  try {\n    const assetList = yield call(fetchAllAssetsForDropDown, dropDownOptions);\n    yield put(receiveAssetDropDownOptions(assetList));\n  } catch (error) {\n    console.log(error);\n  }\n}\n\n;\nexport function* requestAssetListSaga() {\n  yield takeLatest(REQUEST_ASSET_DROP_DOWN_OPTIONS, getAssetList);\n}\n;\n\nfunction* getUserList(dropDownOptions) {\n  try {\n    const userList = yield call(fetchAllUsersForDropDown, dropDownOptions);\n    yield put(receiveUserDropDownOptions(userList));\n  } catch (error) {\n    console.log(error);\n  }\n}\n\n;\nexport function* requestUserListSaga() {\n  yield takeLatest(REQUEST_USER_DROP_DOWN_OPTIONS, getUserList);\n}\n;\nexport function* dropDownSagas() {\n  yield all([call(requestAssetListSaga), call(requestUserListSaga)]);\n}\n;","map":{"version":3,"sources":["C:/Users/alvar/Documents/WebDev/comp-overload/client/src/redux/drop-downs/drop-downs.sagas.js"],"names":["call","put","takeLatest","all","REQUEST_ASSET_DROP_DOWN_OPTIONS","receiveAssetDropDownOptions","REQUEST_USER_DROP_DOWN_OPTIONS","receiveUserDropDownOptions","fetchAllAssetsForDropDown","fetchAllUsersForDropDown","getAssetList","dropDownOptions","assetList","error","console","log","requestAssetListSaga","getUserList","userList","requestUserListSaga","dropDownSagas"],"mappings":"AAAA,SACIA,IADJ,EAEIC,GAFJ,EAGIC,UAHJ,EAIIC,GAJJ,QAKS,oBALT;AAOE,SACIC,+BADJ,EAEIC,2BAFJ,EAGIC,8BAHJ,EAIIC,0BAJJ,QAKS,qBALT;AAOA,SACIC,yBADJ,EAEIC,wBAFJ,QAGS,oBAHT;;AAMA,UAAUC,YAAV,CAAuBC,eAAvB,EAAwC;AACtC,MAAI;AACF,UAAMC,SAAS,GAAG,MAAMZ,IAAI,CAACQ,yBAAD,EAA4BG,eAA5B,CAA5B;AACA,UAAMV,GAAG,CAACI,2BAA2B,CAACO,SAAD,CAA5B,CAAT;AACD,GAHD,CAGE,OAAOC,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF;;AAAA;AAED,OAAQ,UAAUG,oBAAV,GAAiC;AACvC,QAAMd,UAAU,CAACE,+BAAD,EAAkCM,YAAlC,CAAhB;AACD;AAAA;;AAED,UAAUO,WAAV,CAAsBN,eAAtB,EAAuC;AACrC,MAAI;AACF,UAAMO,QAAQ,GAAG,MAAMlB,IAAI,CAACS,wBAAD,EAA2BE,eAA3B,CAA3B;AACA,UAAMV,GAAG,CAACM,0BAA0B,CAACW,QAAD,CAA3B,CAAT;AACD,GAHD,CAGE,OAAOL,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF;;AAAA;AAED,OAAQ,UAAUM,mBAAV,GAAgC;AACtC,QAAMjB,UAAU,CAACI,8BAAD,EAAiCW,WAAjC,CAAhB;AACD;AAAA;AAGD,OAAO,UAAUG,aAAV,GAA0B;AAC/B,QAAMjB,GAAG,CAAC,CACRH,IAAI,CAACgB,oBAAD,CADI,EAERhB,IAAI,CAACmB,mBAAD,CAFI,CAAD,CAAT;AAIH;AAAA","sourcesContent":["import { \r\n    call, \r\n    put, \r\n    takeLatest, \r\n    all  \r\n  } from \"redux-saga/effects\";\r\n\r\n  import { \r\n      REQUEST_ASSET_DROP_DOWN_OPTIONS, \r\n      receiveAssetDropDownOptions,\r\n      REQUEST_USER_DROP_DOWN_OPTIONS,\r\n      receiveUserDropDownOptions\r\n    } from \"./drop-down.actions\";\r\n\r\n  import { \r\n      fetchAllAssetsForDropDown,\r\n      fetchAllUsersForDropDown \r\n    } from \"../../services/api\";\r\n\r\n\r\n  function* getAssetList(dropDownOptions) {\r\n    try {\r\n      const assetList = yield call(fetchAllAssetsForDropDown, dropDownOptions);\r\n      yield put(receiveAssetDropDownOptions(assetList));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  \r\n  export  function* requestAssetListSaga() {\r\n    yield takeLatest(REQUEST_ASSET_DROP_DOWN_OPTIONS, getAssetList);\r\n  };\r\n  \r\n  function* getUserList(dropDownOptions) {\r\n    try {\r\n      const userList = yield call(fetchAllUsersForDropDown, dropDownOptions);\r\n      yield put(receiveUserDropDownOptions(userList));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  \r\n  export  function* requestUserListSaga() {\r\n    yield takeLatest(REQUEST_USER_DROP_DOWN_OPTIONS, getUserList);\r\n  };\r\n  \r\n\r\n  export function* dropDownSagas() {\r\n    yield all([\r\n      call(requestAssetListSaga), \r\n      call(requestUserListSaga)\r\n    ])\r\n};"]},"metadata":{},"sourceType":"module"}