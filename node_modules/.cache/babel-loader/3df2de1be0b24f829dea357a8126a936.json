{"ast":null,"code":"import AssetActionTypes from \"./asset.types\";\nconst INITIAL_STATE = {\n  comments: null,\n  id: null,\n  image: null,\n  last_checkout: null,\n  model: null,\n  name: null,\n  owner_id: null,\n  serial: null,\n  status: null,\n  error: null\n};\n\nconst assetData = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case AssetActionTypes.REQUEST_SELECTED_ASSET_SUCCESS:\n      if (action.payload === undefined) {\n        return state;\n      }\n\n      return { ...state,\n        comments: action.payload.comments,\n        id: action.payload.id,\n        image: action.payload.image,\n        last_checkout: action.payload.last_checkout,\n        model: action.payload.model,\n        name: action.payload.name,\n        owner_id: action.payload.owner_id,\n        serial: action.payload.serial,\n        status: action.payload.status,\n        error: null\n      };\n\n    case AssetActionTypes.CHECK_IN_SELECTED_ASSET_SUCCESS:\n      return { ...state,\n        id: action.payload.id,\n        model: action.payload.model,\n        name: action.payload.name,\n        owner_id: action.payload.owner_id,\n        serial: action.payload.serial,\n        status: 'Available',\n        comments: null,\n        error: null\n      };\n\n    case AssetActionTypes.CHECK_OUT_SELECTED_ASSET_SUCCESS:\n      return { ...state,\n        id: action.payload.id,\n        model: action.payload.model,\n        name: action.payload.name,\n        owner_id: action.payload.owner_id,\n        serial: action.payload.serial,\n        status: 'In Use By ' + action.payload.userId,\n        comments: null,\n        error: null\n      };\n\n    case AssetActionTypes.QUARANTINE_SELECTED_ASSET_SUCCESS:\n      return { ...state,\n        id: action.payload.id,\n        model: action.payload.model,\n        name: action.payload.name,\n        owner_id: action.payload.owner_id,\n        serial: action.payload.serial,\n        status: 'Quarantine',\n        comments: action.payload.assetComments,\n        error: null\n      };\n\n    case AssetActionTypes.REMOVE_SELECTED_ASSET_SUCCESS:\n      return { ...state,\n        id: null,\n        error: null\n      };\n\n    case AssetActionTypes.REQUEST_SELECTED_ASSET_FAILURE:\n    case AssetActionTypes.CHECK_IN_SELECTED_ASSET_FAILURE:\n    case AssetActionTypes.CHECK_OUT_SELECTED_ASSET_FAILURE:\n    case AssetActionTypes.QUARANTINE_SELECTED_ASSET_FAILURE:\n    case AssetActionTypes.REMOVE_SELECTED_ASSET_FAILURE:\n      return { ...state,\n        error: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default assetData;","map":{"version":3,"sources":["C:/Users/alvar/Documents/WebDev/lendit/lendit/src/redux/asset/asset.reducer.js"],"names":["AssetActionTypes","INITIAL_STATE","comments","id","image","last_checkout","model","name","owner_id","serial","status","error","assetData","state","action","type","REQUEST_SELECTED_ASSET_SUCCESS","payload","undefined","CHECK_IN_SELECTED_ASSET_SUCCESS","CHECK_OUT_SELECTED_ASSET_SUCCESS","userId","QUARANTINE_SELECTED_ASSET_SUCCESS","assetComments","REMOVE_SELECTED_ASSET_SUCCESS","REQUEST_SELECTED_ASSET_FAILURE","CHECK_IN_SELECTED_ASSET_FAILURE","CHECK_OUT_SELECTED_ASSET_FAILURE","QUARANTINE_SELECTED_ASSET_FAILURE","REMOVE_SELECTED_ASSET_FAILURE"],"mappings":"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","sourcesContent":["import AssetActionTypes from \"./asset.types\";\r\n\r\nconst INITIAL_STATE = {\r\n  comments: null,\r\n  id: null,\r\n  image: null,\r\n  last_checkout: null,\r\n  model: null,\r\n  name: null,\r\n  owner_id: null,\r\n  serial: null,\r\n  status: null,\r\n  error : null,\r\n}\r\n\r\nconst assetData = (state = INITIAL_STATE  , action) => {\r\n  switch (action.type) {\r\n    case AssetActionTypes.REQUEST_SELECTED_ASSET_SUCCESS:\r\n      if(action.payload === undefined){\r\n        return state;\r\n      }\r\n      return {\r\n        ...state,\r\n        comments: action.payload.comments,\r\n        id: action.payload.id,\r\n        image: action.payload.image,\r\n        last_checkout: action.payload.last_checkout,\r\n        model: action.payload.model,\r\n        name: action.payload.name,\r\n        owner_id: action.payload.owner_id,\r\n        serial: action.payload.serial,\r\n        status: action.payload.status,\r\n        error : null,\r\n      };\r\n\r\n    case AssetActionTypes.CHECK_IN_SELECTED_ASSET_SUCCESS:\r\n    return {\r\n      ...state,\r\n      id: action.payload.id,\r\n      model: action.payload.model,\r\n      name: action.payload.name,\r\n      owner_id: action.payload.owner_id,\r\n      serial: action.payload.serial,\r\n      status: 'Available',\r\n      comments: null,\r\n      error : null,\r\n    };\r\n\r\n    case AssetActionTypes.CHECK_OUT_SELECTED_ASSET_SUCCESS:\r\n      return {\r\n        ...state,\r\n        id: action.payload.id,\r\n        model: action.payload.model,\r\n        name: action.payload.name,\r\n        owner_id: action.payload.owner_id,\r\n        serial: action.payload.serial,\r\n        status: 'In Use By ' + action.payload.userId,\r\n        comments: null,\r\n        error : null,\r\n      }\r\n\r\n      case AssetActionTypes.QUARANTINE_SELECTED_ASSET_SUCCESS:\r\n        return {\r\n          ...state,\r\n          id: action.payload.id,\r\n          model: action.payload.model,\r\n          name: action.payload.name,\r\n          owner_id: action.payload.owner_id,\r\n          serial: action.payload.serial,\r\n          status: 'Quarantine',\r\n          comments: action.payload.assetComments,\r\n          error : null,\r\n        }\r\n\r\n      case AssetActionTypes.REMOVE_SELECTED_ASSET_SUCCESS:\r\n        return {\r\n          ...state,\r\n          id: null,\r\n          error : null,\r\n        }\r\n    case AssetActionTypes.REQUEST_SELECTED_ASSET_FAILURE:\r\n    case AssetActionTypes.CHECK_IN_SELECTED_ASSET_FAILURE:\r\n    case AssetActionTypes.CHECK_OUT_SELECTED_ASSET_FAILURE:\r\n    case AssetActionTypes.QUARANTINE_SELECTED_ASSET_FAILURE:\r\n    case AssetActionTypes.REMOVE_SELECTED_ASSET_FAILURE:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default assetData; "]},"metadata":{},"sourceType":"module"}