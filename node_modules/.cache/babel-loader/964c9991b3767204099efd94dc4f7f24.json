{"ast":null,"code":"const API_URL = 'http://localhost:3000';\nexport const httpSignIn = (email, password, signin, history) => {\n  fetch(\"http://localhost:3000/members/signin\", {\n    method: \"post\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      email: email,\n      password: password\n    })\n  }).then(response => response.json()).then(member => {\n    if (member.id) {\n      signin(member.id);\n      history.push(\"/home\");\n    } else {\n      alert.show('Invalid credentials', {\n        type: \"error\",\n        position: \"top center\"\n      });\n    }\n  });\n};\nexport const fetchSelectedAssetData = async (assetID, ownerID) => {\n  const settings = {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      id: assetID,\n      owner_id: ownerID\n    })\n  };\n\n  try {\n    const response = await fetch(`${API_URL}/assets/asset`, settings);\n    const asset = await response.json();\n    return asset;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const fetchSelectedUserData = async userID => {\n  const settings = {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      id: userID\n    })\n  };\n\n  try {\n    const response = await fetch(`${API_URL}/users/user`, settings);\n    const user = await response.json();\n    return user;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const checkInAsset = async (assetId, userID, owner, assetName, assetSerial, assetModel) => {\n  console.log(assetId, userID, owner, assetName, assetSerial, assetModel);\n  const settings = {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      id: assetId,\n      username: userID,\n      owner: owner,\n      assetName: assetName,\n      assetSerial: assetSerial,\n      assetModel: assetModel\n    })\n  };\n\n  try {\n    await fetch(`${API_URL}/assets/checkin`, settings);\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const checkOutAsset = async (assetID, userID, owner, assetName, assetSerial, assetModel) => {\n  const settings = {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      id: assetID,\n      username: userID,\n      owner: owner,\n      assetName: assetName,\n      assetSerial: assetSerial,\n      assetModel: assetModel\n    })\n  };\n\n  try {\n    await fetch(`${API_URL}/assets/checkout`, settings);\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const quarantineAsset = async (assetID, userID, owner, assetName, assetSerial, assetModel, comment) => {\n  const settings = {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      id: assetID,\n      username: userID,\n      owner: owner,\n      assetName: assetName,\n      assetSerial: assetSerial,\n      assetModel: assetModel,\n      comment: comment\n    })\n  };\n\n  try {\n    await fetch(`${API_URL}/assets/quarantine`, settings);\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const createNewUser = async (userId, fname, lname, memberId) => {\n  const settings = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      userid: userId,\n      fname: fname,\n      lname: lname,\n      memberId: memberId\n    })\n  };\n\n  try {\n    const response = await fetch(`${API_URL}/users/adduser`, settings);\n    const reply = await response.json();\n    return reply;\n  } catch (error) {\n    return error;\n  }\n};\nexport const createNewAsset = async (assetID, assetName, assetModel, assetSerial, memberId) => {\n  const settings = {\n    method: \"post\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      id: assetID,\n      name: assetName,\n      model: assetModel,\n      serial: assetSerial,\n      memberId: memberId\n    })\n  };\n\n  try {\n    const response = await fetch(`${API_URL}/assets/addasset`, settings);\n    const reply = await response.json();\n    return reply;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const removeAsset = async assetID => {\n  const settings = {\n    method: \"delete\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      id: assetID\n    })\n  };\n\n  try {\n    const response = await fetch(`${API_URL}/assets/removeasset`, settings);\n    const reply = await response.json();\n    return reply;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const fetchAllAssetsForDropDown = async dispatchData => {\n  const settings = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      memberId: dispatchData.payload\n    })\n  };\n\n  try {\n    const response = await fetch(`${API_URL}/assets/allunits`, settings);\n    const assetList = await response.json();\n    return assetList;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const fetchAllUsersForDropDown = async dispatchData => {\n  const settings = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      memberId: dispatchData.payload\n    })\n  };\n\n  try {\n    const response = await fetch(`${API_URL}/users/allusers`, settings);\n    const assetList = await response.json();\n    return assetList;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const fetchAllModelsForDropDown = async dispatchData => {\n  const settings = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      memberId: dispatchData.payload\n    })\n  };\n\n  try {\n    const response = await fetch(`${API_URL}/assets/allmodels`, settings);\n    const assetList = await response.json();\n    return assetList;\n  } catch (error) {\n    console.log(error);\n  }\n\n  ;\n};","map":{"version":3,"sources":["C:/Users/alvar/Documents/WebDev/lendit/lendit/src/services/api.js"],"names":["API_URL","httpSignIn","email","password","signin","history","fetch","method","headers","body","JSON","stringify","then","response","json","member","id","push","alert","show","type","position","fetchSelectedAssetData","assetID","ownerID","settings","Accept","owner_id","asset","error","console","log","fetchSelectedUserData","userID","user","checkInAsset","assetId","owner","assetName","assetSerial","assetModel","username","checkOutAsset","quarantineAsset","comment","createNewUser","userId","fname","lname","memberId","userid","reply","createNewAsset","name","model","serial","removeAsset","fetchAllAssetsForDropDown","dispatchData","payload","assetList","fetchAllUsersForDropDown","fetchAllModelsForDropDown"],"mappings":"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","sourcesContent":["const API_URL = 'http://localhost:3000'\r\n\r\nexport const httpSignIn = (email, password, signin, history) => {\r\n  fetch(\"http://localhost:3000/members/signin\", {\r\n    method: \"post\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify({\r\n      email: email,\r\n      password: password,\r\n    }),\r\n  })\r\n  .then((response) => response.json())\r\n  .then((member) => {\r\n    if (member.id) {\r\n      signin(member.id);\r\n      history.push(\"/home\");\r\n    } else{\r\n      alert.show('Invalid credentials' , { type: \"error\" , position:\"top center\"})\r\n    }\r\n  })\r\n};\r\n\r\nexport const fetchSelectedAssetData = async (assetID, ownerID) => {\r\n  const settings = {\r\n    method: \"POST\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({\r\n      id: assetID,\r\n      owner_id: ownerID\r\n    }),\r\n  };\r\n  try {\r\n    const response = await fetch(\r\n      `${API_URL}/assets/asset`,\r\n      settings\r\n    );\r\n    const asset = await response.json();\r\n    return asset;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const fetchSelectedUserData = async (userID) => {\r\n  const settings = {\r\n    method: \"POST\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({\r\n      id: userID,\r\n    }),\r\n  };\r\n  try {\r\n    const response = await fetch(\r\n      `${API_URL}/users/user`,\r\n      settings\r\n    );\r\n    const user = await response.json();\r\n    return user;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const checkInAsset = async ( assetId, userID, owner, assetName, assetSerial, assetModel) => {\r\n  console.log( assetId, userID, owner, assetName, assetSerial, assetModel)\r\n  const settings = {\r\n    method: \"POST\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({\r\n      id: assetId,\r\n      username: userID,\r\n      owner: owner,\r\n      assetName: assetName,\r\n      assetSerial: assetSerial,\r\n      assetModel: assetModel,\r\n    }),\r\n  };\r\n  try {\r\n    await fetch(`${API_URL}/assets/checkin`, settings);\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const checkOutAsset = async (assetID, userID, owner, assetName, assetSerial, assetModel) => {\r\n  const settings = {\r\n    method: \"POST\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({\r\n      id: assetID,\r\n      username: userID,\r\n      owner: owner,\r\n      assetName: assetName,\r\n      assetSerial: assetSerial,\r\n      assetModel: assetModel,\r\n    }),\r\n  };\r\n  try {\r\n    await fetch(`${API_URL}/assets/checkout`, settings);\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const quarantineAsset = async (assetID, userID, owner, assetName, assetSerial, assetModel, comment) => {\r\n  const settings = {\r\n    method: \"POST\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({\r\n      id: assetID,\r\n      username: userID,\r\n      owner: owner,\r\n      assetName: assetName,\r\n      assetSerial: assetSerial,\r\n      assetModel: assetModel,\r\n      comment: comment,\r\n    }),\r\n  };\r\n  try {\r\n    await fetch(`${API_URL}/assets/quarantine`, settings);\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const createNewUser = async (userId, fname, lname, memberId) => {\r\n  const settings = {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify({\r\n      userid: userId,\r\n      fname: fname,\r\n      lname: lname,\r\n      memberId: memberId,\r\n    }),\r\n  };\r\n  try {\r\n    const response = await fetch(\r\n      `${API_URL}/users/adduser`,\r\n      settings\r\n    );\r\n    const reply = await response.json();\r\n    return reply;\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nexport const createNewAsset = async (assetID, assetName, assetModel, assetSerial, memberId) => {\r\n  const settings = {\r\n    method: \"post\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify({\r\n      id: assetID,\r\n      name: assetName,\r\n      model: assetModel,\r\n      serial: assetSerial,\r\n      memberId: memberId,\r\n    }),\r\n  };\r\n  try {\r\n    const response = await fetch(\r\n      `${API_URL}/assets/addasset`,\r\n      settings\r\n    );\r\n    const reply = await response.json();\r\n    return reply;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const removeAsset = async (assetID) => {\r\n  const settings = {\r\n    method: \"delete\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify({\r\n      id: assetID,\r\n    }),\r\n  };\r\n  try {\r\n    const response = await fetch(\r\n      `${API_URL}/assets/removeasset`,\r\n      settings\r\n    );\r\n    const reply = await response.json();\r\n    return reply;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const fetchAllAssetsForDropDown = async (dispatchData) => {\r\n  const settings = {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify({\r\n      memberId: dispatchData.payload,\r\n    }),\r\n  };\r\n  try {\r\n    const response = await fetch(\r\n      `${API_URL}/assets/allunits`,\r\n      settings\r\n    );\r\n    const assetList = await response.json();\r\n    return assetList;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const fetchAllUsersForDropDown = async (dispatchData) => {\r\n  const settings = {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify({\r\n      memberId: dispatchData.payload,\r\n    }),\r\n  };\r\n  try {\r\n    const response = await fetch(\r\n      `${API_URL}/users/allusers`,\r\n      settings\r\n    );\r\n    const assetList = await response.json();\r\n    return assetList;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const fetchAllModelsForDropDown = async (dispatchData) => {\r\n  const settings = {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify({\r\n      memberId: dispatchData.payload,\r\n    }),\r\n  };\r\n  try {\r\n    const response = await fetch(\r\n      `${API_URL}/assets/allmodels`,\r\n      settings\r\n    );\r\n    const assetList = await response.json();\r\n    return assetList;\r\n  } catch (error) {\r\n    console.log(error);\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}