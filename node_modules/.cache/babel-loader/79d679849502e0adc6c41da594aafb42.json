{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\alvar\\\\Documents\\\\WebDev\\\\lendit\\\\lendit\\\\src\\\\components\\\\modals\\\\available-assets.modal.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport { currentMemberId } from \"../../redux/site-member/site-member.selectors\";\nimport { seenAvailableAssets } from \"../../redux/modal/modal.selectors\";\nimport { toggleAvailableUnits } from \"../../redux/modal/modal.actions\";\nimport Loader from \"react-loader-spinner\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport { ModalMain, ModalReportContent, CloseButton, Header, TableContainer, Table, TableHeading, TableRow, TableBody } from \"./modal.styles\";\n\nconst AvailableUnits = ({\n  toggleAvailableUnits,\n  memberId\n}) => {\n  _s();\n\n  const [data, setData] = useState();\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await axios({\n        method: \"post\",\n        url: \"http://localhost:3000//availableassets\",\n        data: {\n          memberId: memberId\n        }\n      });\n      setData(result.data);\n    };\n\n    fetchData(memberId);\n  }, [memberId]);\n  return /*#__PURE__*/_jsxDEV(ModalMain, {\n    children: /*#__PURE__*/_jsxDEV(ModalReportContent, {\n      children: [/*#__PURE__*/_jsxDEV(CloseButton, {\n        onClick: toggleAvailableUnits,\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Header, {\n        children: \"Available Units\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n        children: data ? /*#__PURE__*/_jsxDEV(Table, {\n          cellSpacing: \"0\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableHeading, {\n                children: \"Asset ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableHeading, {\n                children: \"Asset Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableHeading, {\n                children: \"Model\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableHeading, {\n                children: \"Serial\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: data.map(unit => /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: unit.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: unit.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: unit.model\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: unit.serial\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 21\n              }, this)]\n            }, unit.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Loader, {\n          type: \"Puff\",\n          color: \"#966eff\",\n          height: 70,\n          width: 70,\n          className: \"loader\",\n          style: {\n            position: \"absolute\",\n            top: \"20%\",\n            left: \"50%\",\n            margin: \"-25px 0 0 -25px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AvailableUnits, \"WZ2PO9A64oHRexE1CE+yX3ebuoA=\");\n\n_c = AvailableUnits;\nconst mapStateToProps = createStructuredSelector({\n  memberId: currentMemberId,\n  seenAvailableAssets\n});\n\nconst mapDispatchToProps = dispatch => ({\n  toggleAvailableUnits: () => dispatch(toggleAvailableUnits())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AvailableUnits);\n\nvar _c;\n\n$RefreshReg$(_c, \"AvailableUnits\");","map":{"version":3,"sources":["C:/Users/alvar/Documents/WebDev/lendit/lendit/src/components/modals/available-assets.modal.jsx"],"names":["React","useEffect","useState","axios","connect","createStructuredSelector","currentMemberId","seenAvailableAssets","toggleAvailableUnits","Loader","ModalMain","ModalReportContent","CloseButton","Header","TableContainer","Table","TableHeading","TableRow","TableBody","AvailableUnits","memberId","data","setData","fetchData","result","method","url","map","unit","id","name","model","serial","position","top","left","margin","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport { currentMemberId } from \"../../redux/site-member/site-member.selectors\";\r\nimport { seenAvailableAssets } from \"../../redux/modal/modal.selectors\";\r\n\r\nimport { toggleAvailableUnits } from \"../../redux/modal/modal.actions\";\r\n\r\nimport Loader from \"react-loader-spinner\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\n\r\nimport {\r\n  ModalMain,\r\n  ModalReportContent,\r\n  CloseButton,\r\n  Header,\r\n  TableContainer,\r\n  Table,\r\n  TableHeading,\r\n  TableRow,\r\n  TableBody,\r\n} from \"./modal.styles\";\r\n\r\nconst AvailableUnits = ({ toggleAvailableUnits, memberId }) => {\r\n  const [data, setData] = useState();\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const result = await axios({\r\n        method: \"post\",\r\n        url: \"http://localhost:3000//availableassets\",\r\n        data: {\r\n          memberId: memberId,\r\n        },\r\n      });\r\n      setData(result.data);\r\n    };\r\n\r\n    fetchData(memberId);\r\n  }, [memberId]);\r\n\r\n  return (\r\n    <ModalMain>\r\n      <ModalReportContent>\r\n        <CloseButton onClick={toggleAvailableUnits}>&times;</CloseButton>\r\n        <Header>Available Units</Header>\r\n        <TableContainer>\r\n          {data ? (\r\n            <Table cellSpacing=\"0\">\r\n              <thead>\r\n                <TableRow>\r\n                  <TableHeading>Asset ID</TableHeading>\r\n                  <TableHeading>Asset Name</TableHeading>\r\n                  <TableHeading>Model</TableHeading>\r\n                  <TableHeading>Serial</TableHeading>\r\n                </TableRow>\r\n              </thead>\r\n              <TableBody>\r\n                {data.map((unit) => (\r\n                  <TableRow key={unit.id}>\r\n                    <td>{unit.id}</td>\r\n                    <td>{unit.name}</td>\r\n                    <td>{unit.model}</td>\r\n                    <td>{unit.serial}</td>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          ) : (\r\n            <Loader\r\n              type=\"Puff\"\r\n              color=\"#966eff\"\r\n              height={70}\r\n              width={70}\r\n              className=\"loader\"\r\n              style={{\r\n                position: \"absolute\",\r\n                top: \"20%\",\r\n                left: \"50%\",\r\n                margin: \"-25px 0 0 -25px\",\r\n              }}\r\n            />\r\n          )}\r\n        </TableContainer>\r\n      </ModalReportContent>\r\n    </ModalMain>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  memberId: currentMemberId,\r\n  seenAvailableAssets,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  toggleAvailableUnits: () => dispatch(toggleAvailableUnits()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AvailableUnits);\r\n"]},"metadata":{},"sourceType":"module"}