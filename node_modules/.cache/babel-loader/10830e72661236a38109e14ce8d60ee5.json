{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\bryan.alvarez\\\\Documents\\\\webdev\\\\git\\\\comp-overload\\\\client\\\\src\\\\components\\\\modals\\\\activity-tracking.modal.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { toggleActvityTracking } from \"../../redux/modal/modal.actions\";\nimport { ModalMain, ModalContent, CloseButton, Header, Article, FieldSet, Label, Submit, ModalDate } from \"./modal.styles\";\nimport CustomDropDown from '../custom-drop-down/custom-drop-down.component';\nimport UserDropDown from \"../custom-drop-down/user-drop-down.component\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { DropDown } from \"../custom-drop-down/drop-down.styles\";\n\nconst ActivityTracking = ({\n  toggleActvityTracking,\n  memberId\n}) => {\n  _s();\n\n  const [startDate, setStartDate] = useState(new Date());\n  const [endDate, setEndDate] = useState(new Date()); // const inputReset = () => {\n  //   userID = null;\n  //   asset-id = null;\n  //   user-id = null;\n  //   document.getElementById('userid').value = '';\n  //   document.getElementById('asset-id').value = '';\n  //   document.getElementById('user-id').value = '';\n  //   document.getElementById('userid').focus();\n  // };\n  // const fetchReport = (event) => {\n  //   console.log(Date.parse(startDate))\n  //   console.log(Date.parse(endDate))\n  // };\n\n  return /*#__PURE__*/_jsxDEV(ModalMain, {\n    children: /*#__PURE__*/_jsxDEV(ModalContent, {\n      children: [/*#__PURE__*/_jsxDEV(CloseButton, {\n        onClick: () => {\n          toggleActvityTracking();\n        },\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Header, {\n        children: \"Activity Tracking\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Article, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          action: \"sign-up_submit\",\n          method: \"get\",\n          acceptCharset: \"utf-8\",\n          children: [/*#__PURE__*/_jsxDEV(FieldSet, {\n            id: \"sign_up\",\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              htmlFor: \"email-address\",\n              children: \"Start Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ModalDate, {\n              selected: startDate,\n              timeInputLabel: \"Time:\",\n              dateFormat: \"MM/dd/yyyy h:mm aa\",\n              showTimeInput: true,\n              onChange: date => setStartDate(date)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Label, {\n              htmlFor: \"email-address\",\n              children: \"End Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ModalDate, {\n              selected: endDate,\n              timeInputLabel: \"Time:\",\n              dateFormat: \"MM/dd/yyyy h:mm aa\",\n              showTimeInput: true,\n              onChange: date => setEndDate(date)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Label, {\n              htmlFor: \"asset-id\",\n              children: \"Asset ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(CustomDropDown, {\n              type: \"text\",\n              name: \"asset-id\",\n              id: \"asset-id\",\n              optionList: assets\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Label, {\n              htmlFor: \"user-id\",\n              children: \"User ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(UserDropDown, {\n              type: \"text\",\n              name: \"user-id\",\n              id: \"user-id\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Submit, {\n            type: \"submit\",\n            defaultValue: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 4\n  }, this);\n};\n\n_s(ActivityTracking, \"CB3P3vcxhYWYYMMjpMOjzpMcBPY=\");\n\n_c = ActivityTracking;\n\nconst mapStateToProps = state => ({\n  memberId: state.memberState.memberId\n});\n\nconst mapDispatchToProps = dispatch => ({\n  toggleActvityTracking: () => dispatch(toggleActvityTracking())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ActivityTracking);\n\nvar _c;\n\n$RefreshReg$(_c, \"ActivityTracking\");","map":{"version":3,"sources":["C:/Users/bryan.alvarez/Documents/webdev/git/comp-overload/client/src/components/modals/activity-tracking.modal.jsx"],"names":["React","useState","connect","toggleActvityTracking","ModalMain","ModalContent","CloseButton","Header","Article","FieldSet","Label","Submit","ModalDate","CustomDropDown","UserDropDown","DropDown","ActivityTracking","memberId","startDate","setStartDate","Date","endDate","setEndDate","date","assets","mapStateToProps","state","memberState","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { toggleActvityTracking } from \"../../redux/modal/modal.actions\";\r\n\r\nimport { ModalMain, ModalContent, CloseButton, Header, Article,\r\n  FieldSet, Label, Submit, ModalDate\r\n} from \"./modal.styles\";\r\n\r\nimport CustomDropDown from '../custom-drop-down/custom-drop-down.component';\r\nimport UserDropDown from \"../custom-drop-down/user-drop-down.component\";\r\n\r\n\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { DropDown } from \"../custom-drop-down/drop-down.styles\";\r\n\r\nconst ActivityTracking = ( {toggleActvityTracking, memberId} ) =>{\r\n\r\n  const [startDate, setStartDate] = useState(new Date());\r\n  const [endDate, setEndDate] = useState(new Date());\r\n\r\n  // const inputReset = () => {\r\n  //   userID = null;\r\n  //   asset-id = null;\r\n  //   user-id = null;\r\n  //   document.getElementById('userid').value = '';\r\n  //   document.getElementById('asset-id').value = '';\r\n  //   document.getElementById('user-id').value = '';\r\n  //   document.getElementById('userid').focus();\r\n  // };\r\n\r\n  // const fetchReport = (event) => {\r\n  //   console.log(Date.parse(startDate))\r\n  //   console.log(Date.parse(endDate))\r\n  // };\r\n  \r\n\r\n  return (\r\n   <ModalMain>\r\n     \r\n      <ModalContent>\r\n        {/* Retrieve updated list of users when modal is closed. */}\r\n        <CloseButton onClick={() => {toggleActvityTracking()}}>&times;</CloseButton>\r\n        <Header>Activity Tracking</Header>\r\n        <Article>\r\n          <div action=\"sign-up_submit\" method=\"get\" acceptCharset=\"utf-8\">\r\n            <FieldSet id=\"sign_up\">\r\n                <Label htmlFor=\"email-address\">Start Date</Label>\r\n                <ModalDate \r\n                  selected={startDate} \r\n                  timeInputLabel=\"Time:\"\r\n                  dateFormat=\"MM/dd/yyyy h:mm aa\"\r\n                  showTimeInput\r\n                  onChange={date => setStartDate(date)} \r\n                />\r\n                <Label htmlFor=\"email-address\">End Date</Label>\r\n                <ModalDate\r\n                  selected={endDate}       \r\n                  timeInputLabel=\"Time:\"\r\n                  dateFormat=\"MM/dd/yyyy h:mm aa\"\r\n                  showTimeInput \r\n                  onChange={date => setEndDate(date)} \r\n                />\r\n                <Label htmlFor=\"asset-id\">Asset ID</Label>\r\n                <CustomDropDown  type=\"text\" name=\"asset-id\"  id=\"asset-id\" optionList={assets}/>\r\n                <Label htmlFor=\"user-id\">User ID</Label>\r\n                <UserDropDown  type=\"text\" name=\"user-id\"  id=\"user-id\"/>\r\n            </FieldSet>\r\n            <Submit  type = \"submit\" defaultValue=\"Submit\"/>\r\n          </div>\r\n        </Article>\r\n      </ModalContent>\r\n   </ModalMain>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  memberId: state.memberState.memberId\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  toggleActvityTracking : () => dispatch(toggleActvityTracking())\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ActivityTracking);"]},"metadata":{},"sourceType":"module"}