{"ast":null,"code":"import axios from 'axios';\nexport const API_URL = 'https://lendit-api.herokuapp.com';\nexport async function httpRegisterUser(fname, lname, email, password) {\n  axios({\n    method: 'post',\n    url: `${API_URL}/members/register`,\n    data: {\n      fname: fname,\n      lname: lname,\n      email: email,\n      password: password\n    }\n  });\n}\n;\nexport async function httpSignInUser(email, password) {\n  return axios.post(`${API_URL}/members/signin`, {\n    email: email,\n    password: password\n  }).then(response => {\n    return response.data;\n  });\n}\n;\nexport async function httpFetchSelectedAssetData(assetID, ownerID) {\n  if (!assetID || !ownerID) {\n    return;\n  }\n\n  ;\n  axios.post(`${API_URL}/assets/asset`, {\n    id: assetID,\n    owner_id: ownerID\n  }).then(response => {\n    return response.data;\n  }).catch(error => {\n    console.log(error);\n  });\n}\n;\nexport const fetchSelectedAssetData = async (assetID, ownerID) => {\n  if (!assetID || !ownerID) {\n    return;\n  }\n\n  ;\n  const settings = {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      id: assetID,\n      owner_id: ownerID\n    })\n  };\n\n  try {\n    const response = await fetch(`${API_URL}/assets/asset`, settings);\n    const asset = await response.json();\n    return asset;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const fetchSelectedUserData = async userID => {\n  if (!userID) {\n    return;\n  }\n\n  ;\n  const settings = {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      id: userID\n    })\n  };\n\n  try {\n    const response = await fetch(`${API_URL}/users/user`, settings);\n    const user = await response.json();\n    return user;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const checkInAsset = async (assetId, userID, owner, assetName, assetSerial, assetModel) => {\n  const settings = {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      id: assetId,\n      username: userID,\n      owner: owner,\n      assetName: assetName,\n      assetSerial: assetSerial,\n      assetModel: assetModel\n    })\n  };\n\n  try {\n    await fetch(`${API_URL}/assets/checkin`, settings);\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const checkOutAsset = async (assetID, userID, owner, assetName, assetSerial, assetModel) => {\n  const settings = {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      id: assetID,\n      username: userID,\n      owner: owner,\n      assetName: assetName,\n      assetSerial: assetSerial,\n      assetModel: assetModel\n    })\n  };\n\n  try {\n    await fetch(`${API_URL}/assets/checkout`, settings);\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const quarantineAsset = async (assetID, userID, owner, assetName, assetSerial, assetModel, comment) => {\n  const settings = {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      id: assetID,\n      username: userID,\n      owner: owner,\n      assetName: assetName,\n      assetSerial: assetSerial,\n      assetModel: assetModel,\n      comment: comment\n    })\n  };\n\n  try {\n    await fetch(`${API_URL}/assets/quarantine`, settings);\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const createNewUser = async (userId, fname, lname, memberId) => {\n  const settings = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      userid: userId,\n      fname: fname,\n      lname: lname,\n      memberId: memberId\n    })\n  };\n\n  try {\n    const response = await fetch(`${API_URL}/users/adduser`, settings);\n    const reply = await response.json();\n    return reply;\n  } catch (error) {\n    return error;\n  }\n};\nexport const createNewAsset = async (assetID, assetName, assetModel, assetSerial, memberId) => {\n  const settings = {\n    method: \"post\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      id: assetID,\n      name: assetName,\n      model: assetModel,\n      serial: assetSerial,\n      memberId: memberId\n    })\n  };\n\n  try {\n    const response = await fetch(`${API_URL}/assets/addasset`, settings);\n    const reply = await response.json();\n    return reply;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const removeAsset = async assetID => {\n  const settings = {\n    method: \"delete\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      id: assetID\n    })\n  };\n\n  try {\n    const response = await fetch(`${API_URL}/assets/removeasset`, settings);\n    const reply = await response.json();\n    return reply;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const fetchAllAssetsForDropDown = async dispatchData => {\n  const settings = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      memberId: dispatchData.payload\n    })\n  };\n\n  try {\n    const response = await fetch(`${API_URL}/assets/allunits`, settings);\n    const assetList = await response.json();\n    return assetList;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const fetchAllUsersForDropDown = async dispatchData => {\n  const settings = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      memberId: dispatchData.payload\n    })\n  };\n\n  try {\n    const response = await fetch(`${API_URL}/users/allusers`, settings);\n    const assetList = await response.json();\n    return assetList;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const fetchAllModelsForDropDown = async dispatchData => {\n  const settings = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      memberId: dispatchData.payload\n    })\n  };\n\n  try {\n    const response = await fetch(`${API_URL}/assets/allmodels`, settings);\n    const assetList = await response.json();\n    return assetList;\n  } catch (error) {\n    console.log(error);\n  }\n\n  ;\n};","map":{"version":3,"sources":["C:/Users/alvar/Documents/WebDev/lendit/lendit/src/services/api.js"],"names":["axios","API_URL","httpRegisterUser","fname","lname","email","password","method","url","data","httpSignInUser","post","then","response","httpFetchSelectedAssetData","assetID","ownerID","id","owner_id","catch","error","console","log","fetchSelectedAssetData","settings","headers","Accept","body","JSON","stringify","fetch","asset","json","fetchSelectedUserData","userID","user","checkInAsset","assetId","owner","assetName","assetSerial","assetModel","username","checkOutAsset","quarantineAsset","comment","createNewUser","userId","memberId","userid","reply","createNewAsset","name","model","serial","removeAsset","fetchAllAssetsForDropDown","dispatchData","payload","assetList","fetchAllUsersForDropDown","fetchAllModelsForDropDown"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nexport const API_URL = 'https://lendit-api.herokuapp.com';\r\n\r\nexport async function httpRegisterUser(fname, lname, email, password) {\r\n  axios({\r\n    method: 'post',\r\n    url: `${API_URL}/members/register`,\r\n    data:{\r\n        fname: fname,\r\n        lname: lname,\r\n        email: email,\r\n        password: password,\r\n        }\r\n  });  \r\n};\r\n\r\nexport async function httpSignInUser(email, password) {\r\n  return axios.post(`${API_URL}/members/signin`,{\r\n    email: email,\r\n    password: password,\r\n      })\r\n      .then(response => {\r\n        return response.data;\r\n      })\r\n};\r\n\r\nexport async function httpFetchSelectedAssetData(assetID, ownerID) {\r\n  if (!assetID || !ownerID){\r\n    return;\r\n  };\r\n\r\n  axios.post(`${API_URL}/assets/asset`, {\r\n    id: assetID,\r\n    owner_id: ownerID\r\n  })\r\n  .then(response => {\r\n    return response.data;\r\n  })\r\n  .catch(error => {\r\n    console.log(error);\r\n  });\r\n};\r\n\r\nexport const fetchSelectedAssetData = async (assetID, ownerID) => {\r\n  if (!assetID || !ownerID){\r\n    return;\r\n  };\r\n\r\n  const settings = {\r\n    method: \"POST\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({\r\n      id: assetID,\r\n      owner_id: ownerID\r\n    }),\r\n  };\r\n  try {\r\n    const response = await fetch(\r\n      `${API_URL}/assets/asset`,\r\n      settings\r\n    );\r\n    const asset = await response.json();\r\n    return asset;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const fetchSelectedUserData = async (userID) => {\r\n  if (!userID){\r\n    return;\r\n  };\r\n\r\n  const settings = {\r\n    method: \"POST\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({\r\n      id: userID,\r\n    }),\r\n  };\r\n  try {\r\n    const response = await fetch(\r\n      `${API_URL}/users/user`,\r\n      settings\r\n    );\r\n    const user = await response.json();\r\n    return user;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const checkInAsset = async ( assetId, userID, owner, assetName, assetSerial, assetModel) => {\r\n  const settings = {\r\n    method: \"POST\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({\r\n      id: assetId,\r\n      username: userID,\r\n      owner: owner,\r\n      assetName: assetName,\r\n      assetSerial: assetSerial,\r\n      assetModel: assetModel,\r\n    }),\r\n  };\r\n  try {\r\n    await fetch(`${API_URL}/assets/checkin`, settings);\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const checkOutAsset = async (assetID, userID, owner, assetName, assetSerial, assetModel) => {\r\n  const settings = {\r\n    method: \"POST\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({\r\n      id: assetID,\r\n      username: userID,\r\n      owner: owner,\r\n      assetName: assetName,\r\n      assetSerial: assetSerial,\r\n      assetModel: assetModel,\r\n    }),\r\n  };\r\n  try {\r\n    await fetch(`${API_URL}/assets/checkout`, settings);\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const quarantineAsset = async (assetID, userID, owner, assetName, assetSerial, assetModel, comment) => {\r\n  const settings = {\r\n    method: \"POST\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({\r\n      id: assetID,\r\n      username: userID,\r\n      owner: owner,\r\n      assetName: assetName,\r\n      assetSerial: assetSerial,\r\n      assetModel: assetModel,\r\n      comment: comment,\r\n    }),\r\n  };\r\n  try {\r\n    await fetch(`${API_URL}/assets/quarantine`, settings);\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const createNewUser = async (userId, fname, lname, memberId) => {\r\n  const settings = {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify({\r\n      userid: userId,\r\n      fname: fname,\r\n      lname: lname,\r\n      memberId: memberId,\r\n    }),\r\n  };\r\n  try {\r\n    const response = await fetch(\r\n      `${API_URL}/users/adduser`,\r\n      settings\r\n    );\r\n    const reply = await response.json();\r\n    return reply;\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nexport const createNewAsset = async (assetID, assetName, assetModel, assetSerial, memberId) => {\r\n  const settings = {\r\n    method: \"post\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify({\r\n      id: assetID,\r\n      name: assetName,\r\n      model: assetModel,\r\n      serial: assetSerial,\r\n      memberId: memberId,\r\n    }),\r\n  };\r\n  try {\r\n    const response = await fetch(\r\n      `${API_URL}/assets/addasset`,\r\n      settings\r\n    );\r\n    const reply = await response.json();\r\n    return reply;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const removeAsset = async (assetID) => {\r\n  const settings = {\r\n    method: \"delete\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify({\r\n      id: assetID,\r\n    }),\r\n  };\r\n  try {\r\n    const response = await fetch(\r\n      `${API_URL}/assets/removeasset`,\r\n      settings\r\n    );\r\n    const reply = await response.json();\r\n    return reply;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const fetchAllAssetsForDropDown = async (dispatchData) => {\r\n  const settings = {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify({\r\n      memberId: dispatchData.payload,\r\n    }),\r\n  };\r\n  try {\r\n    const response = await fetch(\r\n      `${API_URL}/assets/allunits`,\r\n      settings\r\n    );\r\n    const assetList = await response.json();\r\n    return assetList;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const fetchAllUsersForDropDown = async (dispatchData) => {\r\n  const settings = {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify({\r\n      memberId: dispatchData.payload,\r\n    }),\r\n  };\r\n  try {\r\n    const response = await fetch(\r\n      `${API_URL}/users/allusers`,\r\n      settings\r\n    );\r\n    const assetList = await response.json();\r\n    return assetList;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const fetchAllModelsForDropDown = async (dispatchData) => {\r\n  const settings = {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify({\r\n      memberId: dispatchData.payload,\r\n    }),\r\n  };\r\n  try {\r\n    const response = await fetch(\r\n      `${API_URL}/assets/allmodels`,\r\n      settings\r\n    );\r\n    const assetList = await response.json();\r\n    return assetList;\r\n  } catch (error) {\r\n    console.log(error);\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}