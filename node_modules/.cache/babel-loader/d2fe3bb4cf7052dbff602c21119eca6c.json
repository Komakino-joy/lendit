{"ast":null,"code":"import axios from 'axios';\nexport const API_URL = 'https://lendit-api.herokuapp.com';\nexport function httpRegisterUser(fname, lname, email, password) {\n  axios({\n    method: 'post',\n    url: `${API_URL}/members/register`,\n    data: {\n      fname: fname,\n      lname: lname,\n      email: email,\n      password: password\n    }\n  });\n}\n;\nexport function httpSignInUser(email, password) {\n  axios({\n    method: 'post',\n    url: `${API_URL}/members/signin`,\n    data: {\n      email: email,\n      password: password\n    }\n  });\n}\n; // fetch(`${API_URL}/members/signin`, {\n//   method: \"post\",\n//   headers: { \"Content-Type\": \"application/json\" },\n//   body: JSON.stringify({\n//     email: email,\n//     password: password,\n//   }),\n// })\n// .then((response) => response.json())\n// .then((member) => {\n//   if (member.id) {\n//     signIn(member.id);\n//     history.push(\"/home\");\n//   } else{\n//     alert.show('Invalid credentials' , { type: \"error\" , position:\"top center\"})\n//   }\n// })\n\nexport const fetchSelectedAssetData = async (assetID, ownerID) => {\n  if (!assetID || !ownerID) {\n    return;\n  }\n\n  ;\n  const settings = {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      id: assetID,\n      owner_id: ownerID\n    })\n  };\n\n  try {\n    const response = await fetch(`${API_URL}/assets/asset`, settings);\n    const asset = await response.json();\n    return asset;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const fetchSelectedUserData = async userID => {\n  if (!userID) {\n    return;\n  }\n\n  ;\n  const settings = {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      id: userID\n    })\n  };\n\n  try {\n    const response = await fetch(`${API_URL}/users/user`, settings);\n    const user = await response.json();\n    return user;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const checkInAsset = async (assetId, userID, owner, assetName, assetSerial, assetModel) => {\n  const settings = {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      id: assetId,\n      username: userID,\n      owner: owner,\n      assetName: assetName,\n      assetSerial: assetSerial,\n      assetModel: assetModel\n    })\n  };\n\n  try {\n    await fetch(`${API_URL}/assets/checkin`, settings);\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const checkOutAsset = async (assetID, userID, owner, assetName, assetSerial, assetModel) => {\n  const settings = {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      id: assetID,\n      username: userID,\n      owner: owner,\n      assetName: assetName,\n      assetSerial: assetSerial,\n      assetModel: assetModel\n    })\n  };\n\n  try {\n    await fetch(`${API_URL}/assets/checkout`, settings);\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const quarantineAsset = async (assetID, userID, owner, assetName, assetSerial, assetModel, comment) => {\n  const settings = {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      id: assetID,\n      username: userID,\n      owner: owner,\n      assetName: assetName,\n      assetSerial: assetSerial,\n      assetModel: assetModel,\n      comment: comment\n    })\n  };\n\n  try {\n    await fetch(`${API_URL}/assets/quarantine`, settings);\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const createNewUser = async (userId, fname, lname, memberId) => {\n  const settings = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      userid: userId,\n      fname: fname,\n      lname: lname,\n      memberId: memberId\n    })\n  };\n\n  try {\n    const response = await fetch(`${API_URL}/users/adduser`, settings);\n    const reply = await response.json();\n    return reply;\n  } catch (error) {\n    return error;\n  }\n};\nexport const createNewAsset = async (assetID, assetName, assetModel, assetSerial, memberId) => {\n  const settings = {\n    method: \"post\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      id: assetID,\n      name: assetName,\n      model: assetModel,\n      serial: assetSerial,\n      memberId: memberId\n    })\n  };\n\n  try {\n    const response = await fetch(`${API_URL}/assets/addasset`, settings);\n    const reply = await response.json();\n    return reply;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const removeAsset = async assetID => {\n  const settings = {\n    method: \"delete\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      id: assetID\n    })\n  };\n\n  try {\n    const response = await fetch(`${API_URL}/assets/removeasset`, settings);\n    const reply = await response.json();\n    return reply;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const fetchAllAssetsForDropDown = async dispatchData => {\n  const settings = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      memberId: dispatchData.payload\n    })\n  };\n\n  try {\n    const response = await fetch(`${API_URL}/assets/allunits`, settings);\n    const assetList = await response.json();\n    return assetList;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const fetchAllUsersForDropDown = async dispatchData => {\n  const settings = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      memberId: dispatchData.payload\n    })\n  };\n\n  try {\n    const response = await fetch(`${API_URL}/users/allusers`, settings);\n    const assetList = await response.json();\n    return assetList;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const fetchAllModelsForDropDown = async dispatchData => {\n  const settings = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      memberId: dispatchData.payload\n    })\n  };\n\n  try {\n    const response = await fetch(`${API_URL}/assets/allmodels`, settings);\n    const assetList = await response.json();\n    return assetList;\n  } catch (error) {\n    console.log(error);\n  }\n\n  ;\n};","map":{"version":3,"sources":["C:/Users/bryan.alvarez/Documents/webdev/git/lendit/lendit/src/services/api.js"],"names":["axios","API_URL","httpRegisterUser","fname","lname","email","password","method","url","data","httpSignInUser","fetchSelectedAssetData","assetID","ownerID","settings","headers","Accept","body","JSON","stringify","id","owner_id","response","fetch","asset","json","error","console","log","fetchSelectedUserData","userID","user","checkInAsset","assetId","owner","assetName","assetSerial","assetModel","username","checkOutAsset","quarantineAsset","comment","createNewUser","userId","memberId","userid","reply","createNewAsset","name","model","serial","removeAsset","fetchAllAssetsForDropDown","dispatchData","payload","assetList","fetchAllUsersForDropDown","fetchAllModelsForDropDown"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nexport const API_URL = 'https://lendit-api.herokuapp.com';\r\n\r\nexport function httpRegisterUser(fname, lname, email, password) {\r\n  axios({\r\n    method: 'post',\r\n    url: `${API_URL}/members/register`,\r\n    data:{\r\n        fname: fname,\r\n        lname: lname,\r\n        email: email,\r\n        password: password,\r\n        }\r\n  });  \r\n};\r\n\r\nexport function httpSignInUser(email, password) {\r\n  axios({\r\n    method: 'post',\r\n    url: `${API_URL}/members/signin`,\r\n    data:{\r\n        email: email,\r\n        password: password,\r\n        }\r\n  }); \r\n};\r\n\r\n// fetch(`${API_URL}/members/signin`, {\r\n//   method: \"post\",\r\n//   headers: { \"Content-Type\": \"application/json\" },\r\n//   body: JSON.stringify({\r\n//     email: email,\r\n//     password: password,\r\n//   }),\r\n// })\r\n// .then((response) => response.json())\r\n// .then((member) => {\r\n//   if (member.id) {\r\n//     signIn(member.id);\r\n//     history.push(\"/home\");\r\n//   } else{\r\n//     alert.show('Invalid credentials' , { type: \"error\" , position:\"top center\"})\r\n//   }\r\n// })\r\n\r\nexport const fetchSelectedAssetData = async (assetID, ownerID) => {\r\n  if (!assetID || !ownerID){\r\n    return;\r\n  };\r\n\r\n  const settings = {\r\n    method: \"POST\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({\r\n      id: assetID,\r\n      owner_id: ownerID\r\n    }),\r\n  };\r\n  try {\r\n    const response = await fetch(\r\n      `${API_URL}/assets/asset`,\r\n      settings\r\n    );\r\n    const asset = await response.json();\r\n    return asset;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const fetchSelectedUserData = async (userID) => {\r\n  if (!userID){\r\n    return;\r\n  };\r\n\r\n  const settings = {\r\n    method: \"POST\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({\r\n      id: userID,\r\n    }),\r\n  };\r\n  try {\r\n    const response = await fetch(\r\n      `${API_URL}/users/user`,\r\n      settings\r\n    );\r\n    const user = await response.json();\r\n    return user;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const checkInAsset = async ( assetId, userID, owner, assetName, assetSerial, assetModel) => {\r\n  const settings = {\r\n    method: \"POST\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({\r\n      id: assetId,\r\n      username: userID,\r\n      owner: owner,\r\n      assetName: assetName,\r\n      assetSerial: assetSerial,\r\n      assetModel: assetModel,\r\n    }),\r\n  };\r\n  try {\r\n    await fetch(`${API_URL}/assets/checkin`, settings);\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const checkOutAsset = async (assetID, userID, owner, assetName, assetSerial, assetModel) => {\r\n  const settings = {\r\n    method: \"POST\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({\r\n      id: assetID,\r\n      username: userID,\r\n      owner: owner,\r\n      assetName: assetName,\r\n      assetSerial: assetSerial,\r\n      assetModel: assetModel,\r\n    }),\r\n  };\r\n  try {\r\n    await fetch(`${API_URL}/assets/checkout`, settings);\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const quarantineAsset = async (assetID, userID, owner, assetName, assetSerial, assetModel, comment) => {\r\n  const settings = {\r\n    method: \"POST\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({\r\n      id: assetID,\r\n      username: userID,\r\n      owner: owner,\r\n      assetName: assetName,\r\n      assetSerial: assetSerial,\r\n      assetModel: assetModel,\r\n      comment: comment,\r\n    }),\r\n  };\r\n  try {\r\n    await fetch(`${API_URL}/assets/quarantine`, settings);\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const createNewUser = async (userId, fname, lname, memberId) => {\r\n  const settings = {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify({\r\n      userid: userId,\r\n      fname: fname,\r\n      lname: lname,\r\n      memberId: memberId,\r\n    }),\r\n  };\r\n  try {\r\n    const response = await fetch(\r\n      `${API_URL}/users/adduser`,\r\n      settings\r\n    );\r\n    const reply = await response.json();\r\n    return reply;\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nexport const createNewAsset = async (assetID, assetName, assetModel, assetSerial, memberId) => {\r\n  const settings = {\r\n    method: \"post\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify({\r\n      id: assetID,\r\n      name: assetName,\r\n      model: assetModel,\r\n      serial: assetSerial,\r\n      memberId: memberId,\r\n    }),\r\n  };\r\n  try {\r\n    const response = await fetch(\r\n      `${API_URL}/assets/addasset`,\r\n      settings\r\n    );\r\n    const reply = await response.json();\r\n    return reply;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const removeAsset = async (assetID) => {\r\n  const settings = {\r\n    method: \"delete\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify({\r\n      id: assetID,\r\n    }),\r\n  };\r\n  try {\r\n    const response = await fetch(\r\n      `${API_URL}/assets/removeasset`,\r\n      settings\r\n    );\r\n    const reply = await response.json();\r\n    return reply;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const fetchAllAssetsForDropDown = async (dispatchData) => {\r\n  const settings = {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify({\r\n      memberId: dispatchData.payload,\r\n    }),\r\n  };\r\n  try {\r\n    const response = await fetch(\r\n      `${API_URL}/assets/allunits`,\r\n      settings\r\n    );\r\n    const assetList = await response.json();\r\n    return assetList;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const fetchAllUsersForDropDown = async (dispatchData) => {\r\n  const settings = {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify({\r\n      memberId: dispatchData.payload,\r\n    }),\r\n  };\r\n  try {\r\n    const response = await fetch(\r\n      `${API_URL}/users/allusers`,\r\n      settings\r\n    );\r\n    const assetList = await response.json();\r\n    return assetList;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const fetchAllModelsForDropDown = async (dispatchData) => {\r\n  const settings = {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify({\r\n      memberId: dispatchData.payload,\r\n    }),\r\n  };\r\n  try {\r\n    const response = await fetch(\r\n      `${API_URL}/assets/allmodels`,\r\n      settings\r\n    );\r\n    const assetList = await response.json();\r\n    return assetList;\r\n  } catch (error) {\r\n    console.log(error);\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}