{"ast":null,"code":"import{combineReducers}from\"redux\";import storage from'redux-persist/lib/storage';import{persistReducer}from\"redux-persist\";import assetData from'./asset/asset-reducer';import userData from'./user/user-reducer';import dropDownOptions from'./drop-downs/drop-downs.reducer';import modalState from\"./modal/modal.reducer\";import memberState from\"./site-member/site-member.reducer\";var persistConfig={key:'root',blacklist:['userData'],storage:storage};var appReducer=combineReducers({assetData:assetData,userData:userData,modalState:modalState,dropDownOptions:dropDownOptions,memberState:memberState});var rootReducer=function rootReducer(state,action){if(action.type==='HANDLE_MEMBER_SIGN_OUT'){state=undefined;}return appReducer(state,action);};export default persistReducer(persistConfig,rootReducer);","map":{"version":3,"sources":["C:/Users/alvar/Documents/WebDev/lendit/lendit/src/redux/root-reducer.js"],"names":["combineReducers","storage","persistReducer","assetData","userData","dropDownOptions","modalState","memberState","persistConfig","key","blacklist","appReducer","rootReducer","state","action","type","undefined"],"mappings":"AAAA,OAASA,eAAT,KAAgC,OAAhC,CAEA,MAAOC,CAAAA,OAAP,KAAoB,2BAApB,CAEA,OAASC,cAAT,KAA+B,eAA/B,CAEA,MAAOC,CAAAA,SAAP,KAAsB,uBAAtB,CACA,MAAOC,CAAAA,QAAP,KAAqB,qBAArB,CACA,MAAOC,CAAAA,eAAP,KAA4B,iCAA5B,CACA,MAAOC,CAAAA,UAAP,KAAuB,uBAAvB,CACA,MAAOC,CAAAA,WAAP,KAAyB,mCAAzB,CAGA,GAAMC,CAAAA,aAAa,CAAG,CAClBC,GAAG,CAAE,MADa,CAElBC,SAAS,CAAE,CAAC,UAAD,CAFO,CAGlBT,OAAO,CAAPA,OAHkB,CAAtB,CAMA,GAAMU,CAAAA,UAAU,CAAGX,eAAe,CAAC,CAC/BG,SAAS,CAATA,SAD+B,CAE/BC,QAAQ,CAARA,QAF+B,CAG/BE,UAAU,CAAVA,UAH+B,CAI/BD,eAAe,CAAfA,eAJ+B,CAK/BE,WAAW,CAAXA,WAL+B,CAAD,CAAlC,CAQE,GAAMK,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,KAAD,CAAQC,MAAR,CAAmB,CACrC,GAAIA,MAAM,CAACC,IAAP,GAAgB,wBAApB,CAA8C,CAC5CF,KAAK,CAAGG,SAAR,CACD,CAED,MAAOL,CAAAA,UAAU,CAACE,KAAD,CAAQC,MAAR,CAAjB,CACD,CAND,CAQF,cAAeZ,CAAAA,cAAc,CAACM,aAAD,CAAgBI,WAAhB,CAA7B","sourcesContent":["import { combineReducers } from \"redux\";\r\n\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nimport { persistReducer } from \"redux-persist\";\r\n\r\nimport assetData from './asset/asset-reducer'\r\nimport userData from './user/user-reducer'\r\nimport dropDownOptions from './drop-downs/drop-downs.reducer'\r\nimport modalState from \"./modal/modal.reducer\";\r\nimport memberState  from \"./site-member/site-member.reducer\";\r\n\r\n\r\nconst persistConfig = {\r\n    key: 'root', \r\n    blacklist: ['userData'],\r\n    storage\r\n};\r\n\r\nconst appReducer = combineReducers({\r\n    assetData,\r\n    userData,\r\n    modalState,\r\n    dropDownOptions, \r\n    memberState\r\n  })\r\n  \r\n  const rootReducer = (state, action) => {\r\n    if (action.type === 'HANDLE_MEMBER_SIGN_OUT') {\r\n      state = undefined\r\n    }\r\n  \r\n    return appReducer(state, action)\r\n  }\r\n\r\nexport default persistReducer(persistConfig, rootReducer);"]},"metadata":{},"sourceType":"module"}