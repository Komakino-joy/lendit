{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\bryan.alvarez\\\\Documents\\\\webdev\\\\git\\\\comp-overload\\\\client\\\\src\\\\components\\\\pop-ups\\\\available-units.popup.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport useFetch from \"../../effects/use-fetch.effect\";\nimport { toggleAvailableUnits } from \"../../redux/pop-ups/pop-ups.actions\";\nimport './popup.scss';\n\nconst AvailableUnits = ({\n  assetList,\n  assetID,\n  assetName,\n  assetModel,\n  assetSerial,\n  toggleAvailableUnits\n}) => {\n  _s();\n\n  useFetch('http://localhost:3000/availableunits');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal_main\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal_report_content\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"close\",\n        onClick: toggleAvailableUnits,\n        children: \"\\xD7    \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Available Units\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \" pb4 \",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"overflow-auto\",\n            children: /*#__PURE__*/_jsxDEV(\"table\", {\n              className: \"f6 w-100 mw8 tc\",\n              cellSpacing: \"0\",\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  className: \"stripe-dark\",\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    className: \"fw6  pa3 bg-white\",\n                    children: \"Unit ID\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 22,\n                    columnNumber: 33\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    className: \"fw6  pa3 bg-white\",\n                    children: \"Unit Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 23,\n                    columnNumber: 33\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    className: \"fw6  pa3 bg-white\",\n                    children: \"Model\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 24,\n                    columnNumber: 33\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    className: \"fw6  pa3 bg-white\",\n                    children: \"Serial\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 25,\n                    columnNumber: 33\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 21,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 20,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                className: \"lh-copy\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 28,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 19,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 4\n  }, this);\n};\n\n_s(AvailableUnits, \"WM4OL7CqgzjgXHJL6SXd6kRTA8w=\", false, function () {\n  return [useFetch];\n});\n\n_c = AvailableUnits;\n\nconst mapStateToProps = state => ({\n  assetList: state.assetData,\n  assetID: state.assetData.id,\n  assetName: state.assetData.name,\n  assetModel: state.assetData.model,\n  assetSerial: state.assetData.serial,\n  seenAvailableUnits: state.popUpState.seenAvailableUnits\n});\n\nconst mapDispatchToProps = dispatch => ({\n  toggleAvailableUnits: () => dispatch(toggleAvailableUnits())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AvailableUnits);\n\nvar _c;\n\n$RefreshReg$(_c, \"AvailableUnits\");","map":{"version":3,"sources":["C:/Users/bryan.alvarez/Documents/webdev/git/comp-overload/client/src/components/pop-ups/available-units.popup.jsx"],"names":["React","connect","useFetch","toggleAvailableUnits","AvailableUnits","assetList","assetID","assetName","assetModel","assetSerial","mapStateToProps","state","assetData","id","name","model","serial","seenAvailableUnits","popUpState","mapDispatchToProps","dispatch"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,QAAP,MAAqB,gCAArB;AACA,SAASC,oBAAT,QAAqC,qCAArC;AACA,OAAO,cAAP;;AAEA,MAAMC,cAAc,GAAE,CAAC;AAACC,EAAAA,SAAD;AAAYC,EAAAA,OAAZ;AAAqBC,EAAAA,SAArB;AAAgCC,EAAAA,UAAhC;AAA4CC,EAAAA,WAA5C;AAAyDN,EAAAA;AAAzD,CAAD,KAAqF;AAAA;;AAEvGD,EAAAA,QAAQ,CAAC,sCAAD,CAAR;AAEF,sBACC;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,2BACK;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA,8BACI;AAAM,QAAA,SAAS,EAAC,OAAhB;AAAwB,QAAA,OAAO,EAAEC,oBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAK,UAAA,SAAS,EAAC,OAAf;AAAA,iCACI;AAAK,YAAA,SAAS,EAAC,eAAf;AAAA,mCACI;AAAO,cAAA,SAAS,EAAC,iBAAjB;AAAmC,cAAA,WAAW,EAAC,GAA/C;AAAA,sCACA;AAAA,uCACI;AAAI,kBAAA,SAAS,EAAC,aAAd;AAAA,0CACI;AAAI,oBAAA,SAAS,EAAC,mBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAEI;AAAI,oBAAA,SAAS,EAAC,mBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFJ,eAGI;AAAI,oBAAA,SAAS,EAAC,mBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAHJ,eAII;AAAI,oBAAA,SAAS,EAAC,mBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,sBADA,eASA;AAAO,gBAAA,SAAS,EAAC;AAAjB;AAAA;AAAA;AAAA;AAAA,sBATA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADL;AAAA;AAAA;AAAA;AAAA,UADD;AAoCD,CAxCD;;GAAMC,c;UAEFF,Q;;;KAFEE,c;;AA0CN,MAAMM,eAAe,GAAIC,KAAD,KAAY;AAChCN,EAAAA,SAAS,EAAEM,KAAK,CAACC,SADe;AAEhCN,EAAAA,OAAO,EAAEK,KAAK,CAACC,SAAN,CAAgBC,EAFO;AAGhCN,EAAAA,SAAS,EAAEI,KAAK,CAACC,SAAN,CAAgBE,IAHK;AAIhCN,EAAAA,UAAU,EAAEG,KAAK,CAACC,SAAN,CAAgBG,KAJI;AAKhCN,EAAAA,WAAW,EAAEE,KAAK,CAACC,SAAN,CAAgBI,MALG;AAMhCC,EAAAA,kBAAkB,EAAEN,KAAK,CAACO,UAAN,CAAiBD;AANL,CAAZ,CAAxB;;AASA,MAAME,kBAAkB,GAAGC,QAAQ,KAAK;AACpCjB,EAAAA,oBAAoB,EAAE,MAAMiB,QAAQ,CAACjB,oBAAoB,EAArB;AADA,CAAL,CAAnC;;AAKA,eAAeF,OAAO,CAACS,eAAD,EAAkBS,kBAAlB,CAAP,CAA6Cf,cAA7C,CAAf","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport useFetch from \"../../effects/use-fetch.effect\";\r\nimport { toggleAvailableUnits } from \"../../redux/pop-ups/pop-ups.actions\";\r\nimport './popup.scss'\r\n\r\nconst AvailableUnits =({assetList, assetID, assetName, assetModel, assetSerial, toggleAvailableUnits }) => {\r\n    \r\n    useFetch('http://localhost:3000/availableunits')\r\n\r\n  return (\r\n   <div className=\"modal_main\">\r\n        <div className=\"modal_report_content\">\r\n            <span className=\"close\" onClick={toggleAvailableUnits}>&times;    </span>\r\n            <div className='container'>\r\n                <h1>Available Units</h1>\r\n                <div className=\" pb4 \">\r\n                    <div className=\"overflow-auto\">\r\n                        <table className=\"f6 w-100 mw8 tc\" cellSpacing=\"0\">\r\n                        <thead>\r\n                            <tr className=\"stripe-dark\" >\r\n                                <th className=\"fw6  pa3 bg-white\">Unit ID</th>\r\n                                <th className=\"fw6  pa3 bg-white\">Unit Name</th>\r\n                                <th className=\"fw6  pa3 bg-white\">Model</th>\r\n                                <th className=\"fw6  pa3 bg-white\">Serial</th> \r\n                            </tr>\r\n                        </thead>\r\n                        <tbody className=\"lh-copy\">\r\n        \r\n                        {/* {assetList.map((unit =>\r\n                            <tr key={assetID} className=\"stripe-dark\">\r\n                                <td >{assetID}</td>\r\n                                <td >{assetName}</td>\r\n                                <td >{assetModel}</td>\r\n                                <td >{assetSerial}</td>\r\n                            </tr>\r\n                            ))} */}\r\n                            \r\n                        </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n   </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    assetList: state.assetData,\r\n    assetID: state.assetData.id,\r\n    assetName: state.assetData.name,\r\n    assetModel: state.assetData.model,\r\n    assetSerial: state.assetData.serial,\r\n    seenAvailableUnits: state.popUpState.seenAvailableUnits\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    toggleAvailableUnits: () => dispatch(toggleAvailableUnits())\r\n  });\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AvailableUnits);"]},"metadata":{},"sourceType":"module"}