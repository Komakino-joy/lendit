{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\bryan.alvarez\\\\Documents\\\\webdev\\\\git\\\\comp-overload\\\\client\\\\src\\\\components\\\\custom-drop-down\\\\asset-drop-down.component.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { DropDownContainer, DropDown } from \"./drop-down.styles\";\nimport { requestAssetDropDownOptions } from '../../redux/drop-downs/drop-down.actions';\n\nconst AssetDropDown = ({\n  getAssetOptions,\n  assets,\n  memberId\n}) => {\n  _s();\n\n  useEffect(() => {\n    // Get Data from /allunits.\n    getAssetOptions(memberId);\n  }, [getAssetOptions, memberId]); //\n\n  return /*#__PURE__*/_jsxDEV(DropDownContainer, {\n    autoFocus: true,\n    children: /*#__PURE__*/_jsxDEV(DropDown, {\n      id: \"asset-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        text: \" \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this), assets ? assets.map(asset => /*#__PURE__*/_jsxDEV(\"option\", {\n        children: [\" \", asset.id, \" \"]\n      }, asset.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 21\n      }, this)) : /*#__PURE__*/_jsxDEV(\"option\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AssetDropDown, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = AssetDropDown;\n\nconst mapDispatchToProps = dispatch => ({\n  getAssetOptions: memberId => {\n    dispatch(requestAssetDropDownOptions(memberId));\n  }\n});\n\nexport default connect(null, mapDispatchToProps)(AssetDropDown);\n\nvar _c;\n\n$RefreshReg$(_c, \"AssetDropDown\");","map":{"version":3,"sources":["C:/Users/bryan.alvarez/Documents/webdev/git/comp-overload/client/src/components/custom-drop-down/asset-drop-down.component.jsx"],"names":["React","useEffect","connect","DropDownContainer","DropDown","requestAssetDropDownOptions","AssetDropDown","getAssetOptions","assets","memberId","map","asset","id","mapDispatchToProps","dispatch"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,iBAAT,EAA4BC,QAA5B,QAA4C,oBAA5C;AAEA,SAASC,2BAAT,QAA4C,0CAA5C;;AAEA,MAAMC,aAAa,GAAE,CAAC;AAACC,EAAAA,eAAD;AAAkBC,EAAAA,MAAlB;AAA0BC,EAAAA;AAA1B,CAAD,KAA0C;AAAA;;AAE3DR,EAAAA,SAAS,CAAC,MAAM;AACZ;AACAM,IAAAA,eAAe,CAACE,QAAD,CAAf;AACD,GAHM,EAGJ,CAACF,eAAD,EAAkBE,QAAlB,CAHI,CAAT,CAF2D,CAKxB;;AAEnC,sBACI,QAAC,iBAAD;AAAmB,IAAA,SAAS,MAA5B;AAAA,2BACI,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC,YAAb;AAAA,8BACI;AAAQ,QAAA,IAAI,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,cADJ,EAGQD,MAAM,GACFA,MAAM,CAACE,GAAP,CAAWC,KAAK,iBACpB;AAAA,wBAA4BA,KAAK,CAACC,EAAlC;AAAA,SAAcD,KAAK,CAACC,EAApB;AAAA;AAAA;AAAA;AAAA,cADI,CADE,gBAKN;AAAA;AAAA;AAAA;AAAA,cARR;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH,CAvBD;;GAAMN,a;;KAAAA,a;;AAyBN,MAAMO,kBAAkB,GAAIC,QAAD,KAAe;AACtCP,EAAAA,eAAe,EAAGE,QAAD,IAAc;AAAEK,IAAAA,QAAQ,CAACT,2BAA2B,CAACI,QAAD,CAA5B,CAAR;AAAgD;AAD3C,CAAf,CAA3B;;AAMA,eAAeP,OAAO,CAAC,IAAD,EAAOW,kBAAP,CAAP,CAAkCP,aAAlC,CAAf","sourcesContent":["import React, {useEffect} from 'react'\r\nimport { connect } from 'react-redux';\r\n\r\nimport { DropDownContainer, DropDown } from \"./drop-down.styles\";\r\n\r\nimport { requestAssetDropDownOptions } from '../../redux/drop-downs/drop-down.actions'\r\n\r\nconst AssetDropDown =({getAssetOptions, assets, memberId }) => {\r\n\r\n    useEffect(() => {\r\n        // Get Data from /allunits.\r\n        getAssetOptions(memberId)\r\n      }, [getAssetOptions, memberId]); //\r\n    \r\n    return(\r\n        <DropDownContainer autoFocus>\r\n            <DropDown id=\"asset-list\" >\r\n                <option text=' '/>\r\n                {   \r\n                    assets ? (\r\n                        assets.map(asset => (\r\n                    <option key={ asset.id }> { asset.id } </option> \r\n                    ))\r\n                    ):(\r\n                    <option></option>\r\n                    )\r\n                }\r\n            </DropDown>\r\n        </DropDownContainer>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    getAssetOptions: (memberId) => { dispatch(requestAssetDropDownOptions(memberId))}\r\n})\r\n\r\n\r\n\r\nexport default connect(null, mapDispatchToProps)(AssetDropDown);\r\n"]},"metadata":{},"sourceType":"module"}