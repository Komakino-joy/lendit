{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\"; // loadOptions function will take an array and create an option within out drop down, based off the array's id prop\n\nconst loadOptions = (dropDownOptions, listName) => {\n  const input = document.getElementById(`${listName}`);\n\n  for (var i = 0; i < dropDownOptions.length; i++) {\n    var option = document.createElement(\"option\");\n    option.value = dropDownOptions[i].id;\n    option.text = dropDownOptions[i].id;\n    input.appendChild(option);\n  }\n}; // pass in our url for the API call and the id of the html list that we want to target in our .jsx file. \n\n\nconst useFetch = (url, listId) => {\n  _s();\n\n  const [data] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      const res = await fetch(url);\n      const dataArray = await res.json();\n      loadOptions(dataArray, `${listId}`);\n      console.log('Fetch Mounted');\n      console.log(dataArray[0].id);\n    };\n\n    fetchData();\n  }, [url, listId]);\n  return data;\n};\n\n_s(useFetch, \"rdKjuWn/F2Nt4zbeJ2FJWYsp18I=\");\n\nexport default useFetch;","map":{"version":3,"sources":["C:/Users/alvar/Documents/WebDev/comp-overload/src/effects/use-fetch.effect.js"],"names":["useState","useEffect","loadOptions","dropDownOptions","listName","input","document","getElementById","i","length","option","createElement","value","id","text","appendChild","useFetch","url","listId","data","fetchData","res","fetch","dataArray","json","console","log"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC,C,CAEA;;AACA,MAAMC,WAAW,GAAG,CAACC,eAAD,EAAkBC,QAAlB,KAA+B;AAC/C,QAAMC,KAAK,GAAGC,QAAQ,CAACC,cAAT,CAAyB,GAAEH,QAAS,EAApC,CAAd;;AAEA,OAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,eAAe,CAACM,MAApC,EAA4CD,CAAC,EAA7C,EAAiD;AAC7C,QAAIE,MAAM,GAAGJ,QAAQ,CAACK,aAAT,CAAuB,QAAvB,CAAb;AACAD,IAAAA,MAAM,CAACE,KAAP,GAAeT,eAAe,CAACK,CAAD,CAAf,CAAmBK,EAAlC;AACAH,IAAAA,MAAM,CAACI,IAAP,GAAcX,eAAe,CAACK,CAAD,CAAf,CAAmBK,EAAjC;AACAR,IAAAA,KAAK,CAACU,WAAN,CAAkBL,MAAlB;AACH;AACJ,CATD,C,CAWA;;;AACA,MAAMM,QAAQ,GAAG,CAACC,GAAD,EAAMC,MAAN,KAAiB;AAAA;;AAC9B,QAAM,CAACC,IAAD,IAASnB,QAAQ,CAAC,IAAD,CAAvB;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMmB,SAAS,GAAG,YAAY;AAC1B,YAAMC,GAAG,GAAG,MAAMC,KAAK,CAACL,GAAD,CAAvB;AACA,YAAMM,SAAS,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAxB;AACAtB,MAAAA,WAAW,CAACqB,SAAD,EAAa,GAAEL,MAAO,EAAtB,CAAX;AACAO,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYH,SAAS,CAAC,CAAD,CAAT,CAAaV,EAAzB;AACH,KAND;;AAQAO,IAAAA,SAAS;AACZ,GAVQ,EAUN,CAACH,GAAD,EAAMC,MAAN,CAVM,CAAT;AAYA,SAAOC,IAAP;AACH,CAhBD;;GAAMH,Q;;AAkBN,eAAeA,QAAf","sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\n// loadOptions function will take an array and create an option within out drop down, based off the array's id prop\r\nconst loadOptions = (dropDownOptions, listName) => {\r\n    const input = document.getElementById(`${listName}`)\r\n\r\n    for (var i = 0; i < dropDownOptions.length; i++) {\r\n        var option = document.createElement(\"option\");\r\n        option.value = dropDownOptions[i].id;\r\n        option.text = dropDownOptions[i].id;\r\n        input.appendChild(option);\r\n    }\r\n};\r\n\r\n// pass in our url for the API call and the id of the html list that we want to target in our .jsx file. \r\nconst useFetch = (url, listId) => {\r\n    const [data] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const res = await fetch(url);\r\n            const dataArray = await res.json();\r\n            loadOptions(dataArray, `${listId}`)\r\n            console.log('Fetch Mounted')\r\n            console.log(dataArray[0].id)\r\n        };\r\n\r\n        fetchData();\r\n    }, [url, listId] );\r\n\r\n    return data;\r\n};\r\n\r\nexport default useFetch;\r\n\r\n"]},"metadata":{},"sourceType":"module"}