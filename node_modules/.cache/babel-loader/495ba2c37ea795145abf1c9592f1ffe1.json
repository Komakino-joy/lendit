{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\bryan.alvarez\\\\Documents\\\\webdev\\\\git\\\\comp-overload\\\\client\\\\src\\\\components\\\\modals\\\\add-unit.modal.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useAlert } from 'react-alert';\nimport { connect } from 'react-redux';\nimport AddModel from './add-model.modal';\nimport ModelDropDown from '../custom-drop-down/model-drop-down.component';\nimport { createNewAsset } from \"../../services/api\";\nimport { toggleAddModel, toggleAddUnit } from \"../../redux/pop-ups/pop-ups.actions\";\nimport { requestAssetDropDownOptions, requestModelDropDownOptions } from '../../redux/drop-downs/drop-down.actions';\nimport { ModalMain, ModalContent, CloseButton, Header, Article, FieldSet, Label, Input, SelectModel, AddModelButton, Submit } from \"./modal.styles\";\n\nconst AddUnit = ({\n  toggleAddUnit,\n  toggleAddModel,\n  seenAddModel,\n  getAssetOptions,\n  getModelOptions,\n  models,\n  memberId\n}) => {\n  _s();\n\n  const alert = useAlert();\n  useEffect(() => {\n    getModelOptions(memberId);\n  }, [getModelOptions, memberId]);\n  let [assetID, setAssetID] = useState('');\n  let [assetName, setAssetName] = useState('');\n  let [assetModel, setAssetModel] = useState([]);\n  let [assetSerial, setAssetSerial] = useState('');\n\n  const onAssetidChange = event => {\n    setAssetID(event.target.value);\n  };\n\n  const onAssetNameChange = event => {\n    setAssetName(event.target.value);\n  };\n\n  const onAssetModelChange = event => {\n    setAssetModel(event.target.value);\n  };\n\n  const onAssetSerialChange = event => {\n    setAssetSerial(event.target.value);\n  };\n\n  const inputReset = () => {\n    assetID = null;\n    assetName = null;\n    assetSerial = null;\n    document.getElementById('asset-id').value = '';\n    document.getElementById('asset-name').value = '';\n    document.getElementById('asset-serial').value = '';\n    document.getElementById('asset-model').value = 'Select A Model';\n    document.getElementById('asset-id').focus();\n  };\n\n  const submitAsset = event => {\n    if (assetID && assetName && assetSerial && assetModel.length && assetModel !== 'Select a model') {\n      createNewAsset(assetID, assetName, assetModel, assetSerial, memberId);\n      alert.show(`${assetID} submitted`, {\n        type: 'success',\n        position: 'top center'\n      });\n      inputReset();\n    } else {\n      alert.show('Please ensure that all fields are filled out and model is selected.', {\n        type: 'error',\n        position: 'top center'\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(ModalMain, {\n    children: [/*#__PURE__*/_jsxDEV(ModalContent, {\n      children: [/*#__PURE__*/_jsxDEV(CloseButton, {\n        onClick: () => {\n          toggleAddUnit();\n          getAssetOptions(memberId);\n        },\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Header, {\n        children: \"Add Asset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Article, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          action: \"sign-up_submit\",\n          method: \"get\",\n          acceptCharset: \"utf-8\",\n          children: [/*#__PURE__*/_jsxDEV(FieldSet, {\n            id: \"sign_up\",\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              htmlFor: \"asset-id\",\n              children: \"Asset ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              onChange: onAssetidChange,\n              type: \"text\",\n              name: \"asset-id\",\n              id: \"asset-id\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Label, {\n              htmlFor: \"asset-name\",\n              children: \"Asset Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              onChange: onAssetNameChange,\n              type: \"text\",\n              name: \"asset-name\",\n              id: \"asset-name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Label, {\n              htmlFor: \"asset-model\",\n              children: \"Model\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ModelDropDown, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(AddModelButton, {\n              onClick: toggleAddModel,\n              children: \"Add New Model\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Label, {\n              htmlFor: \"asset-serial\",\n              children: \"Serial Number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              onChange: onAssetSerialChange,\n              type: \"text\",\n              name: \"asset-serial\",\n              id: \"asset-serial\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Submit, {\n            type: \"Submit\",\n            defaultValue: \"Submit\",\n            onClick: () => submitAsset()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), seenAddModel ? /*#__PURE__*/_jsxDEV(AddModel, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 23\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 4\n  }, this);\n};\n\n_s(AddUnit, \"guX99UeqMDHHCX3OQJGIpgiZfuI=\", false, function () {\n  return [useAlert];\n});\n\n_c = AddUnit;\n\nconst mapStateToProps = state => ({\n  memberId: state.memberState.memberId,\n  models: state.dropDownOptions.modelDropDown,\n  seenAddModel: state.modalState.seenAddModel\n});\n\nconst mapDispatchToProps = dispatch => ({\n  toggleAddUnit: () => {\n    dispatch(toggleAddUnit());\n  },\n  toggleAddModel: () => {\n    dispatch(toggleAddModel());\n  },\n  getAssetOptions: memberId => {\n    dispatch(requestAssetDropDownOptions(memberId));\n  },\n  getModelOptions: memberId => {\n    dispatch(requestModelDropDownOptions(memberId));\n  }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddUnit);\n\nvar _c;\n\n$RefreshReg$(_c, \"AddUnit\");","map":{"version":3,"sources":["C:/Users/bryan.alvarez/Documents/webdev/git/comp-overload/client/src/components/modals/add-unit.modal.jsx"],"names":["React","useState","useEffect","useAlert","connect","AddModel","ModelDropDown","createNewAsset","toggleAddModel","toggleAddUnit","requestAssetDropDownOptions","requestModelDropDownOptions","ModalMain","ModalContent","CloseButton","Header","Article","FieldSet","Label","Input","SelectModel","AddModelButton","Submit","AddUnit","seenAddModel","getAssetOptions","getModelOptions","models","memberId","alert","assetID","setAssetID","assetName","setAssetName","assetModel","setAssetModel","assetSerial","setAssetSerial","onAssetidChange","event","target","value","onAssetNameChange","onAssetModelChange","onAssetSerialChange","inputReset","document","getElementById","focus","submitAsset","length","show","type","position","mapStateToProps","state","memberState","dropDownOptions","modelDropDown","modalState","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useAlert } from 'react-alert';\r\nimport {connect} from 'react-redux';\r\n\r\nimport AddModel from './add-model.modal';\r\nimport ModelDropDown from '../custom-drop-down/model-drop-down.component'\r\nimport { createNewAsset } from \"../../services/api\";\r\nimport { toggleAddModel, toggleAddUnit } from \"../../redux/pop-ups/pop-ups.actions\";\r\nimport { requestAssetDropDownOptions, requestModelDropDownOptions } from '../../redux/drop-downs/drop-down.actions';\r\n\r\nimport { ModalMain, ModalContent, CloseButton, Header, Article,\r\n        FieldSet, Label, Input, SelectModel, AddModelButton, Submit\r\n} from \"./modal.styles\";\r\n\r\nconst AddUnit = ( {toggleAddUnit, toggleAddModel, seenAddModel, getAssetOptions, getModelOptions, models, memberId}) => {\r\n\r\n  const alert = useAlert();\r\n\r\n  useEffect(() => {\r\n    getModelOptions(memberId);\r\n  }, [getModelOptions, memberId]);\r\n\r\n  let [assetID,     setAssetID    ] = useState('');\r\n  let [assetName,   setAssetName  ] = useState('');\r\n  let [assetModel,  setAssetModel ] = useState([]);\r\n  let [assetSerial, setAssetSerial] = useState('');\r\n\r\n  const onAssetidChange = (event) => {\r\n    setAssetID(event.target.value); \r\n  };\r\n\r\n  const onAssetNameChange = (event) => {\r\n    setAssetName(event.target.value);\r\n  };\r\n\r\n  const onAssetModelChange = (event) => {\r\n    setAssetModel(event.target.value);\r\n  };\r\n\r\n const onAssetSerialChange = (event) => {\r\n    setAssetSerial(event.target.value);\r\n  };\r\n\r\n  const inputReset = () => {\r\n    assetID = null;\r\n    assetName = null;\r\n    assetSerial = null;\r\n    document.getElementById('asset-id').value = '';\r\n    document.getElementById('asset-name').value = '';\r\n    document.getElementById('asset-serial').value = '';\r\n    document.getElementById('asset-model').value = 'Select A Model';\r\n    document.getElementById('asset-id').focus();\r\n  };\r\n\r\n  const submitAsset = (event) => {\r\n    if (assetID && assetName && assetSerial && assetModel.length && assetModel !== 'Select a model'){\r\n      createNewAsset(assetID, assetName, assetModel, assetSerial, memberId);\r\n      alert.show(`${assetID} submitted`, {type: 'success', position:'top center'});\r\n      inputReset();\r\n    } else {\r\n      alert.show('Please ensure that all fields are filled out and model is selected.', {type: 'error', position:'top center'});\r\n    }\r\n  };\r\n  \r\n  return (\r\n   <ModalMain>\r\n      <ModalContent>\r\n        {/* Retrieve updated list of assets when modal is closed. */}\r\n        <CloseButton onClick={() => {toggleAddUnit(); getAssetOptions(memberId);}}>&times;</CloseButton>\r\n        <Header>Add Asset</Header>\r\n        <Article>\r\n          <div action=\"sign-up_submit\" method=\"get\" acceptCharset=\"utf-8\">\r\n            <FieldSet id=\"sign_up\">\r\n                <Label htmlFor=\"asset-id\">Asset ID</Label>\r\n                <Input onChange={onAssetidChange} type=\"text\" name=\"asset-id\"  id=\"asset-id\"/>\r\n                <Label htmlFor=\"asset-name\">Asset Name</Label>\r\n                <Input onChange={onAssetNameChange} type=\"text\" name=\"asset-name\"  id=\"asset-name\"/>\r\n                <Label htmlFor=\"asset-model\">Model</Label>\r\n                {/* <SelectModel onChange={onAssetModelChange} type=\"text\" name=\"asset-model\" id=\"asset-model\">\r\n                  <option>Select a model</option>\r\n                  {   \r\n                    models ? (\r\n                      models.map(model => (\r\n                        <option key={ model.model_name }> { model.model_name } </option> \r\n                      ))\r\n                      ):(\r\n                        <option></option>\r\n                      )\r\n                  }\r\n                </SelectModel>  */}\r\n                <ModelDropDown />\r\n                <AddModelButton onClick={toggleAddModel}>Add New Model</AddModelButton>\r\n                <Label htmlFor=\"asset-serial\">Serial Number</Label>\r\n                <Input onChange={onAssetSerialChange} type=\"text\" name=\"asset-serial\"  id=\"asset-serial\"/>\r\n            </FieldSet>\r\n            <Submit type = \"Submit\" defaultValue=\"Submit\" onClick={() => submitAsset()} />\r\n          </div>\r\n        </Article>\r\n      </ModalContent>\r\n      {seenAddModel ? <AddModel/> : null}\r\n   </ModalMain>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  memberId: state.memberState.memberId,\r\n  models: state.dropDownOptions.modelDropDown,\r\n  seenAddModel : state.modalState.seenAddModel\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    toggleAddUnit   : () => {dispatch(toggleAddUnit())},\r\n    toggleAddModel  : () => {dispatch(toggleAddModel())},\r\n    getAssetOptions : (memberId) => { dispatch(requestAssetDropDownOptions(memberId))},\r\n    getModelOptions : (memberId) => { dispatch(requestModelDropDownOptions(memberId))}\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddUnit);"]},"metadata":{},"sourceType":"module"}