{"version":3,"sources":["redux/modal/modal.selectors.js","redux/user/user.selectors.js","redux/asset/asset.selectors.js","images/default.svg","components/custom-button/custom-button.styles.jsx","components/custom-button/custom-button.component.jsx","components/asset-container/asset-container.styles.jsx","components/asset-container/asset-container.component.jsx","redux/drop-downs/drop-down.selectors.js","redux/modal/modal.actions.js","components/modals/modal.styles.jsx","components/modals/add-model.modal.jsx","components/custom-drop-down/drop-down.styles.jsx","components/custom-drop-down/custom-drop-down.component.jsx","components/modals/add-asset.modal.jsx","components/modals/add-user.modal.jsx","components/modals/assets-in-use.modal.jsx","components/action-panel/action-panel.styles.jsx","components/action-panel/action-panel.component.jsx","components/modals/available-assets.modal.jsx","components/custom-drop-down/drop-down.utils.js","components/drop-down-container/drop-down-container.styles.jsx","components/drop-down-container/drop-down-container.component.jsx","components/modals/quarantined-assets.modal.jsx","components/modals/activity-report.modal.jsx","components/modals/activity-tracking.modal.jsx","pages/homepage/homepage.styles.jsx","pages/homepage/homepage.component.jsx"],"names":["selectModal","state","modalState","seenActivityReport","createSelector","seenActivityParameters","seenAddAsset","seenAddUser","seenAvailableAssets","seenAssetsInUse","seenQuarantinedAssets","seenAddModel","selectUser","userData","userId","id","fname","lname","owner_id","selectAsset","assetData","assetId","assetName","name","assetStatus","status","assetSerial","serial","assetModel","model","assetComments","comments","assetImage","image","checkInButtonStyles","css","checkOutButtonStyles","submitButtonStyles","CustomButtonContainer","styled","button","props","isCheckIn","isCheckOut","isSubmit","CustomButton","children","AssetContainer","div","AssetInnerContainer","Header","AssetName","header","AssetSerial","span","RemoveButton","AssetImage","img","ImageContainer","ButtonContainer","Footer","Instructions","ReasonBox","textarea","availableStatusStyles","inUseStatusStyles","quarantineStatusStyles","AssetStatus","isAvailable","isInUse","isQurantined","mapStateToProps","createStructuredSelector","currentMemberId","connect","dispatch","checkInSelectedAssetStart","checkOutSelectedAssetStart","quarantineSelectedAssetStart","removeSelectedAssetStart","alert","useAlert","preventDragHandler","event","preventDefault","toUpperCase","onClick","confirmAlert","title","message","buttons","label","show","type","src","alt","onDragStart","slice","document","getElementById","focus","onChange","target","value","placeholder","defaultImg","selectDropDown","dropDownOptions","selectAssets","assetDropDown","selectUsers","userDropDown","selectModels","modelDropDown","toggleAvailableUnits","ModalActionTypes","TOGGLE_AVAILABLE_UNITS","toggleUnitsInUse","TOGGLE_UNITS_IN_USE","toggleQuarantinedUnits","TOGGLE_QUARANTINED_UNITS","toggleAddUser","TOGGLE_ADD_USER","toggleAddUnit","TOGGLE_ADD_UNIT","toggleAddModel","TOGGLE_ADD_MODEL","toggleActvityTracking","TOGGLE_ACTIVITY_TRACKING","toggleActvityReport","TOGGLE_ACTIVITY_REPORT","h1","ModalMain","ModalContent","ModalReportContent","SubModalMain","SubModalContent","CloseButton","Article","article","FieldSet","fieldset","Label","inputStyles","Input","input","SubModalInput","submitButton","Submit","AddModelSubmit","ActivitySubmit","AddModelButton","p","TableContainer","Table","table","TableRow","tr","TableHeading","th","TableBody","tbody","ModalDate","DatePicker","memberId","getModelOptions","requestModelDropDownOptions","useState","setModel","action","method","acceptCharset","className","encType","accept","defaultValue","file","querySelector","files","reader","FileReader","readAsDataURL","onload","imgElement","createElement","result","e","canvas","width","scaleSize","height","ctx","getContext","drawImage","srcEncoded","toDataURL","axios","url","data","position","dropdownStyles","homePageDropDownContainer","modelDropDownContainer","activityDropDownContainer","DropDownContainer","isHomePage","isModelSelection","isActivitySelection","DropDown","select","CustomDropDown","optionList","autoFocus","map","option","text","models","getAssetOptions","requestAssetDropDownOptions","useEffect","assetID","setAssetID","setAssetName","setAssetModel","setAssetSerial","submitAsset","length","httpCreateNewAsset","defaultOption","getUserOptions","requestUserDropDownOptions","userID","setUserID","setFname","setLname","submitUser","httpCreateNewUser","setData","a","fetchData","cellSpacing","unit","Math","floor","Date","now","parse","last_checkout","color","style","top","left","margin","mediaQuery","ActionPanelContainer","ActionPanelInnerContainer","ActionHeader","ReportLink","selectedListItemID","dropDownListName","node","options","selectedIndex","DropDownInner","Tag","assets","users","requestSelectedAssetData","ownerId","requestSelectedUserData","startDate","endDate","username","user_id","asset_id","asset_name","asset_serial","model_name","action_dttm","toLocaleString","setHours","setMinutes","setStartDate","setEndDate","htmlFor","selected","timeInputLabel","dateFormat","showTimeInput","filterTime","time","currentDate","selectedDate","getTime","date","fixedHeight","HomepageContainer"],"mappings":"6JAEMA,EAAc,SAAAC,GAAK,OAAIA,EAAMC,YAEtBC,EAAqBC,YAC9B,CAACJ,IACD,SAAEE,GAAF,OAAkBA,EAAWC,sBAGpBE,EAAwBD,YACjC,CAACJ,IACD,SAAEE,GAAF,OAAkBA,EAAWG,0BAGpBC,EAAcF,YACvB,CAACJ,IACD,SAAEE,GAAF,OAAkBA,EAAWI,gBAGpBC,EAAcH,YACvB,CAACJ,IACD,SAAEE,GAAF,OAAkBA,EAAWK,eAGpBC,EAAsBJ,YAC/B,CAACJ,IACD,SAAEE,GAAF,OAAkBA,EAAWM,uBAGpBC,EAAiBL,YAC1B,CAACJ,IACD,SAAEE,GAAF,OAAkBA,EAAWO,mBAGpBC,EAAwBN,YACjC,CAACJ,IACD,SAAEE,GAAF,OAAkBA,EAAWQ,yBAGpBC,EAAeP,YACxB,CAACJ,IACD,SAAEE,GAAF,OAAkBA,EAAWS,gB,eCvC3BC,EAAa,SAAAX,GAAK,OAAIA,EAAMY,UAErBC,EAASV,YAClB,CAACQ,IACD,SAAEC,GAAF,OAAgBA,EAASE,M,GAGJX,YACrB,CAACQ,IACD,SAAEC,GAAF,OAAgBA,EAASG,SAGJZ,YACrB,CAACQ,IACD,SAAEC,GAAF,OAAgBA,EAASI,SAGFb,YACvB,CAACQ,IACD,SAAEC,GAAF,OAAgBA,EAASK,Y,OCnBvBC,EAAc,SAAAlB,GAAK,OAAIA,EAAMmB,WAEtBC,EAAUjB,YACnB,CAACe,IACD,SAAEC,GAAF,OAAiBA,EAAUL,MAGlBO,EAAYlB,YACrB,CAACe,IACD,SAAEC,GAAF,OAAiBA,EAAUG,QAGlBC,EAAcpB,YACvB,CAACe,IACD,SAAEC,GAAF,OAAiBA,EAAUK,UAGlBC,EAActB,YACvB,CAACe,IACD,SAAEC,GAAF,OAAiBA,EAAUO,UAGlBC,EAAaxB,YACtB,CAACe,IACD,SAAEC,GAAF,OAAiBA,EAAUS,SAGlBC,EAAgB1B,YACzB,CAACe,IACD,SAAEC,GAAF,OAAiBA,EAAUW,YAQlBC,GALe5B,YACxB,CAACe,IACD,SAAEC,GAAF,OAAiBA,EAAUF,YAGLd,YACtB,CAACe,IACD,SAAEC,GAAF,OAAiBA,EAAUa,U,iBCzChB,MAA0B,oC,uhCCEzC,IAAMC,EAAsBC,YAAH,KAInBC,EAAuBD,YAAH,KAIpBE,EAAqBF,YAAH,KAqBXG,EAAwBC,IAAOC,OAAV,KAdV,SAACC,GACrB,OAAIA,EAAMC,UACCR,EAGPO,EAAME,WACCP,EAGPK,EAAMG,SACCP,OADX,KClBWQ,EAJM,SAAC,GAAD,IAAEC,EAAF,EAAEA,SAAaL,EAAf,mCACb,cAACH,EAAD,2BAA2BG,GAA3B,aAAmCK,M,woHCHpC,IAAMC,GAAiBR,IAAOS,IAAV,MAcdC,GAAsBV,IAAOS,IAAV,MAiBnBE,GAASX,IAAOS,IAAV,MAKNG,GAAYZ,IAAOa,OAAV,MASTC,GAAcd,IAAOe,KAAV,MAWXC,GAAehB,IAAOC,OAAV,MAYZgB,GAAajB,IAAOkB,IAAV,KAQVC,GAAiBnB,IAAOS,IAAV,IAadO,IASAI,GAAkBpB,IAAOS,IAAV,KAMfY,GAASrB,IAAOS,IAAV,KAaNa,GAAetB,IAAOS,IAAV,KAQZc,GAAYvB,IAAOwB,SAAV,KAehBC,GAAwB7B,YAAH,KAIrB8B,GAAoB9B,YAAH,KAIjB+B,GAAyB/B,YAAH,KAkBfgC,GAAc5B,IAAOe,KAAV,KAdA,SAACb,GACrB,OAAIA,EAAM2B,YACCJ,GAGPvB,EAAM4B,QACCJ,GAGPxB,EAAM6B,aACCJ,QADX,KCaEK,I,OAAkBC,YAAyB,CAC/CC,oBACA3D,SACAO,UACAC,YACAU,aACAR,cACAE,cACAI,gBACAF,gBAUa8C,eAAQH,IAPI,SAACI,GAAD,MAAe,CACxCC,0BAA2B,SAACxD,GAAeuD,EAASC,YAA0B,eAAIxD,MAClFyD,2BAA4B,SAACzD,GAAeuD,EAASE,YAA2B,eAAIzD,MACpF0D,6BAA8B,SAAC1D,GAAeuD,EAASG,YAA6B,eAAI1D,MACxF2D,yBAA0B,SAAC1D,GAAasD,EAASI,YAAyB1D,QAG7DqD,EAvKA,SAAC,GAKT,IAJLrD,EAII,EAJJA,QAASC,EAIL,EAJKA,UAAWI,EAIhB,EAJgBA,YAAaM,EAI7B,EAJ6BA,WAAYR,EAIzC,EAJyCA,YAC7CoD,EAGI,EAHJA,0BAA2BC,EAGvB,EAHuBA,2BAC3BC,EAEI,EAFJA,6BAA8BC,EAE1B,EAF0BA,yBAC9BjE,EACI,EADJA,OAAQgB,EACJ,EADIA,cAAe2C,EACnB,EADmBA,gBAAiB7C,EACpC,EADoCA,WAGlCoD,EAAQC,cAGRC,EAAqB,SAACC,GAC1BA,EAAMC,kBAmER,OACE,cAACrC,GAAD,UACG1B,EACC,eAAC4B,GAAD,WAEE,eAACC,GAAD,WACE,cAACC,GAAD,UAAY7B,EAAU+D,gBACtB,cAAChC,GAAD,UAAc3B,EAAY2D,mBAG5B,eAAC3B,GAAD,WACE,cAACH,GAAD,CAAc+B,QA/BE,WACxBC,uBAAa,CACXC,MAAO,iBACPC,QAAQ,0BAAD,OAA4BnE,EAAU+D,cAAtC,MACPK,QAAS,CACP,CACEC,MAAO,MACPL,QAAS,WACPP,EAAyB,CAAC1D,YAC1B2D,EAAMY,KAAN,UAActE,EAAd,sBAA6C,CAAEuE,KAAM,cAGzD,CACEF,MAAO,KACPL,QAAS,kBAAMN,EAAMY,KAAK,6BAiBxB,4BACA,cAACpC,GAAD,CAAYsC,IAAK9D,EAAY+D,IAAI,GAAGC,YAAad,OAGnD,cAACf,GAAD,2BACuB,cAAhB3C,EACD,CAAE4C,aAAa,GACa,cAA5B5C,EAAYyE,MAAM,EAAG,GACrB,CAAE5B,SAAS,GACX,CAAEC,cAAc,IALtB,aAOG9C,EAAY6D,iBAGf,eAAC1B,GAAD,WACE,cAAC,EAAD,CACEjB,WAAS,EACT4C,QA1EU,WACA,cAAhB9D,EACFoD,EAA0B,CAAEvD,UAASP,SAAQ2D,kBAAiBnD,YAAWI,cAAaE,eAEtFoD,EAAMY,KAAN,UAActE,EAAd,2BAAkD,CAAEuE,KAAM,UAoEpD,sBAMA,cAAC,EAAD,CAAclD,YAAU,EAAC2C,QA3FZ,WAEW,cAA5B9D,EAAYyE,MAAM,EAAG,GACvBjB,EAAMY,KAAN,UAActE,EAAd,eAA8BE,GAAe,CAAEqE,KAAM,SAC3C/E,GAIV+D,EAA2B,CAAExD,UAASP,SAAQ2D,kBAAiBnD,YAAWI,cAAaE,eACvFsE,SAASC,eAAe,cAAcC,UAJtCpB,EAAMY,KAAN,oCAAgD,CAAEC,KAAM,SACxDK,SAASC,eAAe,aAAaC,UAqF/B,4BAGF,eAACxC,GAAD,WACE,cAACC,GAAD,8FACA,cAACC,GAAD,CAAW/C,GAAG,YAAYsF,SArGb,SAAClB,GACtBrD,EAAgBqD,EAAMmB,OAAOC,OAoG+BC,YAAa1E,IACjE,cAAC,EAAD,CAAcc,UAAQ,EAAC0C,QA5ER,WACH,eAAhB9D,EACFwD,EAAMY,KAAN,UAActE,EAAd,8BAAqD,CAAEuE,KAAM,SACnD/D,EAKAhB,GAIVgE,EAA6B,CAACzD,UAASP,SAAQ2D,kBAAiBnD,YAAWI,cAAaE,aAAYE,kBACpGoE,SAASC,eAAe,aAAaI,MAAQ,KAJ7CvB,EAAMY,KAAN,sCAAkD,CAAEC,KAAM,SAC1DK,SAASC,eAAe,aAAaC,UANrCpB,EAAMY,KAAN,sCAA0CtE,EAA1C,qBAAwE,CACtEuE,KAAM,SAERK,SAASC,eAAe,aAAaC,UAqE/B,4BAKJ,eAACnD,GAAD,WACE,eAACC,GAAD,WACE,cAACC,GAAD,yBACA,cAACE,GAAD,8BAGF,cAACK,GAAD,UACE,cAACF,GAAD,CAAYsC,IAAKW,EAAYV,IAAI,GAAGC,YAAad,MAEnD,cAACf,GAAD,2BACA,eAACR,GAAD,WACE,cAAC,EAAD,CAAcjB,WAAS,EAAvB,sBACA,cAAC,EAAD,CAAcC,YAAU,EAAxB,0BAGF,eAACiB,GAAD,WACA,cAACC,GAAD,wFACE,cAACC,GAAD,CAAW/C,GAAG,cACd,cAAC,EAAD,CAAc6B,UAAQ,EAAtB,+B,UCrKN8D,GAAiB,SAAAzG,GAAK,OAAIA,EAAM0G,iBAEzBC,GAAexG,YACxB,CAACsG,KACD,SAAEC,GAAF,OAAuBA,EAAgBE,iBAG9BC,GAAc1G,YACvB,CAACsG,KACD,SAAEC,GAAF,OAAuBA,EAAgBI,gBAG9BC,GAAe5G,YACxB,CAACsG,KACD,SAAEC,GAAF,OAAuBA,EAAgBM,iB,SCd9BC,GAAuB,iBAAO,CACvCrB,KAAMsB,KAAiBC,yBAGdC,GAAmB,iBAAO,CACnCxB,KAAMsB,KAAiBG,sBAGdC,GAAyB,iBAAO,CACzC1B,KAAMsB,KAAiBK,2BAGdC,GAAgB,iBAAO,CAChC5B,KAAMsB,KAAiBO,kBAGdC,GAAgB,iBAAO,CAChC9B,KAAMsB,KAAiBS,kBAGdC,GAAiB,iBAAO,CACjChC,KAAMsB,KAAiBW,mBAGdC,GAAwB,iBAAO,CACxClC,KAAMsB,KAAiBa,2BAGdC,GAAsB,iBAAO,CACtCpC,KAAMsB,KAAiBe,yB,4tKC5BpB,IAAMhF,GAAUX,IAAO4F,GAAX,MAQNC,GAAY7F,IAAOS,IAAV,MAyBTqF,GAAe9F,IAAOS,IAAV,MAeZsF,GAAsB/F,IAAOS,IAAX,MAmBlBuF,GAAgBhG,IAAOS,IAAX,MAgBZwF,GAAkBjG,IAAOS,IAAV,MAafyF,GAAelG,IAAOe,KAAX,MAUXoF,GAAUnG,IAAOoG,QAAV,MAKPC,GAAWrG,IAAOsG,SAAV,MAURC,GAAQvG,IAAOoD,MAAV,MAOZoD,GAAc5G,YAAH,MAKJ6G,GAAQzG,IAAO0G,MAAV,KACZF,IAKOG,GAAgB3G,IAAO0G,MAAV,KACpBF,IAKAI,GAAehH,YAAH,MAgBLiH,GAAS7G,IAAO0G,MAAV,KACbE,IAKOE,GAAiB9G,IAAO0G,MAAV,KACrBE,IAKOG,GAAiB/G,IAAO0G,MAAV,KACrBE,IAIOI,GAAiBhH,IAAOiH,EAAV,MAedC,GAAiBlH,IAAOS,IAAV,MAMd0G,GAAQnH,IAAOoH,MAAV,MAMLC,GAAWrH,IAAOsH,GAAV,MAMRC,GAAevH,IAAOwH,GAAV,MAMZC,GAAYzH,IAAO0H,MAAV,MAITC,GAAY3H,YAAO4H,KAAP5H,CAAH,KAChBwG,ICjFAxE,GAAkBC,YAAyB,CAC/C4F,SAAU3F,MAUGC,eAAQH,IAPI,SAACI,GAAD,MAAe,CACxCkD,eAAgB,kBAAMlD,EAASkD,OAC/BwC,gBAAiB,SAACD,GAChBzF,EAAS2F,aAA4BF,QAI1B1F,EAnIE,SAAC,GAAmD,IAAjDmD,EAAgD,EAAhDA,eAAgBwC,EAAgC,EAAhCA,gBAAiBD,EAAe,EAAfA,SAC7CpF,EAAQC,cADoD,EAG1CsF,mBAAS,IAHiC,oBAG7D1I,EAH6D,KAGtD2I,EAHsD,KAsElE,OACE,cAACjC,GAAD,UACE,eAACC,GAAD,WAEE,cAACC,GAAD,CACEnD,QAAS,WACPuC,IACAwC,EAAgBD,IAHpB,kBASA,cAAC,GAAD,wBACA,cAAC1B,GAAD,UACE,sBAAK+B,OAAO,iBAAiBC,OAAO,MAAMC,cAAc,QAAxD,UACE,eAAC/B,GAAD,WACE,cAACM,GAAD,CACA1C,YAAY,wBACVzF,GAAG,QACH8E,KAAK,OACLtE,KAAK,QACL8E,SAvFQ,SAAClB,GACrBqF,EAASrF,EAAMmB,OAAOC,UAyFZ,sBACEqE,UAAU,mBACVC,QAAQ,sBACRH,OAAO,OAHT,SAKE,cAACxB,GAAD,CACEnI,GAAG,OACH8E,KAAK,OACLiF,OAAO,oBACPvJ,KAAK,aAIX,cAAC8H,GAAD,CACExD,KAAK,SACLkF,aAAa,SACbzF,QAhGS,WAEnB,IAAM0F,EAAO9E,SAAS+E,cAAc,SAASC,MAAM,GAEnD,GAAKF,GAASnJ,EAAd,CAKA,IAAMsJ,EAAS,IAAIC,WAEnBD,EAAOE,cAAcL,GAErBG,EAAOG,OAAS,SAACnG,GACf,IAAMoG,EAAarF,SAASsF,cAAc,OAC1CD,EAAWzF,IAAMX,EAAMmB,OAAOmF,OAE9BF,EAAWD,OAAS,SAACI,GACnB,IAAMC,EAASzF,SAASsF,cAAc,UAEtC,GAAIE,EAAEpF,OAAOsF,MAAQ,IAAK,CACxB,IAAMC,EAFU,IAEcH,EAAEpF,OAAOsF,MACvCD,EAAOC,MAHS,IAIhBD,EAAOG,OAASJ,EAAEpF,OAAOwF,OAASD,OAElCF,EAAOC,MAAQF,EAAEpF,OAAOsF,MACxBD,EAAOG,OAASJ,EAAEpF,OAAOwF,OAG3B,IAAMC,EAAMJ,EAAOK,WAAW,MAE9BD,EAAIE,UAAUP,EAAEpF,OAAQ,EAAG,EAAGqF,EAAOC,MAAOD,EAAOG,QAEnD,IAAMI,EAAaH,EAAIJ,OAAOQ,UAAUT,EAAEpF,OAAQ,aAElD8F,KAAM,CACJ1B,OAAQ,OACR2B,IAAI,iBACJC,KAAM,CACJrK,MAAOiK,EACPrK,MAAOA,EACPuI,SAAUA,KAIdpF,EAAMY,KAAN,UAAc/D,EAAd,cAAiC,CAC/BgE,KAAM,UACN0G,SAAU,eApDhB1K,EAAQ,KACRqE,SAASC,eAAe,SAASI,MAAQ,GACzCL,SAASC,eAAe,QAAQI,MAAQ,UAQtCvB,EAAMY,KAAK,qCAAsC,CAAEC,KAAK,QAAS0G,SAAS,+B,04BC1ChF,IAAMC,GAAiBrK,YAAH,MAKdsK,GAA4BtK,YAAH,KAC3BqK,IAOEE,GAAyBvK,YAAH,KAC1BqK,IAMIG,GAA4BxK,YAAH,KAC7BqK,IAmBWI,GAAoBrK,IAAOS,IAAV,MAdJ,SAACP,GACvB,OAAIA,EAAMoK,WACCJ,GAGPhK,EAAMqK,iBACDJ,GAGLjK,EAAMsK,oBACDJ,QADT,KAQSK,GAAWzK,IAAO0K,OAAV,MCtBNC,GApBO,SAAC,GAAkC,IAAhCnM,EAA+B,EAA/BA,GAAIoM,EAA2B,EAA3BA,WAAe1K,EAAY,mCAEpD,OACI,cAACmK,GAAD,yBAAmBQ,WAAS,GAAK3K,GAAjC,aACI,eAACuK,GAAD,yBAAUjM,GAAIA,GAAQ0B,GAAtB,cACI,uCAEI0K,EACIA,EAAWE,KAAI,SAAAC,GAAM,OACzB,wBAAwBC,KAAMD,EAAOvM,GAArC,SAA0CuM,EAAOvM,IAApCuM,EAAOvM,OAGpB,+CCgFdwD,GAAkBC,YAAyB,CAC/C4F,SAAU3F,IACV+I,OAAQxG,GACRrG,iBAUa+D,eAAQH,IAPI,SAACI,GAAD,MAAe,CACtCgD,cAAkB,WAAOhD,EAASgD,OAClCE,eAAkB,WAAOlD,EAASkD,OAClC4F,gBAAkB,SAACrD,GAAezF,EAAS+I,aAA4BtD,KACvEC,gBAAkB,SAACD,GAAezF,EAAS2F,aAA4BF,QAG5D1F,EAxFC,SAAC,GAAwG,IAAtGiD,EAAqG,EAArGA,cAAeE,EAAsF,EAAtFA,eAAgBlH,EAAsE,EAAtEA,aAAc8M,EAAwD,EAAxDA,gBAAiBpD,EAAuC,EAAvCA,gBAAiBmD,EAAsB,EAAtBA,OAAQpD,EAAc,EAAdA,SAElGpF,EAAQC,cAEd0I,qBAAU,WACRtD,EAAgBD,KACf,CAACC,EAAiBD,IANiG,MAQlFG,mBAAS,IARyE,oBAQjHqD,EARiH,KAQpGC,EARoG,OASlFtD,mBAAS,IATyE,oBASjHjJ,EATiH,KASpGwM,EAToG,OAUlFvD,mBAAS,IAVyE,oBAUjH3I,EAViH,KAUpGmM,EAVoG,OAWlFxD,mBAAS,IAXyE,oBAWjH7I,EAXiH,KAWpGsM,EAXoG,KAwChHC,EAAc,SAAC9I,GAEfyI,GAAWtM,GAAaI,GAAeE,EAAWsM,QAAyB,mBAAftM,GAC9DuM,aAAmBP,EAAStM,EAAWM,EAAYF,EAAa0I,GAChEpF,EAAMY,KAAN,UAAcgI,EAAd,cAAmC,CAAC/H,KAAM,UAAW0G,SAAS,eAdhEqB,EAAU,KACVtM,EAAY,KACZI,EAAc,KACdwE,SAASC,eAAe,YAAYI,MAAQ,GAC5CL,SAASC,eAAe,cAAcI,MAAQ,GAC9CL,SAASC,eAAe,gBAAgBI,MAAQ,GAChDL,SAASC,eAAe,eAAeI,MAAQ,iBAC/CL,SAASC,eAAe,YAAYC,SAUlCpB,EAAMY,KAAK,sEAAuE,CAACC,KAAM,QAAS0G,SAAS,gBAI/G,OACC,eAACnE,GAAD,WACG,eAACC,GAAD,WAEE,cAACI,GAAD,CAAanD,QAAS,WAAOqC,IAAiB8F,EAAgBrD,IAA9D,kBACA,cAAC,GAAD,wBACA,cAAC1B,GAAD,UACE,sBAAK+B,OAAO,iBAAiBC,OAAO,MAAMC,cAAc,QAAxD,UACE,eAAC/B,GAAD,CAAU7H,GAAG,UAAb,UACI,cAACiI,GAAD,CAAO3C,SA/CG,SAAClB,GACvB0I,EAAW1I,EAAMmB,OAAOC,QA8CwBC,YAAY,sBAAsBX,KAAK,OAAOtE,KAAK,WAAYR,GAAG,aACtG,cAACiI,GAAD,CAAO3C,SA5CK,SAAClB,GACzB2I,EAAa3I,EAAMmB,OAAOC,QA2CsBC,YAAY,wBAAwBX,KAAK,OAAOtE,KAAK,aAAcR,GAAG,eAC1G,cAAC,GAAD,CAAgB+L,kBAAgB,EAACzG,SAzCpB,SAAClB,GAC1B4I,EAAc5I,EAAMmB,OAAOC,QAwCgD6H,cAAc,mBAAmB7M,KAAK,cAAeR,GAAG,cAAcoM,WAAYK,IACjJ,cAACjE,GAAD,CAAgBjE,QAASuC,EAAzB,2BACA,cAACmB,GAAD,CAAO3C,SAvCM,SAAClB,GAC1B6I,EAAe7I,EAAMmB,OAAOC,QAsCsBC,YAAY,2BAA2BX,KAAK,OAAOtE,KAAK,eAAgBR,GAAG,oBAErH,cAACqI,GAAD,CAAQvD,KAAO,SAASkF,aAAa,SAASzF,QAAS,kBAAM2I,eAIlEtN,EAAe,cAAC,GAAD,IAAc,WCf9B4D,GAAkBC,YAAyB,CAC/C4F,SAAU3F,MAQGC,eAAQH,IALI,SAACI,GAAD,MAAe,CACxC8C,cAAgB,kBAAM9C,EAAS8C,OAC/B4G,eAAgB,SAACjE,GAAezF,EAAS2J,aAA2BlE,QAGvD1F,EAtEC,SAAC,GAAgD,IAA9C+C,EAA6C,EAA7CA,cAAe4G,EAA8B,EAA9BA,eAAgBjE,EAAc,EAAdA,SAE1CpF,EAAQC,cAFgD,EAIpCsF,mBAAS,IAJ2B,oBAIzDgE,EAJyD,KAIjDC,EAJiD,OAKtCjE,mBAAS,IAL6B,oBAKzDvJ,EALyD,KAKlDyN,EALkD,OAMtClE,mBAAS,IAN6B,oBAMzDtJ,EANyD,KAMlDyN,EANkD,KA8BxDC,EAAa,SAACxJ,GACdoJ,GAAUvN,GAASC,GAASmJ,GAC9BwE,aAAkBL,EAAQvN,EAAOC,EAAOmJ,GACxCpF,EAAMY,KAAN,UAAc2I,EAAd,eAAmC,CAAC1I,KAAM,UAAW0G,SAAS,eAZhEgC,EAAS,KACTvN,EAAQ,KACRC,EAAQ,KACRiF,SAASC,eAAe,UAAUI,MAAQ,GAC1CL,SAASC,eAAe,SAASI,MAAQ,GACzCL,SAASC,eAAe,SAASI,MAAQ,GACzCL,SAASC,eAAe,UAAUC,SAShCpB,EAAMY,KAAK,gDAAiD,CAACC,KAAM,QAAS0G,SAAS,gBAIzF,OACC,cAACnE,GAAD,UACG,eAACC,GAAD,WAEE,cAACI,GAAD,CAAanD,QAAS,WAAOmC,IAAiB4G,EAAejE,IAA7D,kBACA,cAAC,GAAD,uBACA,cAAC1B,GAAD,UACE,sBAAK+B,OAAO,iBAAiBC,OAAO,MAAMC,cAAc,QAAxD,UACE,eAAC/B,GAAD,CAAU7H,GAAG,UAAb,UACI,cAACiI,GAAD,CAAO3C,SAzCE,SAAClB,GACtBqJ,EAAUrJ,EAAMmB,OAAOC,QAwCsBC,YAAY,qBAAqBX,KAAK,OAAOtE,KAAK,SAASR,GAAG,WAC/F,cAACiI,GAAD,CAAO3C,SAtCC,SAAClB,GACrBsJ,EAAStJ,EAAMmB,OAAOC,QAqCuBC,YAAY,wBAAyBX,KAAK,OAAOtE,KAAK,QAASR,GAAG,UACnG,cAACiI,GAAD,CAAO3C,SAnCA,SAAClB,GACpBuJ,EAASvJ,EAAMmB,OAAOC,QAkCuBC,YAAY,uBAAuBX,KAAK,OAAOtE,KAAK,QAASR,GAAG,aAErG,cAACqI,GAAD,CAAQ9D,QAAS,kBAAMqJ,KAAc9I,KAAO,SAASkF,aAAa,wB,gDCkCxExG,I,OAAkBC,YAAyB,CAC/CC,uBAOaC,eAAQH,IAJI,SAACI,GAAD,MAAe,CACxC0C,iBAAkB,kBAAM1C,EAAS0C,UAGpB3C,EArFI,SAAC,GAA2C,IAAzC2C,EAAwC,EAAxCA,iBAAkB5C,EAAsB,EAAtBA,gBAAsB,EACpC8F,qBADoC,oBACrD+B,EADqD,KAC/CuC,EAD+C,KAmB5D,OAhBAlB,qBAAU,YACO,yCAAG,6BAAAmB,EAAA,sEACK1C,KAAM,CACzB1B,OAAQ,OACR2B,IAAI,uBACJC,KAAM,CACJlC,SAAU3F,KALE,OACVgH,EADU,OAShBoD,EAAQpD,EAAOa,MATC,2CAAH,qDAYfyC,CAAUtK,KACT,CAACA,IAGF,cAAC2D,GAAD,UACE,eAACE,GAAD,WACE,cAACG,GAAD,CAAanD,QAAS+B,EAAtB,kBACA,cAAC,GAAD,4BACA,cAACoC,GAAD,UACG6C,EACC,eAAC5C,GAAD,CAAOsF,YAAY,IAAnB,UACE,gCACE,eAACpF,GAAD,WACE,cAACE,GAAD,uBACA,cAACA,GAAD,yBACA,cAACA,GAAD,oBACA,cAACA,GAAD,qBACA,cAACA,GAAD,qBACA,cAACA,GAAD,kCAGJ,cAACE,GAAD,UACGsC,EAAKe,KAAI,SAAC4B,GAAD,OACR,eAACrF,GAAD,WACE,6BAAKqF,EAAKlO,KACV,6BAAKkO,EAAK1N,OACV,6BAAK0N,EAAKpN,QACV,6BAAKoN,EAAKtN,SACV,6BAAKsN,EAAKxN,SAEV,6BACGyN,KAAKC,OACHC,KAAKC,MAAQD,KAAKE,MAAML,EAAKM,gBAA9B,UATSN,EAAKlO,YAkB1B,cAAC,KAAD,CACE8E,KAAK,OACL2J,MAAM,UACN1D,OAAQ,GACRF,MAAO,GACPhB,UAAU,SACV6E,MAAO,CACLlD,SAAU,WACVmD,IAAK,MACLC,KAAM,MACNC,OAAQ,+B,86CCzFxB,IAAMC,GAAa1N,YAAH,MAMH2N,GAAuBvN,IAAOS,IAAV,MAapB+M,GAA4BxN,IAAOS,IAAV,KAWhC6M,IAGOG,GAAezN,IAAOa,OAAV,KAcnByM,IAGOI,GAAa1N,IAAOiH,EAAV,MCdR9E,eAAQ,MATI,SAAAC,GAAQ,MAAK,CACpCuC,qBAAwB,kBAAMvC,EAASuC,OACvCK,uBAAwB,kBAAM5C,EAAS4C,OACvCF,iBAAwB,kBAAM1C,EAAS0C,OACvCI,cAAwB,kBAAM9C,EAAS8C,OACvCE,cAAwB,kBAAMhD,EAASgD,OACvCI,sBAAwB,kBAAMpD,EAASoD,UAG5BrD,EAzBU,SAAC,GAA6H,IAA3HwC,EAA0H,EAA1HA,qBAAsBG,EAAoG,EAApGA,iBAAkBE,EAAkF,EAAlFA,uBAAwBE,EAA0D,EAA1DA,cAAeE,EAA2C,EAA3CA,cAAeI,EAA4B,EAA5BA,sBACtH,OACI,eAAC+H,GAAD,WACI,cAACE,GAAD,2BACA,eAACD,GAAD,WACI,cAACE,GAAD,CAAY3K,QAASmC,EAArB,sBACA,cAACwI,GAAD,CAAY3K,QAASqC,EAArB,uBACA,cAACsI,GAAD,CAAY3K,QAAS+B,EAArB,2BACA,cAAC4I,GAAD,CAAY3K,QAAS4B,EAArB,8BACA,cAAC+I,GAAD,CAAY3K,QAASiC,EAArB,gCACA,cAAC0I,GAAD,CAAY3K,QAASyC,EAArB,yCCoEVxD,GAAkBC,YAAyB,CAC/C4F,SAAU3F,IACVjE,wBAOakE,eAAQH,IAJI,SAACI,GAAD,MAAe,CACxCuC,qBAAsB,kBAAMvC,EAASuC,UAGxBxC,EA3EQ,SAAC,GAAwC,IAAtCwC,EAAqC,EAArCA,qBAAsBkD,EAAe,EAAfA,SAAe,EACrCG,qBADqC,oBACtD+B,EADsD,KAChDuC,EADgD,KAkB7D,OAfAlB,qBAAU,YACO,yCAAG,6BAAAmB,EAAA,sEACK1C,KAAM,CACzB1B,OAAQ,OACR2B,IAAI,2BACJC,KAAM,CACJlC,SAAUA,KALE,OACVqB,EADU,OAQhBoD,EAAQpD,EAAOa,MARC,2CAAH,qDAWfyC,CAAU3E,KACT,CAACA,IAGF,cAAChC,GAAD,UACE,eAACE,GAAD,WACE,cAACG,GAAD,CAAanD,QAAS4B,EAAtB,kBACA,cAAC,GAAD,8BACA,cAACuC,GAAD,UACG6C,EACC,eAAC5C,GAAD,CAAOsF,YAAY,IAAnB,UACE,gCACE,eAACpF,GAAD,WACE,cAACE,GAAD,uBACA,cAACA,GAAD,yBACA,cAACA,GAAD,oBACA,cAACA,GAAD,0BAGJ,cAACE,GAAD,UACGsC,EAAKe,KAAI,SAAC4B,GAAD,OACR,eAACrF,GAAD,WACE,6BAAKqF,EAAKlO,KACV,6BAAKkO,EAAK1N,OACV,6BAAK0N,EAAKpN,QACV,6BAAKoN,EAAKtN,WAJGsN,EAAKlO,YAU1B,cAAC,KAAD,CACE8E,KAAK,OACL2J,MAAM,UACN1D,OAAQ,GACRF,MAAO,GACPhB,UAAU,SACV6E,MAAO,CACLlD,SAAU,WACVmD,IAAK,MACLC,KAAM,MACNC,OAAQ,+BC3ETM,GANY,SAACC,GACxB,IAAIC,EAAOlK,SAASC,eAAegK,GAEnC,OADYC,EAAKC,QAAQD,EAAKE,eAAe/C,M,ygCCA1C,IAAMX,GAAoBrK,IAAOS,IAAV,MAYjBuN,GAAgBhO,IAAOS,IAAV,MAoBbwN,GAAMjO,IAAOe,KAAV,MCeViB,GAAkBC,YAAyB,CAC7C4F,SAAU3F,IACVgM,OAAQ7J,GACR8J,MAAO5J,KAWIpC,eAAQH,IARI,SAACI,GAAD,MAAe,CACtCgM,yBAA0B,SAACtP,EAASuP,GAAcjM,EAASgM,YAAyB,CAACtP,UAASuP,cAC9FlD,4BAA6B,SAACtD,GAAezF,EAAS+I,aAA4BtD,KAClFkE,2BAA4B,SAAClE,GAAezF,EAAU2J,aAA2BlE,KACjFyG,wBAAyB,WAAQlM,EAAUkM,aAA0BX,GAAmB,mBAI7ExL,EA1CU,SAAC,GAKQ,IAJ9B0F,EAI6B,EAJ7BA,SAAUqG,EAImB,EAJnBA,OAAQC,EAIW,EAJXA,MAClBhD,EAG6B,EAH7BA,4BACAY,EAE6B,EAF7BA,2BACAqC,EAC6B,EAD7BA,yBACAE,EAA6B,EAA7BA,wBAYA,OAVAlD,qBAAU,WAEND,EAA4BtD,KAC3B,CAACsD,EAA6BtD,IAEjCuD,qBAAU,WAERW,EAA2BlE,KAC1B,CAACkE,EAA4BlE,IAG9B,cAAC,GAAD,UACI,eAACmG,GAAD,WACI,cAACC,GAAD,uBACA,cAAC,GAAD,CAAgB3D,YAAU,EAAExG,SAAU,kBAAMsK,EAAyBT,GAAmB,cAAe9F,IAAWrJ,GAAG,aAAaoM,WAAYsD,IAC9I,cAACD,GAAD,sBACA,cAAC,GAAD,CAAgB3D,YAAU,EAACxG,SAAUwK,EAAyB9P,GAAG,YAAYoM,WAAYuD,YCkDnGnM,GAAkBC,YAAyB,CAC/C4F,SAAU3F,IACV/D,0BAOagE,eAAQH,IAJI,SAACI,GAAD,MAAe,CACxC4C,uBAAwB,kBAAM5C,EAAS4C,UAG1B7C,EA9EU,SAAC,GAA0C,IAAxC6C,EAAuC,EAAvCA,uBAAwB6C,EAAe,EAAfA,SAAe,EACzCG,qBADyC,oBAC1D+B,EAD0D,KACpDuC,EADoD,KAmBjE,OAhBAlB,qBAAU,YACO,yCAAG,6BAAAmB,EAAA,sEACK1C,KAAM,CACzB1B,OAAQ,OACR2B,IAAI,6BACJC,KAAM,CACJlC,SAAUA,KALE,OACVqB,EADU,OAShBoD,EAAQpD,EAAOa,MATC,2CAAH,qDAYfyC,CAAU3E,KACT,CAACA,IAGF,cAAChC,GAAD,UACE,eAACE,GAAD,WACE,cAACG,GAAD,CAAanD,QAASiC,EAAtB,kBACA,cAAC,GAAD,iCACA,cAACkC,GAAD,UACG6C,EACC,eAAC5C,GAAD,CAAOsF,YAAY,IAAnB,UACE,gCACE,eAACpF,GAAD,WACE,cAACE,GAAD,uBACA,cAACA,GAAD,yBACA,cAACA,GAAD,oBACA,cAACA,GAAD,qBACA,cAACA,GAAD,4BAGJ,cAACE,GAAD,UACGsC,EAAKe,KAAI,SAAC4B,GAAD,OACR,eAACrF,GAAD,WACE,6BAAKqF,EAAKlO,KACV,6BAAKkO,EAAK1N,OACV,6BAAK0N,EAAKpN,QACV,6BAAKoN,EAAKtN,SACV,6BAAKsN,EAAKlN,aALGkN,EAAKlO,YAW1B,cAAC,KAAD,CACE8E,KAAK,OACL2J,MAAM,UACN1D,OAAQ,GACRF,MAAO,GACPhB,UAAU,SACV6E,MAAO,CACLlD,SAAU,WACVmD,IAAK,MACLC,KAAM,MACNC,OAAQ,+BCoBlBrL,GAAkBC,YAAyB,CAC/CC,sBAOaC,eAAQH,IAJI,SAACI,GAAD,MAAe,CACxCsD,oBAAqB,kBAAMtD,EAASsD,UAGvBvD,EAxFQ,SAAC,GAOjB,IANLuD,EAMI,EANJA,oBACAxD,EAKI,EALJA,gBACAqM,EAII,EAJJA,UACAC,EAGI,EAHJA,QACAxC,EAEI,EAFJA,OACAX,EACI,EADJA,QACI,EACoBrD,qBADpB,oBACG+B,EADH,KACSuC,EADT,KAsBJ,OAnBAlB,qBAAU,YACO,yCAAG,6BAAAmB,EAAA,sEACK1C,KAAM,CACzB1B,OAAQ,OACR2B,IAAI,4BACJC,KAAM,CACJvL,GAAI0D,EACJqM,UAAWA,EACXC,QAASA,EACTC,SAAUzC,EACVX,QAASA,KATG,OACVnC,EADU,OAYhBoD,EAAQpD,EAAOa,MAZC,2CAAH,qDAefyC,CAAUtK,KACT,CAACA,EAAiBqM,EAAWC,EAASxC,EAAQX,IAG/C,cAACxF,GAAD,UACE,eAACE,GAAD,WACE,cAACG,GAAD,CAAanD,QAAS2C,EAAtB,kBACA,cAAC,GAAD,uCACA,cAACwB,GAAD,UACG6C,EACC,eAAC5C,GAAD,CAAOsF,YAAY,IAAnB,UACE,gCACE,eAACpF,GAAD,WACE,cAACE,GAAD,sBACA,cAACA,GAAD,uBACA,cAACA,GAAD,yBACA,cAACA,GAAD,2BACA,cAACA,GAAD,oBACA,cAACA,GAAD,uBACA,cAACA,GAAD,qBACA,cAACA,GAAD,gCAGJ,cAACE,GAAD,UACGsC,EAAKe,KAAI,SAACf,GAAD,OACR,eAAC1C,GAAD,WACE,6BAAK0C,EAAK2E,UACV,6BAAK3E,EAAK4E,WACV,6BAAK5E,EAAK6E,aACV,6BAAK7E,EAAK8E,eACV,6BAAK9E,EAAK+E,aACV,6BAAK/E,EAAKvK,WACV,6BAAKuK,EAAK7B,SACV,6BAAK,IAAI2E,KAAK9C,EAAKgF,aAAaC,qBARnBjF,EAAKvL,YAc1B,cAAC,KAAD,CACE8E,KAAK,OACL2J,MAAM,UACN1D,OAAQ,GACRF,MAAO,GACPhB,UAAU,SACV6E,MAAO,CAAElD,SAAU,WAAYmD,IAAK,MAAOC,KAAM,MAAOC,OAAQ,+B,0CCOxErL,I,OAAkBC,YAAyB,CAC/C4F,SAAU3F,IACVgM,OAAQ7J,GACR8J,MAAO5J,GACP3G,wBAQauE,eAAQH,IALI,SAACI,GAAD,MAAe,CACxCoD,sBAAwB,kBAAMpD,EAASoD,OACvCE,oBAAsB,kBAAMtD,EAASsD,UAGxBvD,EA5FU,SAAC,GAAsF,IAApFqD,EAAmF,EAAnFA,sBAAuBE,EAA4D,EAA5DA,oBAAqBwI,EAAuC,EAAvCA,OAAQC,EAA+B,EAA/BA,MAAOvQ,EAAwB,EAAxBA,mBAAwB,EAG3EoK,mBAChCiH,KAASC,KAAW,IAAIrC,KAAQ,GAAI,KAJuE,oBAGtG0B,EAHsG,KAG3FY,EAH2F,OAM/EnH,mBAC5BiH,KAASC,KAAW,IAAIrC,KAAQ,GAAI,KAPuE,oBAMtG2B,EANsG,KAM7FY,EAN6F,OAiB/EpH,mBAAS,KAjBsE,oBAiBtGqD,EAjBsG,KAiB7FC,EAjB6F,OAkBjFtD,mBAAS,KAlBwE,oBAkBtGgE,EAlBsG,KAkB9FC,EAlB8F,KA6B7G,OACC,eAACpG,GAAD,WACG,eAACC,GAAD,WAEE,cAACI,GAAD,CAAanD,QAASyC,EAAtB,kBACA,cAAC,GAAD,gCACA,cAACW,GAAD,UACE,sBAAK+B,OAAO,oBAAoBC,OAAO,MAAMC,cAAc,QAA3D,UACE,eAAC/B,GAAD,CAAU7H,GAAG,oBAAb,UACI,cAAC+H,GAAD,CAAO8I,QAAQ,aAAf,wBACA,cAAC1H,GAAD,CACE2H,SAAUf,EACVgB,eAAe,QACfC,WAAW,qBACXC,eAAa,EACbC,WAlCS,SAAAC,GACvB,IAAMC,EAAc,IAAI/C,KAClBgD,EAAe,IAAIhD,KAAK8C,GAE9B,OAAOC,EAAYE,UAAYD,EAAaC,WA+B9BhM,SAAU,SAAAiM,GAAI,OAAIZ,EAAaY,IAC/BC,aAAW,IAEb,cAACzJ,GAAD,CAAO8I,QAAQ,WAAf,sBACA,cAAC1H,GAAD,CACE2H,SAAUd,EACVe,eAAe,QACfC,WAAW,qBACXC,eAAa,EACb3L,SAAU,SAAAiM,GAAI,OAAIX,EAAWW,IAC7BC,aAAW,IAEb,cAACzJ,GAAD,CAAO8I,QAAQ,WAAf,sBACA,cAAC,GAAD,CAAgB7E,qBAAmB,EAAC1G,SArC1B,SAAClB,GACvB0I,EAAW1I,EAAMmB,OAAOC,QAoCmDV,KAAK,OAAOtE,KAAK,WAAYR,GAAG,WAAWoM,WAAYsD,IACtH,cAAC3H,GAAD,CAAO8I,QAAQ,UAAf,qBACA,cAAC,GAAD,CAAgB7E,qBAAmB,EAAC1G,SAnC3B,SAAClB,GACtBqJ,EAAUrJ,EAAMmB,OAAOC,QAkCmDV,KAAK,OAAOtE,KAAK,UAAWR,GAAG,UAAUoM,WAAYuD,OAEvH,cAACpH,GAAD,CAAgBhE,QAAS2C,EAAqBpC,KAAO,SAASkF,aAAa,mBAK/E5K,EACA,cAAC,GAAD,CACE2Q,UAAWA,EAAUuB,UACrBtB,QAASA,EAAQsB,UACjBzE,QAASA,EACTW,OAAQA,IAER,W,gLC9FH,IAAMiE,GAAoBjQ,IAAOS,IAAV,MCgDxBuB,GAAkBC,YAAyB,CAC7ChE,sBACAC,kBACAC,wBACAH,cACAD,eACAD,2BAGWqE,sBAAQH,GAARG,EAlCE,SAAC,GAOP,IANPlE,EAMM,EANNA,oBACAC,EAKM,EALNA,gBACAC,EAIM,EAJNA,sBACAH,EAGM,EAHNA,YACAD,EAEM,EAFNA,aACAD,EACM,EADNA,uBAGA,OACI,eAACmS,GAAD,WACI,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IAECjS,EAAc,cAAC,GAAD,IAAa,KAC3BD,EAAe,cAAC,GAAD,IAAa,KAC5BG,EAAkB,cAAC,GAAD,IAAgB,KAClCD,EAAsB,cAAC,GAAD,IAAoB,KAC1CE,EAAwB,cAAC,GAAD,IAAsB,KAC9CL,EAAyB,cAAC,GAAD,IAAsB","file":"static/js/6.ce909065.chunk.js","sourcesContent":["import { createSelector } from \"reselect\";\r\n\r\nconst selectModal = state => state.modalState;\r\n\r\nexport const seenActivityReport = createSelector(\r\n    [selectModal],\r\n    ( modalState ) => modalState.seenActivityReport\r\n);\r\n\r\nexport const seenActivityParameters= createSelector(\r\n    [selectModal],\r\n    ( modalState ) => modalState.seenActivityParameters\r\n);\r\n\r\nexport const seenAddAsset= createSelector(\r\n    [selectModal],\r\n    ( modalState ) => modalState.seenAddAsset\r\n);\r\n\r\nexport const seenAddUser = createSelector(\r\n    [selectModal],\r\n    ( modalState ) => modalState.seenAddUser\r\n);\r\n\r\nexport const seenAvailableAssets = createSelector(\r\n    [selectModal],\r\n    ( modalState ) => modalState.seenAvailableAssets\r\n);\r\n\r\nexport const seenAssetsInUse= createSelector(\r\n    [selectModal],\r\n    ( modalState ) => modalState.seenAssetsInUse\r\n);\r\n\r\nexport const seenQuarantinedAssets = createSelector(\r\n    [selectModal],\r\n    ( modalState ) => modalState.seenQuarantinedAssets\r\n);\r\n\r\nexport const seenAddModel = createSelector(\r\n    [selectModal],\r\n    ( modalState ) => modalState.seenAddModel\r\n);","import { createSelector } from 'reselect';\r\n\r\nconst selectUser = state => state.userData;\r\n\r\nexport const userId = createSelector(\r\n    [selectUser],\r\n    ( userData ) => userData.id\r\n);\r\n\r\nexport const userFname = createSelector(\r\n    [selectUser],\r\n    ( userData ) => userData.fname\r\n);\r\n\r\nexport const userLname = createSelector(\r\n    [selectUser],\r\n    ( userData ) => userData.lname\r\n);\r\n\r\nexport const userOwnerId = createSelector(\r\n    [selectUser],\r\n    ( userData ) => userData.owner_id\r\n);\r\n","import { createSelector } from 'reselect';\r\n\r\nconst selectAsset = state => state.assetData;\r\n\r\nexport const assetId = createSelector(\r\n    [selectAsset],\r\n    ( assetData ) => assetData.id\r\n);\r\n\r\nexport const assetName = createSelector(\r\n    [selectAsset],\r\n    ( assetData ) => assetData.name\r\n);\r\n\r\nexport const assetStatus = createSelector(\r\n    [selectAsset],\r\n    ( assetData ) => assetData.status\r\n);\r\n\r\nexport const assetSerial = createSelector(\r\n    [selectAsset],\r\n    ( assetData ) => assetData.serial\r\n);\r\n\r\nexport const assetModel = createSelector(\r\n    [selectAsset],\r\n    ( assetData ) => assetData.model\r\n);\r\n\r\nexport const assetComments = createSelector(\r\n    [selectAsset],\r\n    ( assetData ) => assetData.comments\r\n);\r\n\r\nexport const assetOwnerId = createSelector(\r\n    [selectAsset],\r\n    ( assetData ) => assetData.owner_id\r\n);\r\n\r\nexport const assetImage = createSelector(\r\n    [selectAsset],\r\n    ( assetData ) => assetData.image\r\n);\r\n","export default __webpack_public_path__ + \"static/media/default.72b57b24.svg\";","import styled, { css } from 'styled-components';\r\n\r\nconst checkInButtonStyles = css`\r\n    background-color: #3773bf;\r\n`;\r\n\r\nconst checkOutButtonStyles = css`\r\n    background-color: #bf3737;\r\n`;\r\n\r\nconst submitButtonStyles = css`\r\n    width: 85%;\r\n    height: 25px;\r\n    margin-bottom: 0.5rem;\r\n    background-color: #808080;\r\n`;\r\n\r\nconst getButtonStyles = (props) => {\r\n    if (props.isCheckIn) {\r\n        return checkInButtonStyles\r\n    } \r\n    \r\n    if (props.isCheckOut) {\r\n        return checkOutButtonStyles\r\n    } \r\n    \r\n    if (props.isSubmit) {\r\n        return submitButtonStyles\r\n    }\r\n};\r\n\r\nexport const CustomButtonContainer = styled.button`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    height: 2.5em;\r\n    min-width: 9rem;\r\n    width: 100px;\r\n    font-size: 1rem;\r\n    opacity: 1;\r\n    transition: opacity 0.15s ease-in;\r\n    border-radius: 0.25rem;\r\n    padding: .5rem 1rem;\r\n    box-shadow: 0 0.3rem rgba(121, 121, 121, 0.65);\r\n    border: none;\r\n    outline: none;\r\n    color: #fff;\r\n    cursor: pointer;\r\n    :active {\r\n    transform: translate(0, 0.1rem);\r\n    box-shadow: 0 0.1rem rgba(255, 255, 255, 0.65);\r\n    }\r\n    :hover {\r\n    filter: brightness(120%);\r\n    }\r\n\r\n    ${getButtonStyles}\r\n`;\r\n\r\n\r\n  ","import React from 'react';\r\n\r\nimport { CustomButtonContainer } from './custom-button.styles'\r\n\r\nconst CustomButton = ({children, ...props}) => (\r\n        <CustomButtonContainer {...props}>{children}</CustomButtonContainer>\r\n);\r\n\r\nexport default CustomButton;\r\n","import styled, { css } from 'styled-components';\r\n\r\nexport const AssetContainer = styled.div`\r\n    width: 40vw;\r\n    max-height: 100vh;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n\r\n    @media screen and (max-width: 1500px) {\r\n      width: 100%;\r\n      justify-content: center;\r\n      align-items: center;\r\n`;\r\n\r\nexport const AssetInnerContainer = styled.div`\r\n    min-height: 96vh;\r\n    width: 95%;\r\n    margin: 1em;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    background-color: white;\r\n    border: 2px solid black;\r\n    border-radius: 8px;\r\n\r\n    @media screen and (max-width: 1500px) {\r\n      max-width: 600px;\r\n      min-width: 350px;\r\n`;\r\n\r\nexport const Header = styled.div`\r\n    text-align: center;\r\n    position: relative;\r\n`;\r\n\r\nexport const AssetName = styled.header`\r\nposition:relative;\r\n    font-size: 3rem;\r\n    margin-bottom: 0;\r\n    font-weight: bold;\r\n    color: #555;\r\n    text-shadow: 1px 1px #d4d4d4;\r\n`;\r\n\r\nexport const AssetSerial = styled.span`\r\n    position: relative;\r\n    bottom: 0.5em;\r\n    color: rgb(153, 153, 153);\r\n    margin: 0;\r\n    padding: 0;\r\n    margin-bottom: 0.5em;\r\n    font-size: 0.8em;\r\n`;\r\n\r\n\r\nexport const RemoveButton = styled.button`\r\n    color: white;\r\n    font-weight:bold;\r\n    cursor: pointer;\r\n    background-color:black;\r\n    position: absolute;\r\n    width: 50%;\r\n    height: 3rem;\r\n    border-radius:5px;\r\n    visibility: hidden;\r\n`;\r\n\r\nexport const AssetImage = styled.img`\r\n    top: 7%;\r\n    margin-right: auto;\r\n    margin-left: auto;\r\n    max-height: 100%;\r\n    max-width: 85%;\r\n`;\r\n\r\nexport const ImageContainer = styled.div`\r\n    position: relative;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items:center;\r\n    min-height: 48%;\r\n    min-width: 75%;\r\n\r\n    :hover {\r\n        opacity: .8;\r\n    }\r\n\r\n    :hover ${RemoveButton} {\r\n        visibility: visible;\r\n    }\r\n\r\n    @media screen and (max-width: 1500px) {\r\n      max-height: 100%;\r\n      max-width: 50%;\r\n`;\r\n\r\nexport const ButtonContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-around;\r\n    width: 100%;\r\n`;\r\nexport const Footer = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: flex-end;\r\n    margin-bottom: 1em;\r\n    margin-top: 1em;\r\n    width: 90%;\r\n    height: 25%;\r\n    margin-right: auto;\r\n    margin-left: auto;\r\n`;\r\n\r\nexport const Instructions = styled.div`\r\n    font-size: 12px;\r\n    display: block;\r\n    text-align: center;\r\n    font-weight: 200;\r\n\r\n`;\r\n  \r\nexport const ReasonBox = styled.textarea`\r\n    box-sizing: border-box;\r\n    border-style: solid;\r\n    border-width: 1px;\r\n    border-color: rgba(0, 0, 0, 0.2);\r\n    padding: 0.5rem;\r\n    border-radius: 0.25rem;\r\n    margin-bottom: 0.25rem;\r\n    resize: none;\r\n    width: 85%;\r\n    height: 7em;\r\n\r\n`;\r\n\r\n\r\nconst availableStatusStyles = css`\r\n    color: rgb(13, 126, 13);\r\n`;\r\n\r\nconst inUseStatusStyles = css`\r\n    color: rgb(250, 33, 33);\r\n`;\r\n\r\nconst quarantineStatusStyles = css`\r\n    color: rgb(151, 33, 219);\r\n`;\r\n\r\nconst getStatusStyles = (props) => {\r\n    if (props.isAvailable) {\r\n        return availableStatusStyles\r\n    } \r\n    \r\n    if (props.isInUse) {\r\n        return inUseStatusStyles\r\n    } \r\n    \r\n    if (props.isQurantined) {\r\n        return quarantineStatusStyles\r\n    }\r\n};\r\n\r\nexport const AssetStatus = styled.span`\r\n    text-shadow: 1px 1px #d4d4d4;\r\n    text-align: center;\r\n    font-size: 2.5rem;\r\n    margin-top: 0.5rem;\r\n    margin-bottom: 1rem;\r\n\r\n    ${getStatusStyles}\r\n`\r\n  ","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { createStructuredSelector } from \"reselect\";\r\n\r\nimport { \r\n  checkInSelectedAssetStart, \r\n  checkOutSelectedAssetStart, \r\n  quarantineSelectedAssetStart,\r\n  removeSelectedAssetStart, \r\n} from \"../../redux/asset/asset.actions\";\r\n\r\nimport { userId } from \"../../redux/user/user.selectors\";\r\nimport { currentMemberId } from \"../../redux/site-member/site-member.selectors.js\";\r\nimport { assetId, assetName, assetSerial, assetImage, assetComments, assetStatus, assetModel } from \"../../redux/asset/asset.selectors\";\r\n\r\nimport { useAlert } from \"react-alert\";\r\nimport { confirmAlert } from \"react-confirm-alert\";\r\n\r\nimport defaultImg from \"../../images/default.svg\";\r\nimport CustomButton from \"../custom-button/custom-button.component\";\r\n\r\nimport {\r\n  AssetContainer, AssetInnerContainer, Header, AssetName, AssetSerial, RemoveButton,\r\n  ImageContainer, AssetImage, AssetStatus, ButtonContainer, Footer, Instructions, ReasonBox,\r\n} from \"./asset-container.styles.jsx\";\r\n\r\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\r\n\r\nconst Center = ({\r\n  assetId, assetName, assetSerial, assetImage, assetStatus, \r\n  checkInSelectedAssetStart, checkOutSelectedAssetStart, \r\n  quarantineSelectedAssetStart, removeSelectedAssetStart,\r\n  userId, assetComments, currentMemberId, assetModel\r\n}) => {\r\n\r\n  const alert = useAlert();\r\n\r\n  // Prevents the user from dragging the asset image.\r\n  const preventDragHandler = (event) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  const onReasonChange = (event) => {\r\n    assetComments = event.target.value;\r\n  };\r\n\r\n\r\n  const handleCheckout = () => {\r\n\r\n    if (assetStatus.slice(0, 9) === \"In Use By\") {\r\n      alert.show(`${assetName} is ${assetStatus}`, { type: \"info\" });\r\n    } else if (!userId) {\r\n      alert.show(`Username is required for checkout`, { type: \"info\" });\r\n      document.getElementById(\"user-list\").focus();\r\n    } else {\r\n      checkOutSelectedAssetStart({ assetId, userId, currentMemberId, assetName, assetSerial, assetModel });\r\n      document.getElementById(\"asset-list\").focus();\r\n    }\r\n  };\r\n\r\n  const handleCheckin = () => {\r\n    if (assetStatus !== \"Available\"){\r\n      checkInSelectedAssetStart({ assetId, userId, currentMemberId, assetName, assetSerial, assetModel });\r\n    }else{\r\n      alert.show(`${assetName} is already checked in.`, { type: \"info\" });\r\n    } \r\n  };\r\n\r\n  const handleQuarantine = () => {\r\n    if (assetStatus === \"Quarantine\") {\r\n      alert.show(`${assetName} is already in quarantine.`, { type: \"info\" });\r\n    } else if (!assetComments) {\r\n      alert.show(`Reason is required to check ${assetName} into quarantine.`, {\r\n        type: \"info\",\r\n      });\r\n      document.getElementById(\"text-area\").focus();\r\n    } else if (!userId) {\r\n      alert.show(`Username is required for quarantine`, { type: \"info\" });\r\n      document.getElementById(\"user-list\").focus();\r\n    } else {\r\n      quarantineSelectedAssetStart({assetId, userId, currentMemberId, assetName, assetSerial, assetModel, assetComments});\r\n      document.getElementById(\"text-area\").value = \"\";\r\n    }\r\n  };\r\n  \r\n\r\n  const handleRemoveAsset = () => {\r\n    confirmAlert({\r\n      title: \"Confirm Delete\",\r\n      message: `Are you sure to delete ${assetName.toUpperCase()} ?`,\r\n      buttons: [\r\n        {\r\n          label: \"Yes\",\r\n          onClick: () => {\r\n            removeSelectedAssetStart({assetId});\r\n            alert.show(`${assetName} has been removed.`, { type: \"success\" });\r\n          },\r\n        },\r\n        {\r\n          label: \"No\",\r\n          onClick: () => alert.show(\"Operation Cancelled\"),\r\n        },\r\n      ],\r\n    });\r\n  };\r\n\r\n  return (\r\n    <AssetContainer>\r\n      {assetId ? (\r\n        <AssetInnerContainer>\r\n          \r\n          <Header>\r\n            <AssetName>{assetName.toUpperCase()}</AssetName>\r\n            <AssetSerial>{assetSerial.toUpperCase()}</AssetSerial>\r\n          </Header>\r\n\r\n          <ImageContainer>\r\n            <RemoveButton onClick={handleRemoveAsset}> REMOVE ASSET </RemoveButton>\r\n            <AssetImage src={assetImage} alt=\"\" onDragStart={preventDragHandler}/>\r\n          </ImageContainer>\r\n\r\n          <AssetStatus\r\n            {...(assetStatus === \"Available\"\r\n              ? { isAvailable: true }\r\n              : assetStatus.slice(0, 9) === \"In Use By\"\r\n              ? { isInUse: true }\r\n              : { isQurantined: true })}\r\n          >\r\n            {assetStatus.toUpperCase()}\r\n          </AssetStatus>\r\n\r\n          <ButtonContainer>\r\n            <CustomButton\r\n              isCheckIn\r\n              onClick={handleCheckin}\r\n            >\r\n              CHECK IN\r\n            </CustomButton>\r\n            <CustomButton isCheckOut onClick={handleCheckout}> CHECK OUT </CustomButton>\r\n          </ButtonContainer>\r\n\r\n          <Footer>\r\n            <Instructions> If there are issues with the asset, please fill out the form below and submit </Instructions>\r\n            <ReasonBox id=\"text-area\" onChange={onReasonChange} placeholder={assetComments}/>\r\n            <CustomButton isSubmit onClick={handleQuarantine}> SUBMIT </CustomButton>\r\n          </Footer>\r\n          \r\n        </AssetInnerContainer>\r\n      ) : (\r\n        <AssetInnerContainer>\r\n          <Header>\r\n            <AssetName>Asset Name</AssetName>\r\n            <AssetSerial>Asset Serial</AssetSerial>\r\n          </Header>\r\n\r\n          <ImageContainer>\r\n            <AssetImage src={defaultImg} alt=\"\" onDragStart={preventDragHandler}/>\r\n          </ImageContainer>\r\n          <AssetStatus>Asset Status</AssetStatus>\r\n          <ButtonContainer>\r\n            <CustomButton isCheckIn>CHECK IN</CustomButton>\r\n            <CustomButton isCheckOut>CHECK OUT</CustomButton>\r\n          </ButtonContainer>\r\n\r\n          <Footer>\r\n          <Instructions> If there are issues with the asset, please fill out the form and submit </Instructions>\r\n            <ReasonBox id=\"text-area\" />\r\n            <CustomButton isSubmit>SUBMIT</CustomButton>\r\n            \r\n          </Footer>\r\n        </AssetInnerContainer>\r\n      )}\r\n    </AssetContainer>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  currentMemberId,\r\n  userId,\r\n  assetId,\r\n  assetName,\r\n  assetImage,\r\n  assetStatus,\r\n  assetSerial,\r\n  assetComments,\r\n  assetModel,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  checkInSelectedAssetStart: (assetData) => {dispatch(checkInSelectedAssetStart({...assetData}));},\r\n  checkOutSelectedAssetStart: (assetData) => {dispatch(checkOutSelectedAssetStart({...assetData}));},\r\n  quarantineSelectedAssetStart: (assetData) => {dispatch(quarantineSelectedAssetStart({...assetData}));},\r\n  removeSelectedAssetStart: (assetId) => {dispatch(removeSelectedAssetStart(assetId))},\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Center);\r\n","import { createSelector } from \"reselect\";\r\n\r\nconst selectDropDown = state => state.dropDownOptions;\r\n\r\nexport const selectAssets = createSelector(\r\n    [selectDropDown],\r\n    ( dropDownOptions ) => dropDownOptions.assetDropDown\r\n);\r\n\r\nexport const selectUsers = createSelector(\r\n    [selectDropDown],\r\n    ( dropDownOptions ) => dropDownOptions.userDropDown\r\n);\r\n\r\nexport const selectModels = createSelector(\r\n    [selectDropDown],\r\n    ( dropDownOptions ) => dropDownOptions.modelDropDown\r\n);","import ModalActionTypes from './modal.types';\r\n\r\nexport const toggleAvailableUnits = () => ({\r\n    type: ModalActionTypes.TOGGLE_AVAILABLE_UNITS\r\n});\r\n\r\nexport const toggleUnitsInUse = () => ({\r\n    type: ModalActionTypes.TOGGLE_UNITS_IN_USE\r\n});\r\n\r\nexport const toggleQuarantinedUnits = () => ({\r\n    type: ModalActionTypes.TOGGLE_QUARANTINED_UNITS\r\n});\r\n\r\nexport const toggleAddUser = () => ({\r\n    type: ModalActionTypes.TOGGLE_ADD_USER\r\n});\r\n\r\nexport const toggleAddUnit = () => ({\r\n    type: ModalActionTypes.TOGGLE_ADD_UNIT\r\n});\r\n\r\nexport const toggleAddModel = () => ({\r\n    type: ModalActionTypes.TOGGLE_ADD_MODEL\r\n});\r\n\r\nexport const toggleActvityTracking = () => ({\r\n    type: ModalActionTypes.TOGGLE_ACTIVITY_TRACKING\r\n});\r\n\r\nexport const toggleActvityReport = () => ({\r\n    type: ModalActionTypes.TOGGLE_ACTIVITY_REPORT\r\n});","import styled, { css } from 'styled-components'\r\nimport DatePicker from \"react-datepicker\";\r\n\r\nexport const Header  = styled.h1`\r\n    background-color: #1b4275;\r\n    color: white;\r\n    padding: 0.5em;\r\n    text-align: center;\r\n    margin-bottom: 0;\r\n`;\r\n\r\nexport const ModalMain = styled.div`\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    z-index: 1010;\r\n    background: rgba(240, 240, 240, 0.9);\r\n    display: -webkit-flex;\r\n    display: -moz-flex;\r\n    display: -ms-flex;\r\n    display: -o-flex;\r\n    display: flex;\r\n    justify-content: center;\r\n    -ms-align-items: center;\r\n    opacity: 0;\r\n    -webkit-animation: react-confirm-alert-fadeIn 0.5s 0.2s forwards;\r\n    -moz-animation: react-confirm-alert-fadeIn 0.5s 0.2s forwards;\r\n    -o-animation: react-confirm-alert-fadeIn 0.5s 0.2s forwards;\r\n    animation: react-confirm-alert-fadeIn 0.5s 0.2s forwards;\r\n    @media screen and (max-width: 1500px) {\r\n        height: 157vh;\r\n      }\r\n`;\r\n\r\nexport const ModalContent = styled.div`\r\n\r\n    position: absolute;\r\n    top: 10%;\r\n    width: 50%;\r\n    height: auto;\r\n    width: 450px;\r\n    padding-bottom: 2em;\r\n    background-color: white;\r\n    z-index: 1002;\r\n    overflow: auto;\r\n    border-radius: 10px;\r\n    box-shadow: 0 20px 75px rgba(0, 0, 0, 0.13);\r\n`;\r\n\r\nexport const ModalReportContent  = styled.div`\r\n\r\n    min-width: 450px;\r\n    background-color: white;\r\n    margin-top: 2em;\r\n    margin-bottom: 2em;\r\n    width: 65%;\r\n    border-radius: 10px;\r\n    box-shadow: 0 20px 75px rgba(0, 0, 0, 0.13);\r\n    overflow: scroll;\r\n\r\n    @media screen and (max-width: 1500px) {\r\n        height: 90vh;\r\n        width: 80%;\r\n        margin-top: 2em;\r\n        margin-bottom: 0;\r\n      }\r\n`;\r\n\r\nexport const SubModalMain  = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    position: absolute;\r\n    top: 0%;\r\n    left: 0%;\r\n    width: 100%;\r\n    height: 100vh;\r\n    background-color: rgba(0, 0, 0, 0.2);\r\n    z-index: 1003;\r\n\r\n    @media screen and (max-width: 1500px) {\r\n        height: 157vh;\r\n      }\r\n`;\r\n\r\nexport const SubModalContent = styled.div`\r\n    position: absolute;\r\n    top: 20%;\r\n    height: auto;\r\n    width: 350px;\r\n    padding-bottom: 2em;\r\n    background-color: white;\r\n    z-index: 1004;\r\n    overflow: auto;\r\n    border-radius: 5px;\r\n    border: 2px solid black;\r\n`;\r\n\r\nexport const CloseButton  = styled.span`\r\n    color: Black;\r\n    float: right;\r\n    }\r\n\r\n    :hover {\r\n    color: rgb(192, 0, 0);\r\n    cursor: pointer;\r\n`;\r\n\r\nexport const Article = styled.article`\r\n    display: flex;\r\n    justify-content: center;\r\n`;\r\n\r\nexport const FieldSet = styled.fieldset`\r\n    border-style: solid;\r\n    border-width: 1px;\r\n    border-color: transparent;\r\n    padding-left: 0;\r\n    padding-right: 0;\r\n    margin-left: 0;\r\n    margin-right: 0;\r\n`;\r\n\r\nexport const Label = styled.label`\r\n    display: block;\r\n    line-height: 1;\r\n    margin-top: 1rem;\r\n    margin-bottom: -.8rem;\r\n`;\r\n\r\nconst inputStyles = css`\r\n    padding: 0.5rem;\r\n    border: 1px solid darkgrey;\r\n    margin-top: 1rem;\r\n`\r\nexport const Input = styled.input`\r\n    ${inputStyles}\r\n    width: 61%;\r\n    margin-left:18%; \r\n`;\r\n\r\nexport const SubModalInput = styled.input`\r\n    ${inputStyles}\r\n    width: 80%;\r\n    margin-left:6%;\r\n`;\r\n\r\nconst submitButton = css`\r\n    color: #4178BE; \r\n    font-weight: bold;\r\n    padding:.5rem 1rem;\r\n    margin-top: .5rem;\r\n    border: 1px solid #4178BE;\r\n    background-color: transparent;\r\n    cursor: pointer;\r\n    font-size: 0.875rem;\r\n    text-align: center;\r\n    :hover{\r\n        background-color: #4178BE;\r\n        color: #ffffff;\r\n    }\r\n`\r\n\r\nexport const Submit = styled.input`\r\n    ${submitButton}\r\n    width: 65%;\r\n    margin-left:18%;\r\n`;\r\n\r\nexport const AddModelSubmit = styled.input`\r\n    ${submitButton}\r\n    width: 86%;\r\n    margin-left:6.5%;\r\n`;\r\n\r\nexport const ActivitySubmit = styled.input`\r\n    ${submitButton}\r\n    width: 100%;\r\n`;\r\n\r\nexport const AddModelButton = styled.p`\r\n    font-weight: 200;\r\n    margin: 0;\r\n    margin-right:16%;\r\n    padding: 0;\r\n    color: black;\r\n    font-size: 0.8em;\r\n    text-align: right;\r\n    cursor: pointer;\r\n    :hover {\r\n        color:grey;\r\n    }\r\n\r\n`;\r\n\r\nexport const TableContainer = styled.div`\r\n    overflow: auto;\r\n    width:100%;\r\n    padding-bottom: 2rem;\r\n`;\r\n\r\nexport const Table = styled.table`\r\n    width: 100%;\r\n    font-size: 0.875rem;\r\n    text-align: center;\r\n`;\r\n\r\nexport const TableRow = styled.tr`\r\n    :nth-child(odd){\r\n        background-color: rgba(0, 0, 0, 0.1);\r\n    }\r\n`;\r\n\r\nexport const TableHeading = styled.th`\r\n    font-weight: 600;\r\n    padding: 1rem;\r\n    background-color: #fff;\r\n`;\r\n\r\nexport const TableBody = styled.tbody`\r\n    line-height: 1.5;   \r\n`;\r\n\r\nexport const ModalDate = styled(DatePicker)`\r\n    ${inputStyles}\r\n`","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { createStructuredSelector } from \"reselect\";\r\n\r\nimport { currentMemberId } from \"../../redux/site-member/site-member.selectors\";\r\nimport { toggleAddModel } from \"../../redux/modal/modal.actions\";\r\nimport { requestModelDropDownOptions } from \"../../redux/drop-downs/drop-down.actions\";\r\n\r\nimport axios from \"axios\";\r\n\r\nimport { useAlert } from \"react-alert\";\r\n\r\n\r\nimport {\r\n  SubModalMain,\r\n  SubModalContent,\r\n  CloseButton,\r\n  Header,\r\n  Article,\r\n  FieldSet,\r\n  SubModalInput,\r\n  AddModelSubmit,\r\n} from \"./modal.styles\";\r\n\r\nconst AddModel = ({ toggleAddModel, getModelOptions, memberId }) => {\r\n  const alert = useAlert();\r\n\r\n  let [model, setModel] = useState(\"\");\r\n\r\n  const onModelChange = (event) => {\r\n    setModel(event.target.value);\r\n  };\r\n\r\n  const inputReset = () => {\r\n    model = null;\r\n    document.getElementById(\"model\").value = \"\";\r\n    document.getElementById(\"file\").value = \"\";\r\n  };\r\n\r\n  const onFileUpload = () => {\r\n\r\n    const file = document.querySelector(\"#file\").files[0];\r\n\r\n    if (!file || !model){\r\n      alert.show('Model name and image are required.', { type:'error', position:'top center' })\r\n      return;\r\n    } \r\n\r\n    const reader = new FileReader();\r\n\r\n    reader.readAsDataURL(file);\r\n\r\n    reader.onload = (event) => {\r\n      const imgElement = document.createElement(\"img\");\r\n      imgElement.src = event.target.result;\r\n\r\n      imgElement.onload = (e) => {\r\n        const canvas = document.createElement(\"canvas\");\r\n        const MAX_WIDTH = 350;\r\n        if (e.target.width > 350) {\r\n          const scaleSize = MAX_WIDTH / e.target.width;\r\n          canvas.width = MAX_WIDTH;\r\n          canvas.height = e.target.height * scaleSize;\r\n        } else {\r\n          canvas.width = e.target.width;\r\n          canvas.height = e.target.height;\r\n        }\r\n\r\n        const ctx = canvas.getContext(\"2d\");\r\n\r\n        ctx.drawImage(e.target, 0, 0, canvas.width, canvas.height);\r\n\r\n        const srcEncoded = ctx.canvas.toDataURL(e.target, \"image/jpg\");\r\n\r\n        axios({\r\n          method: \"post\",\r\n          url: `/assets/upload`,\r\n          data: {\r\n            image: srcEncoded,\r\n            model: model,\r\n            memberId: memberId,\r\n          },\r\n        });\r\n\r\n        alert.show(`${model} submitted`, {\r\n          type: \"success\",\r\n          position: \"top center\",\r\n        });\r\n\r\n        inputReset();\r\n      };\r\n    };\r\n  };\r\n\r\n  return (\r\n    <SubModalMain>\r\n      <SubModalContent>\r\n        {/* Retrieve updated list of models when modal is closed. */}\r\n        <CloseButton\r\n          onClick={() => {\r\n            toggleAddModel();\r\n            getModelOptions(memberId);\r\n          }}\r\n        >\r\n          &times;\r\n        </CloseButton>\r\n\r\n        <Header>Add Model</Header>\r\n        <Article>\r\n          <div action=\"sign-up_submit\" method=\"get\" acceptCharset=\"utf-8\">\r\n            <FieldSet>\r\n              <SubModalInput\r\n              placeholder=\"Model Name (Required)\"\r\n                id=\"model\"\r\n                type=\"text\"\r\n                name=\"model\"\r\n                onChange={onModelChange}\r\n              />\r\n\r\n              <form\r\n                className=\"flex flex-column\"\r\n                encType=\"multipart/form-data\"\r\n                method=\"POST\"\r\n              >\r\n                <SubModalInput\r\n                  id=\"file\"\r\n                  type=\"file\"\r\n                  accept=\".jpg, .jpeg, .png\"\r\n                  name=\"pic\"\r\n                />\r\n              </form>\r\n            </FieldSet>\r\n            <AddModelSubmit\r\n              type=\"Submit\"\r\n              defaultValue=\"Submit\"\r\n              onClick={onFileUpload}\r\n            />\r\n          </div>\r\n        </Article>\r\n      </SubModalContent>\r\n    </SubModalMain>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  memberId: currentMemberId,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  toggleAddModel: () => dispatch(toggleAddModel()),\r\n  getModelOptions: (memberId) => {\r\n    dispatch(requestModelDropDownOptions(memberId));\r\n  },\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddModel);\r\n","import styled , { css } from 'styled-components';\r\n\r\nconst dropdownStyles = css`\r\n  border: 1px solid rgba(0, 0, 0, 0.2);\r\n  height: 2rem;\r\n`\r\n\r\nconst homePageDropDownContainer = css`\r\n  ${dropdownStyles}\r\n  margin-bottom: 0.5rem;\r\n  @media screen and (max-width: 1500px) {\r\n    width: 85%;\r\n  }\r\n`;\r\n\r\nconst modelDropDownContainer = css`\r\n${dropdownStyles}\r\n  width: 66%;\r\n  margin-top: 1rem;\r\n  margin-left:18%;\r\n`;\r\n\r\nconst activityDropDownContainer = css`\r\n${dropdownStyles}\r\n  width: 100%;\r\n  margin-top: 1rem;\r\n`;\r\n\r\nconst getDropDownStyles = (props) => {\r\n    if (props.isHomePage) {\r\n        return homePageDropDownContainer;\r\n    };\r\n\r\n    if (props.isModelSelection) {\r\n      return modelDropDownContainer;\r\n    };\r\n\r\n    if (props.isActivitySelection) {\r\n      return activityDropDownContainer\r\n    }\r\n};\r\n\r\nexport const DropDownContainer = styled.div`\r\n  ${getDropDownStyles}\r\n`\r\nexport const DropDown = styled.select`\r\n  width: 100%;\r\n  height: 100%;\r\n  border: none;\r\n  font-size: 1rem;\r\n  font-family: sans-serif;\r\n  padding-left: 0.2rem;\r\n\r\n  &:focus {\r\n    padding-left: 0.2rem;\r\n    border: 0.5px solid black;\r\n  }\r\n`","import React from 'react'\r\nimport { DropDownContainer, DropDown } from \"./drop-down.styles\";\r\n\r\nconst CustomDropDown =({ id, optionList, ...props }) => {\r\n    \r\n    return(\r\n        <DropDownContainer autoFocus {...props} >\r\n            <DropDown id={id} {...props}>\r\n                <option> </option>\r\n                {   \r\n                    optionList ? (\r\n                        optionList.map(option => (\r\n                    <option key={option.id} text={option.id}>{option.id}</option> \r\n                    ))\r\n                    ):(\r\n                    <option> </option>\r\n                    )\r\n                }\r\n            </DropDown>\r\n        </DropDownContainer>\r\n    )\r\n}\r\n\r\nexport default CustomDropDown;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {connect} from 'react-redux';\r\nimport { createStructuredSelector } from \"reselect\";\r\n\r\nimport { currentMemberId } from \"../../redux/site-member/site-member.selectors\";\r\nimport { selectModels } from \"../../redux/drop-downs/drop-down.selectors\";\r\nimport { seenAddModel } from \"../../redux/modal/modal.selectors\";\r\nimport { toggleAddModel, toggleAddUnit } from \"../../redux/modal/modal.actions\";\r\nimport { requestAssetDropDownOptions, requestModelDropDownOptions } from '../../redux/drop-downs/drop-down.actions';\r\n\r\nimport { useAlert } from 'react-alert';\r\n\r\nimport { httpCreateNewAsset } from \"../../services/api\";\r\n\r\nimport AddModel from './add-model.modal';\r\nimport CustomDropDown from '../custom-drop-down/custom-drop-down.component'\r\n\r\nimport { ModalMain, ModalContent, CloseButton, Header, Article,\r\n        FieldSet, Input, AddModelButton, Submit} from \"./modal.styles\";\r\n\r\nconst AddUnit = ( {toggleAddUnit, toggleAddModel, seenAddModel, getAssetOptions, getModelOptions, models, memberId}) => {\r\n\r\n  const alert = useAlert();\r\n\r\n  useEffect(() => {\r\n    getModelOptions(memberId);\r\n  }, [getModelOptions, memberId]);\r\n\r\n  let [assetID,     setAssetID    ] = useState('');\r\n  let [assetName,   setAssetName  ] = useState('');\r\n  let [assetModel,  setAssetModel ] = useState([]);\r\n  let [assetSerial, setAssetSerial] = useState('');\r\n\r\n  const onAssetidChange = (event) => {\r\n    setAssetID(event.target.value); \r\n  };\r\n\r\n  const onAssetNameChange = (event) => {\r\n    setAssetName(event.target.value);\r\n  };\r\n\r\n  const onAssetModelChange = (event) => {\r\n    setAssetModel(event.target.value);\r\n  };\r\n\r\n const onAssetSerialChange = (event) => {\r\n    setAssetSerial(event.target.value);\r\n  };\r\n\r\n  const inputReset = () => {\r\n    assetID = null;\r\n    assetName = null;\r\n    assetSerial = null;\r\n    document.getElementById('asset-id').value = '';\r\n    document.getElementById('asset-name').value = '';\r\n    document.getElementById('asset-serial').value = '';\r\n    document.getElementById('asset-model').value = 'Select A Model';\r\n    document.getElementById('asset-id').focus();\r\n  };\r\n\r\n  const submitAsset = (event) => {\r\n    \r\n    if (assetID && assetName && assetSerial && assetModel.length && assetModel !== 'Select a model'){\r\n      httpCreateNewAsset(assetID, assetName, assetModel, assetSerial, memberId);\r\n      alert.show(`${assetID} submitted`, {type: 'success', position:'top center'});\r\n      inputReset();\r\n    } else {\r\n      alert.show('Please ensure that all fields are filled out and model is selected.', {type: 'error', position:'top center'});\r\n    }\r\n  };\r\n  \r\n  return (\r\n   <ModalMain>\r\n      <ModalContent>\r\n        {/* Retrieve updated list of assets when modal is closed. */}\r\n        <CloseButton onClick={() => {toggleAddUnit(); getAssetOptions(memberId);}}>&times;</CloseButton>\r\n        <Header>Add Asset</Header>\r\n        <Article>\r\n          <div action=\"sign-up_submit\" method=\"get\" acceptCharset=\"utf-8\">\r\n            <FieldSet id=\"sign_up\">\r\n                <Input onChange={onAssetidChange}   placeholder=\"Asset ID (Required)\" type=\"text\" name=\"asset-id\"  id=\"asset-id\"/>\r\n                <Input onChange={onAssetNameChange} placeholder=\"Asset Name (Required)\" type=\"text\" name=\"asset-name\"  id=\"asset-name\"/>\r\n                <CustomDropDown isModelSelection onChange={onAssetModelChange} defaultOption=\"Model (Required)\" name=\"asset-model\"  id=\"asset-model\" optionList={models}/>\r\n                <AddModelButton onClick={toggleAddModel}>Add New Model</AddModelButton>\r\n                <Input onChange={onAssetSerialChange} placeholder=\"Serial Number (Required)\" type=\"text\" name=\"asset-serial\"  id=\"asset-serial\"/>\r\n            </FieldSet>\r\n            <Submit type = \"Submit\" defaultValue=\"Submit\" onClick={() => submitAsset()} />\r\n          </div>\r\n        </Article>\r\n      </ModalContent>\r\n      {seenAddModel ? <AddModel/> : null}\r\n   </ModalMain>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  memberId: currentMemberId,\r\n  models: selectModels,\r\n  seenAddModel\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    toggleAddUnit   : () => {dispatch(toggleAddUnit())},\r\n    toggleAddModel  : () => {dispatch(toggleAddModel())},\r\n    getAssetOptions : (memberId) => { dispatch(requestAssetDropDownOptions(memberId))},\r\n    getModelOptions : (memberId) => { dispatch(requestModelDropDownOptions(memberId))}\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddUnit);","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { createStructuredSelector } from \"reselect\";\r\n\r\nimport { currentMemberId } from \"../../redux/site-member/site-member.selectors\";\r\nimport { toggleAddUser } from \"../../redux/modal/modal.actions\";\r\nimport { requestUserDropDownOptions } from '../../redux/drop-downs/drop-down.actions';\r\n\r\nimport { useAlert } from 'react-alert';\r\n\r\nimport { httpCreateNewUser } from \"../../services/api\";\r\n\r\nimport { ModalMain, ModalContent, CloseButton, Header, Article, FieldSet, Input,Submit } from \"./modal.styles\";\r\n\r\nconst AddUser = ( {toggleAddUser, getUserOptions, memberId} ) =>{\r\n\r\n  const alert = useAlert();\r\n\r\n  let [userID, setUserID] = useState('');\r\n  let [fname, setFname] = useState('');\r\n  let [lname, setLname] = useState('');\r\n\r\n  const onUseridChange = (event) => {\r\n    setUserID(event.target.value); \r\n  } ;\r\n\r\n  const onFnameChange = (event) => {\r\n    setFname(event.target.value);\r\n  };\r\n\r\n const onLnameChange = (event) => {\r\n    setLname(event.target.value); \r\n  };\r\n\r\n  const inputReset = () => {\r\n    userID = null;\r\n    fname = null;\r\n    lname = null;\r\n    document.getElementById('userid').value = '';\r\n    document.getElementById('fname').value = '';\r\n    document.getElementById('lname').value = '';\r\n    document.getElementById('userid').focus();\r\n  };\r\n\r\n  const submitUser = (event) => {\r\n    if (userID && fname && lname && memberId){\r\n      httpCreateNewUser(userID, fname, lname, memberId);\r\n      alert.show(`${userID} submitted.`, {type: 'success', position:'top center'});\r\n      inputReset();\r\n    } else {\r\n      alert.show('Please ensure that all fields are filled out.', {type: 'error', position:'top center'});\r\n    }\r\n  };\r\n  \r\n  return (\r\n   <ModalMain>\r\n      <ModalContent>\r\n        {/* Retrieve updated list of users when modal is closed. */}\r\n        <CloseButton onClick={() => {toggleAddUser(); getUserOptions(memberId);}}>&times;</CloseButton>\r\n        <Header>Add User</Header>\r\n        <Article>\r\n          <div action=\"sign-up_submit\" method=\"get\" acceptCharset=\"utf-8\">\r\n            <FieldSet id=\"sign_up\">\r\n                <Input onChange={onUseridChange} placeholder=\"User ID (Required)\" type=\"text\" name=\"userid\" id=\"userid\"/>\r\n                <Input onChange={onFnameChange}  placeholder=\"First Name (Required)\"  type=\"text\" name=\"fname\"  id=\"fname\" />\r\n                <Input onChange={onLnameChange}  placeholder=\"Last Name (Required)\" type=\"text\" name=\"lname\"  id=\"lname\"/>\r\n            </FieldSet>\r\n            <Submit onClick={() => submitUser()} type = \"submit\" defaultValue=\"Submit\"/>\r\n          </div>\r\n        </Article>\r\n      </ModalContent>\r\n   </ModalMain>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  memberId: currentMemberId\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  toggleAddUser : () => dispatch(toggleAddUser()),\r\n  getUserOptions: (memberId) => { dispatch(requestUserDropDownOptions(memberId))}\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddUser);","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { createStructuredSelector } from \"reselect\";\r\n\r\nimport { currentMemberId } from \"../../redux/site-member/site-member.selectors\";\r\nimport { toggleUnitsInUse } from \"../../redux/modal/modal.actions\";\r\n\r\nimport axios from \"axios\";\r\n\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport {\r\n  ModalMain,\r\n  ModalReportContent,\r\n  CloseButton,\r\n  Header,\r\n  TableContainer,\r\n  Table,\r\n  TableHeading,\r\n  TableRow,\r\n  TableBody,\r\n} from \"./modal.styles\";\r\n\r\nconst UnitsInUse = ({ toggleUnitsInUse, currentMemberId }) => {\r\n  const [data, setData] = useState();\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const result = await axios({\r\n        method: \"post\",\r\n        url: `/reports/assetsinuse`,\r\n        data: {\r\n          memberId: currentMemberId,\r\n        },\r\n      });\r\n\r\n      setData(result.data);\r\n    };\r\n\r\n    fetchData(currentMemberId);\r\n  }, [currentMemberId]);\r\n\r\n  return (\r\n    <ModalMain>\r\n      <ModalReportContent>\r\n        <CloseButton onClick={toggleUnitsInUse}>&times;</CloseButton>\r\n        <Header>Assets in Use</Header>\r\n        <TableContainer>\r\n          {data ? (\r\n            <Table cellSpacing=\"0\">\r\n              <thead>\r\n                <TableRow>\r\n                  <TableHeading>Asset ID</TableHeading>\r\n                  <TableHeading>Asset Name</TableHeading>\r\n                  <TableHeading>Model</TableHeading>\r\n                  <TableHeading>Serial</TableHeading>\r\n                  <TableHeading>Status</TableHeading>\r\n                  <TableHeading>Time out (hrs)</TableHeading>\r\n                </TableRow>\r\n              </thead>\r\n              <TableBody>\r\n                {data.map((unit) => (\r\n                  <TableRow key={unit.id}>\r\n                    <td>{unit.id}</td>\r\n                    <td>{unit.name}</td>\r\n                    <td>{unit.model}</td>\r\n                    <td>{unit.serial}</td>\r\n                    <td>{unit.status}</td>\r\n                    {/* Calculating hours since check out */}\r\n                    <td>\r\n                      {Math.floor(\r\n                        (Date.now() - Date.parse(unit.last_checkout)) /\r\n                          (1000 * 60 * 60)\r\n                      )}\r\n                    </td>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          ) : (\r\n            <Loader\r\n              type=\"Puff\"\r\n              color=\"#4178BE\"\r\n              height={70}\r\n              width={70}\r\n              className=\"loader\"\r\n              style={{\r\n                position: \"absolute\",\r\n                top: \"25%\",\r\n                left: \"50%\",\r\n                margin: \"-25px 0 0 -25px\",\r\n              }}\r\n            />\r\n          )}\r\n        </TableContainer>\r\n      </ModalReportContent>\r\n    </ModalMain>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  currentMemberId,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  toggleUnitsInUse: () => dispatch(toggleUnitsInUse()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UnitsInUse);\r\n","import styled, { css } from 'styled-components';\r\n\r\nconst mediaQuery = css`\r\n  @media screen and (max-width: 1500px) {\r\n      max-width: 600px;\r\n      min-width: 350px;\r\n`;\r\n\r\nexport const ActionPanelContainer = styled.div`\r\n    width: 30%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: flex-end;\r\n    align-items: flex-start;\r\n\r\n    @media screen and (max-width: 1500px) {\r\n      width: 100%;\r\n      justify-content: center;\r\n      align-items: center;\r\n`;\r\n\r\nexport const ActionPanelInnerContainer = styled.div`\r\n    display:flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    background-color: white;\r\n    width: 80%;\r\n    border: 2px solid black;\r\n    margin-bottom: 1em;\r\n    border-bottom-left-radius: 8px;\r\n    border-bottom-right-radius: 8px;\r\n\r\n    ${mediaQuery}\r\n`;\r\n  \r\nexport const ActionHeader = styled.header`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    border: 2px solid black;\r\n    background-color: #1b4275;\r\n    color: white;\r\n    font-size: 1.1rem;\r\n    width: 80%;\r\n    height: 40px;\r\n    font-weight: bold;\r\n    border-top-left-radius: 8px;\r\n    border-top-right-radius: 8px;\r\n\r\n    ${mediaQuery}\r\n`;\r\n\r\nexport const ReportLink = styled.p`\r\n    font-size: 1.1rem;\r\n    font-weight: 400;\r\n    color: #363636;\r\n    cursor: pointer;\r\n    margin: .8rem;\r\n    :hover {\r\n        color: lightgrey;\r\n    }\r\n`;","import React from 'react'\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { toggleAvailableUnits, toggleUnitsInUse, toggleQuarantinedUnits, \r\n    toggleAddUser, toggleAddUnit, toggleActvityTracking \r\n    } from \"../../redux/modal/modal.actions\";\r\n\r\nimport { \r\n    ActionPanelContainer, \r\n    ActionPanelInnerContainer,\r\n    ActionHeader ,ReportLink \r\n} from \"./action-panel.styles\";\r\n\r\nconst ReportsContainer = ({ toggleAvailableUnits, toggleUnitsInUse, toggleQuarantinedUnits, toggleAddUser, toggleAddUnit, toggleActvityTracking }) => {\r\n    return (\r\n        <ActionPanelContainer>\r\n            <ActionHeader>ACTION PANEL</ActionHeader>\r\n            <ActionPanelInnerContainer>\r\n                <ReportLink onClick={toggleAddUser}>ADD USER</ReportLink>\r\n                <ReportLink onClick={toggleAddUnit}>ADD ASSET</ReportLink>\r\n                <ReportLink onClick={toggleUnitsInUse}>ASSETS IN USE</ReportLink>\r\n                <ReportLink onClick={toggleAvailableUnits}>AVAILABLE ASSETS</ReportLink>\r\n                <ReportLink onClick={toggleQuarantinedUnits}>QUARANTINED ASSETS</ReportLink>\r\n                <ReportLink onClick={toggleActvityTracking}>ACTIVITY TRACKING </ReportLink>\r\n            </ActionPanelInnerContainer>\r\n        </ActionPanelContainer>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    toggleAvailableUnits  : () => dispatch(toggleAvailableUnits()),\r\n    toggleQuarantinedUnits: () => dispatch(toggleQuarantinedUnits()),\r\n    toggleUnitsInUse      : () => dispatch(toggleUnitsInUse()),\r\n    toggleAddUser         : () => dispatch(toggleAddUser()),\r\n    toggleAddUnit         : () => dispatch(toggleAddUnit()),\r\n    toggleActvityTracking : () => dispatch(toggleActvityTracking())\r\n  });\r\n\r\nexport default connect(null, mapDispatchToProps)(ReportsContainer);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { createStructuredSelector } from \"reselect\";\r\n\r\nimport { currentMemberId } from \"../../redux/site-member/site-member.selectors\";\r\nimport { seenAvailableAssets } from \"../../redux/modal/modal.selectors\";\r\nimport { toggleAvailableUnits } from \"../../redux/modal/modal.actions\";\r\n\r\nimport axios from \"axios\";\r\n\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport {\r\n  ModalMain,\r\n  ModalReportContent,\r\n  CloseButton,\r\n  Header,\r\n  TableContainer,\r\n  Table,\r\n  TableHeading,\r\n  TableRow,\r\n  TableBody,\r\n} from \"./modal.styles\";\r\n\r\nconst AvailableUnits = ({ toggleAvailableUnits, memberId }) => {\r\n  const [data, setData] = useState();\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const result = await axios({\r\n        method: \"post\",\r\n        url: `/reports/availableassets`,\r\n        data: {\r\n          memberId: memberId,\r\n        },\r\n      });\r\n      setData(result.data);\r\n    };\r\n\r\n    fetchData(memberId);\r\n  }, [memberId]);\r\n\r\n  return (\r\n    <ModalMain>\r\n      <ModalReportContent>\r\n        <CloseButton onClick={toggleAvailableUnits}>&times;</CloseButton>\r\n        <Header>Available Units</Header>\r\n        <TableContainer>\r\n          {data ? (\r\n            <Table cellSpacing=\"0\">\r\n              <thead>\r\n                <TableRow>\r\n                  <TableHeading>Asset ID</TableHeading>\r\n                  <TableHeading>Asset Name</TableHeading>\r\n                  <TableHeading>Model</TableHeading>\r\n                  <TableHeading>Serial</TableHeading>\r\n                </TableRow>\r\n              </thead>\r\n              <TableBody>\r\n                {data.map((unit) => (\r\n                  <TableRow key={unit.id}>\r\n                    <td>{unit.id}</td>\r\n                    <td>{unit.name}</td>\r\n                    <td>{unit.model}</td>\r\n                    <td>{unit.serial}</td>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          ) : (\r\n            <Loader\r\n              type=\"Puff\"\r\n              color=\"#4178BE\"\r\n              height={70}\r\n              width={70}\r\n              className=\"loader\"\r\n              style={{\r\n                position: \"absolute\",\r\n                top: \"20%\",\r\n                left: \"50%\",\r\n                margin: \"-25px 0 0 -25px\",\r\n              }}\r\n            />\r\n          )}\r\n        </TableContainer>\r\n      </ModalReportContent>\r\n    </ModalMain>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  memberId: currentMemberId,\r\n  seenAvailableAssets,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  toggleAvailableUnits: () => dispatch(toggleAvailableUnits()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AvailableUnits);\r\n","const selectedListItemID = (dropDownListName) => {\r\n    var node = document.getElementById(dropDownListName);\r\n    var value = node.options[node.selectedIndex].text;\r\n    return value\r\n}\r\n\r\nexport default selectedListItemID;","import styled from 'styled-components';\r\n\r\nexport const DropDownContainer = styled.div`\r\n    padding-top: 1em;\r\n    display: flex;\r\n    align-items: flex-end;\r\n    width: 30%;\r\n    flex-direction: column;\r\n\r\n    @media screen and (max-width: 1500px) {\r\n      width: 100%;\r\n      justify-content: center;\r\n      align-items: center;\r\n`\r\nexport const DropDownInner = styled.div`\r\n    height: auto;\r\n    background-color: white;\r\n    width: 85%;\r\n    border: 2px solid black;\r\n    border-radius: 8px;\r\n    padding: 1rem;\r\n    padding-top: 0;\r\n\r\n    @media screen and (max-width: 1500px) {\r\n      display: flex;\r\n      flex-direction: column;\r\n      max-width: 600px;\r\n      min-width: 350px;\r\n      margin-top: 2em;\r\n      padding-DropDown: 0;\r\n      padding-right: 0;\r\n      align-items: center;\r\n`\r\n\r\nexport const Tag = styled.span`\r\n    padding-top: .8rem;\r\n    display: block;\r\n    font-size: 1.25rem;\r\n    font-weight: bold;\r\n    color: #235494;\r\n    margin-bottom: 0.5rem;\r\n`","import React, {useEffect}  from 'react'\r\nimport { connect } from \"react-redux\";\r\nimport { createStructuredSelector } from 'reselect';\r\n\r\nimport  selectedListItemID  from \"../custom-drop-down/drop-down.utils\";\r\n\r\nimport { requestSelectedUserData } from \"../../redux/user/user.actions\";\r\nimport { requestSelectedAssetData } from \"../../redux/asset/asset.actions\";\r\n\r\nimport { \r\n    requestAssetDropDownOptions, \r\n    requestUserDropDownOptions \r\n    } from '../../redux/drop-downs/drop-down.actions'\r\n\r\nimport { currentMemberId } from \"../../redux/site-member/site-member.selectors\";\r\nimport { selectUsers, selectAssets } from \"../../redux/drop-downs/drop-down.selectors\";\r\n\r\nimport CustomDropDown from '../custom-drop-down/custom-drop-down.component';\r\nimport {DropDownContainer, DropDownInner, Tag } from \"./drop-down-container.styles\";\r\n\r\n\r\nconst ScanboxContainer = ({ \r\n    memberId, assets, users, \r\n    requestAssetDropDownOptions, \r\n    requestUserDropDownOptions, \r\n    requestSelectedAssetData, \r\n    requestSelectedUserData}) => {\r\n    \r\n    useEffect(() => {\r\n        // Get Data from /allunits.\r\n        requestAssetDropDownOptions(memberId)\r\n      }, [requestAssetDropDownOptions, memberId]); //\r\n\r\n      useEffect(() => {\r\n        // Get Data from /allusers when component mounts.\r\n        requestUserDropDownOptions(memberId)\r\n      }, [requestUserDropDownOptions, memberId]);  \r\n\r\n    return (\r\n        <DropDownContainer>\r\n            <DropDownInner>\r\n                <Tag>ASSET ID</Tag>\r\n                <CustomDropDown isHomePage  onChange={() => requestSelectedAssetData(selectedListItemID('asset-list'), memberId)} id=\"asset-list\" optionList={assets}/> \r\n                <Tag>USER ID</Tag>\r\n                <CustomDropDown isHomePage onChange={requestSelectedUserData} id=\"user-list\" optionList={users}/> \r\n            </DropDownInner>\r\n        </DropDownContainer>\r\n    )}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    memberId: currentMemberId,\r\n    assets: selectAssets,\r\n    users: selectUsers\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    requestSelectedAssetData: (assetId, ownerId) => { dispatch(requestSelectedAssetData({assetId, ownerId}))},\r\n    requestAssetDropDownOptions: (memberId) => { dispatch(requestAssetDropDownOptions(memberId))},\r\n    requestUserDropDownOptions: (memberId) => { dispatch( requestUserDropDownOptions(memberId)) },\r\n    requestSelectedUserData: () => { dispatch( requestSelectedUserData ( selectedListItemID('user-list') ) )},\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ScanboxContainer);","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { createStructuredSelector } from \"reselect\";\r\n\r\nimport { currentMemberId } from \"../../redux/site-member/site-member.selectors\";\r\nimport { seenQuarantinedAssets } from \"../../redux/modal/modal.selectors\";\r\nimport { toggleQuarantinedUnits } from \"../../redux/modal/modal.actions\";\r\n\r\nimport axios from \"axios\";\r\n\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport {\r\n  ModalMain,\r\n  ModalReportContent,\r\n  CloseButton,\r\n  Header,\r\n  TableContainer,\r\n  Table,\r\n  TableHeading,\r\n  TableRow,\r\n  TableBody,\r\n} from \"./modal.styles\";\r\n\r\nconst QuarantinedUnits = ({ toggleQuarantinedUnits, memberId }) => {\r\n  const [data, setData] = useState();\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const result = await axios({\r\n        method: \"post\",\r\n        url: `/reports/quarantinedassets`,\r\n        data: {\r\n          memberId: memberId,\r\n        },\r\n      });\r\n\r\n      setData(result.data);\r\n    };\r\n\r\n    fetchData(memberId);\r\n  }, [memberId]);\r\n\r\n  return (\r\n    <ModalMain>\r\n      <ModalReportContent>\r\n        <CloseButton onClick={toggleQuarantinedUnits}>&times;</CloseButton>\r\n        <Header>Quarantined Assets</Header>\r\n        <TableContainer>\r\n          {data ? (\r\n            <Table cellSpacing=\"0\">\r\n              <thead>\r\n                <TableRow>\r\n                  <TableHeading>Asset ID</TableHeading>\r\n                  <TableHeading>Asset Name</TableHeading>\r\n                  <TableHeading>Model</TableHeading>\r\n                  <TableHeading>Serial</TableHeading>\r\n                  <TableHeading>Comments</TableHeading>\r\n                </TableRow>\r\n              </thead>\r\n              <TableBody>\r\n                {data.map((unit) => (\r\n                  <TableRow key={unit.id}>\r\n                    <td>{unit.id}</td>\r\n                    <td>{unit.name}</td>\r\n                    <td>{unit.model}</td>\r\n                    <td>{unit.serial}</td>\r\n                    <td>{unit.comments}</td>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          ) : (\r\n            <Loader\r\n              type=\"Puff\"\r\n              color=\"#4178BE\"\r\n              height={70}\r\n              width={70}\r\n              className=\"loader\"\r\n              style={{\r\n                position: \"absolute\",\r\n                top: \"20%\",\r\n                left: \"50%\",\r\n                margin: \"-25px 0 0 -25px\",\r\n              }}\r\n            />\r\n          )}\r\n        </TableContainer>\r\n      </ModalReportContent>\r\n    </ModalMain>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  memberId: currentMemberId,\r\n  seenQuarantinedAssets,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  toggleQuarantinedUnits: () => dispatch(toggleQuarantinedUnits()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(QuarantinedUnits);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { createStructuredSelector } from \"reselect\";\r\n\r\nimport { currentMemberId } from \"../../redux/site-member/site-member.selectors\";\r\nimport { toggleActvityReport } from \"../../redux/modal/modal.actions\";\r\n\r\nimport axios from \"axios\";\r\n\r\nimport Loader from \"react-loader-spinner\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\n\r\nimport {\r\n  ModalMain,\r\n  ModalReportContent,\r\n  CloseButton,\r\n  Header,\r\n  TableContainer,\r\n  Table,\r\n  TableHeading,\r\n  TableRow,\r\n  TableBody,\r\n} from \"./modal.styles\";\r\n\r\nconst ActivityReport = ({\r\n  toggleActvityReport,\r\n  currentMemberId,\r\n  startDate,\r\n  endDate,\r\n  userID,\r\n  assetID,\r\n}) => {\r\n  const [data, setData] = useState();\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const result = await axios({\r\n        method: \"post\",\r\n        url: `/reports/activitytracking`,\r\n        data: {\r\n          id: currentMemberId,\r\n          startDate: startDate,\r\n          endDate: endDate,\r\n          username: userID,\r\n          assetID: assetID,\r\n        },\r\n      });\r\n      setData(result.data);\r\n    };\r\n\r\n    fetchData(currentMemberId);\r\n  }, [currentMemberId, startDate, endDate, userID, assetID]);\r\n\r\n  return (\r\n    <ModalMain>\r\n      <ModalReportContent>  \r\n        <CloseButton onClick={toggleActvityReport}>&times;</CloseButton>\r\n        <Header>Activity Tracking Report</Header>\r\n        <TableContainer>\r\n          {data ? (\r\n            <Table cellSpacing=\"0\">\r\n              <thead>\r\n                <TableRow>\r\n                  <TableHeading>User ID</TableHeading>\r\n                  <TableHeading>Asset ID</TableHeading>\r\n                  <TableHeading>Asset Name</TableHeading>\r\n                  <TableHeading>Asset Serial</TableHeading>\r\n                  <TableHeading>Model</TableHeading>\r\n                  <TableHeading>Comments</TableHeading>\r\n                  <TableHeading>Action</TableHeading>\r\n                  <TableHeading>Created DTTM</TableHeading>\r\n                </TableRow>\r\n              </thead>\r\n              <TableBody>\r\n                {data.map((data) => (\r\n                  <TableRow key={data.id}>\r\n                    <td>{data.user_id}</td>\r\n                    <td>{data.asset_id}</td>\r\n                    <td>{data.asset_name}</td>\r\n                    <td>{data.asset_serial}</td>\r\n                    <td>{data.model_name}</td>\r\n                    <td>{data.comments}</td>\r\n                    <td>{data.action}</td>\r\n                    <td>{new Date(data.action_dttm).toLocaleString()}</td>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          ) : (\r\n            <Loader\r\n              type=\"Puff\"\r\n              color=\"#4178BE\"\r\n              height={70}\r\n              width={70}\r\n              className=\"loader\"\r\n              style={{ position: \"absolute\", top: \"20%\", left: \"50%\", margin: \"-25px 0 0 -25px\" }}\r\n            />\r\n          )}\r\n        </TableContainer>\r\n      </ModalReportContent>\r\n    </ModalMain>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  currentMemberId,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  toggleActvityReport: () => dispatch(toggleActvityReport()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ActivityReport);\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { createStructuredSelector } from 'reselect';\r\n\r\nimport { currentMemberId } from \"../../redux/site-member/site-member.selectors\";\r\nimport { selectAssets } from \"../../redux/drop-downs/drop-down.selectors\";\r\nimport { selectUsers } from \"../../redux/drop-downs/drop-down.selectors\";\r\nimport { seenActivityReport } from \"../../redux/modal/modal.selectors\";\r\nimport ActivityReport from \"./activity-report.modal\";\r\nimport { toggleActvityTracking, toggleActvityReport } from \"../../redux/modal/modal.actions\";\r\n\r\nimport setHours from \"date-fns/setHours\";\r\nimport setMinutes from \"date-fns/setMinutes\";\r\n\r\nimport CustomDropDown from '../custom-drop-down/custom-drop-down.component';\r\n\r\nimport { ModalMain, ModalContent, CloseButton, Header, Article,\r\n  FieldSet, Label, ActivitySubmit, ModalDate\r\n} from \"./modal.styles\";\r\n\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nconst ActivityTracking = ( {toggleActvityTracking, toggleActvityReport, assets, users, seenActivityReport} ) =>{\r\n\r\n\r\n  const [startDate, setStartDate] = useState(\r\n    setHours(setMinutes(new Date(), 0), 24)\r\n  );\r\n  const [endDate, setEndDate] = useState(\r\n    setHours(setMinutes(new Date(), 0), 24)\r\n  );\r\n\r\n  const filterPassedTime = time => {\r\n    const currentDate = new Date();\r\n    const selectedDate = new Date(time);\r\n\r\n    return currentDate.getTime() < selectedDate.getTime();\r\n  }\r\n\r\n  const [assetID, setAssetID] = useState('%');\r\n  const [userID, setUserID] = useState('%');\r\n\r\n\r\n  const onAssetIDChange = (event) => {\r\n    setAssetID(event.target.value);\r\n  };\r\n\r\n  const onUserIDChange = (event) => {\r\n    setUserID(event.target.value);\r\n  };\r\n\r\n  return (\r\n   <ModalMain>\r\n      <ModalContent>\r\n        {/* Retrieve updated list of users when modal is closed. */}\r\n        <CloseButton onClick={toggleActvityTracking}>&times;</CloseButton>\r\n        <Header>Activity Tracking</Header>\r\n        <Article>\r\n          <div action=\"activity-tracking\" method=\"get\" acceptCharset=\"utf-8\">\r\n            <FieldSet id=\"activity-tracking\">\r\n                <Label htmlFor=\"start-date\">Start Date</Label>\r\n                <ModalDate \r\n                  selected={startDate} \r\n                  timeInputLabel=\"Time:\"\r\n                  dateFormat=\"MM/dd/yyyy h:mm aa\"\r\n                  showTimeInput\r\n                  filterTime={filterPassedTime}\r\n                  onChange={date => setStartDate(date)} \r\n                  fixedHeight\r\n                />\r\n                <Label htmlFor=\"end-date\">End Date</Label>\r\n                <ModalDate\r\n                  selected={endDate}       \r\n                  timeInputLabel=\"Time:\"\r\n                  dateFormat=\"MM/dd/yyyy h:mm aa\"\r\n                  showTimeInput \r\n                  onChange={date => setEndDate(date)} \r\n                  fixedHeight\r\n                />\r\n                <Label htmlFor=\"asset-id\">Asset ID</Label>\r\n                <CustomDropDown isActivitySelection onChange={onAssetIDChange} type=\"text\" name=\"asset-id\"  id=\"asset-id\" optionList={assets}/>\r\n                <Label htmlFor=\"user-id\">User ID</Label>\r\n                <CustomDropDown isActivitySelection onChange={onUserIDChange} type=\"text\" name=\"user-id\"  id=\"user-id\" optionList={users}/>\r\n            </FieldSet>\r\n            <ActivitySubmit onClick={toggleActvityReport} type = \"submit\" defaultValue=\"Submit\"/>\r\n          </div>\r\n        </Article>\r\n      </ModalContent>\r\n      {\r\n        seenActivityReport ? \r\n        <ActivityReport  \r\n          startDate={startDate.getTime()} \r\n          endDate={endDate.getTime()}\r\n          assetID={assetID}\r\n          userID={userID} \r\n          /> \r\n        : null\r\n      }\r\n   </ModalMain>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  memberId: currentMemberId,\r\n  assets: selectAssets,\r\n  users: selectUsers,\r\n  seenActivityReport\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  toggleActvityTracking : () => dispatch(toggleActvityTracking()),\r\n  toggleActvityReport : () => dispatch(toggleActvityReport())\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ActivityTracking);","import styled from 'styled-components';\r\n\r\nexport const HomepageContainer = styled.div`\r\n  background-color: rgb(243, 243, 243);\r\n  display: flex;\r\n  flex-direction: row;\r\n  flex-flow: wrap;\r\n`;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\n\r\nimport { \r\n    seenAvailableAssets, \r\n    seenAssetsInUse, \r\n    seenQuarantinedAssets, \r\n    seenAddUser, \r\n    seenAddAsset, \r\n    seenActivityParameters \r\n} from \"../../redux/modal/modal.selectors\";\r\n\r\nimport Center from '../../components/asset-container/asset-container.component';\r\nimport AddUnit from '../../components/modals/add-asset.modal';\r\nimport AddUser from '../../components/modals/add-user.modal';\r\nimport UnitsInUse from '../../components/modals/assets-in-use.modal';\r\nimport ActionPanel from '../../components/action-panel/action-panel.component';\r\nimport AvailableUnits from '../../components/modals/available-assets.modal';\r\nimport ScanboxContainer from '../../components/drop-down-container/drop-down-container.component'\r\nimport QuarantinedUnits from '../../components/modals/quarantined-assets.modal';\r\nimport ActivityTracking from '../../components/modals/activity-tracking.modal';\r\n\r\nimport { HomepageContainer } from \"./homepage.styles\";\r\n\r\nconst HomePage = ({\r\n    seenAvailableAssets, \r\n    seenAssetsInUse, \r\n    seenQuarantinedAssets, \r\n    seenAddUser, \r\n    seenAddAsset, \r\n    seenActivityParameters\r\n    }) => {\r\n\r\n    return (\r\n        <HomepageContainer>\r\n            <ScanboxContainer/>\r\n            <Center/>\r\n            <ActionPanel    />\r\n            {/* Toggle the Action Panel Modals */}\r\n            {seenAddUser ? <AddUser/> : null}\r\n            {seenAddAsset ? <AddUnit/> : null}\r\n            {seenAssetsInUse ? <UnitsInUse/> : null}\r\n            {seenAvailableAssets ? <AvailableUnits/> : null}\r\n            {seenQuarantinedAssets ? <QuarantinedUnits/> : null}\r\n            {seenActivityParameters ? <ActivityTracking/> : null}\r\n        </HomepageContainer>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    seenAvailableAssets,\r\n    seenAssetsInUse,\r\n    seenQuarantinedAssets,\r\n    seenAddUser,\r\n    seenAddAsset,\r\n    seenActivityParameters\r\n})\r\n\r\nexport default connect(mapStateToProps)(HomePage);"],"sourceRoot":""}