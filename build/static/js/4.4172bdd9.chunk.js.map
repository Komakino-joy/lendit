{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","pages/register/register.styles.jsx","images/info_icon.svg","images/password_tooltip.svg","pages/register/register.component.jsx"],"names":["_arrayLikeToArray","arr","len","length","i","arr2","Array","_slicedToArray","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","err","o","minLen","n","prototype","toString","call","slice","constructor","name","from","test","TypeError","RegistrationPageBody","styled","div","backgroundImage","RegistrationLegend","legend","RegistrationArticle","article","RegistrationMain","main","RegistrationFieldSet","fieldset","RegistrationInput","label","input","RegistrationSubmit","SignInLinkContainer","SignInLink","span","NameFieldContainer","NameField","Email","Password","PasswordRules","ToolTip","InfoIcon","img","connect","dispatch","registrationStart","userRegistrationInfo","signInStart","emailAndPassword","history","useState","fname","setFname","lname","setLname","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","failedPassword","setFailedPassword","toolTipVisibility","setToolTipVisibility","alert","useAlert","handleChange","event","target","toLowerCase","timeout","ms","Promise","resolve","setTimeout","onSubmitRegister","a","show","type","position","placeholder","id","onChange","style","marginLeft","src","infoIconSvg","alt","onMouseOver","onMouseOut","passwordTooltip","onClick","className"],"mappings":"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","file":"static/js/4.4172bdd9.chunk.js","sourcesContent":["export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import styled from 'styled-components';\r\nimport backgroundImage from '../../images/background.svg';\r\n\r\nexport const RegistrationPageBody = styled.div`\r\n    height:100vh;\r\n    display:flex;\r\n    flex-direction: column;\r\n    :before {\r\n        content: ' ';\r\n        display: block;\r\n        position: absolute;\r\n        left: 0;\r\n        top: 0;\r\n        width: 100%;\r\n        height: 100%;\r\n        opacity: 0.5;\r\n        background-image: url(${backgroundImage}); \r\n        background-repeat: no-repeat;\r\n        background-position: 50% 0;\r\n        background-size: cover;\r\n        filter: blur(2px);\r\n        z-index:-1;\r\n      }\r\n`;\r\n\r\nexport const RegistrationLegend = styled.legend`\r\n    margin-top: 6%;\r\n    color: #4178BE;\r\n    font-size: 3.5rem;\r\n    font-weight: 500;\r\n    text-align: center;\r\n`;\r\n\r\nexport const RegistrationArticle = styled.article`\r\n    background-color:white;\r\n    min-width: 300px;\r\n    min-height: 370px;\r\n    margin-top: 1.5%;\r\n    padding-top: 1%;\r\n    text-align: center;\r\n    border: 1px solid rgba(0, 0, 0, 0.1);\r\n    box-shadow: 4px 4px 8px 0 rgba(0, 0, 0, 0.4);\r\n    position: relative;\r\n    margin-right: auto;\r\n    margin-left: auto;\r\n    border-radius: 8px;\r\n`;\r\n\r\nexport const RegistrationMain = styled.main`\r\n    padding: 2rem;\r\n    color: rgba(0, 0, 0, 0.8);\r\n`;\r\n\r\nexport const RegistrationFieldSet = styled.fieldset`\r\n    border-style: solid;\r\n    border-width: 1px;\r\n    border-color: transparent;\r\n`;\r\n\r\nexport const RegistrationLabel = styled.label`\r\n    display: block;\r\n    font-weight: 600;\r\n    line-height: 1.5;\r\n    font-size: 0.875rem;\r\n`;\r\n\r\nexport const RegistrationInput = styled.input`\r\n    padding: 0.5rem;\r\n    border:none;\r\n    border-bottom: 1px solid lightgrey;\r\n    border-left: 1px solid lightgrey;\r\n    width: 94%;\r\n`;\r\n\r\nexport const RegistrationSubmit= styled.input`\r\n    color: #4178BE; \r\n    font-weight: bold;\r\n    padding:.5rem 1rem;\r\n    margin: 1rem 0;\r\n    border: 3px solid #4178BE;\r\n    background-color: transparent;\r\n    cursor: pointer;\r\n    font-size: 0.875rem;\r\n    width: 90%;\r\n    text-align: center;\r\n    :hover{\r\n        background-color: #4178BE;\r\n        color: #ffffff;\r\n    }\r\n`;\r\n\r\nexport const SignInLinkContainer = styled.div`\r\n    line-height: 1.5;\r\n    margin-top: 1rem;\r\n`;\r\n\r\nexport const SignInLink = styled.span`\r\n    font-size: 0.875rem;\r\n    text-decoration: none;\r\n    color: rgba(0, 0, 0, .5);\r\n    cursor: pointer;\r\n    :hover {\r\n        color: rgba(0 ,0, 0, 1);\r\n      }\r\n`;\r\n\r\nexport const NameFieldContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    margin-top: 1rem;\r\n    margin-left: 1%;\r\n`;\r\n\r\nexport const NameField = styled.div`\r\n    width: 45%;\r\n`;\r\n\r\nexport const Email = styled.div`\r\n    margin-top: 1.2rem;\r\n`;\r\n\r\nexport const Password = styled.div`\r\n    display:flex;\r\n    align-items: center;\r\n    margin-top: 1.2rem;\r\n    margin-bottom: 1.5rem;\r\n`;\r\n\r\nexport const PasswordRules = styled.div`\r\n    margin-left: .7rem;\r\n    margin-top: -1.2rem;\r\n    font-weight: 400;\r\n    text-align:left;\r\n    font-size:.65rem;\r\n    color:red;\r\n`\r\nexport const ToolTip = styled.div`\r\n    position: absolute;\r\n    transition: all 0.2s ease;\r\n    margin-left: 5%;\r\n    top: 35%;\r\n    opacity: .9;\r\n    @media screen and (max-width: 990px) {\r\n        display:none;\r\n  }\r\n`\r\n\r\nexport const InfoIcon = styled.img`\r\n    position: absolute;\r\n    opacity: .8;\r\n    bottom: 52%;\r\n    height: 22px;\r\n    width: 22px;\r\n    @media screen and (max-width: 800px) {\r\n        display:none;\r\n  }\r\n`","export default __webpack_public_path__ + \"static/media/info_icon.04fc9a9f.svg\";","export default __webpack_public_path__ + \"static/media/password_tooltip.b56f969b.svg\";","import React, { useState } from 'react';\r\nimport { useAlert } from 'react-alert';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { registrationStart, signInStart } from '../../redux/site-member/site-member.actions';\r\n\r\nimport { RegistrationPageBody, RegistrationArticle, RegistrationMain, RegistrationFieldSet, RegistrationLegend, \r\n  RegistrationInput, RegistrationSubmit, NameFieldContainer, NameField, Email, Password,PasswordRules, SignInLinkContainer, SignInLink,\r\n  ToolTip, InfoIcon\r\n} from './register.styles';\r\n\r\nimport infoIconSvg from '../../images/info_icon.svg';\r\nimport passwordTooltip from '../../images/password_tooltip.svg';\r\n\r\nconst RegistrationPage = ({ history, registrationStart, signInStart }) =>{\r\n\r\n  const [fname, setFname] = useState('');\r\n  const [lname, setLname] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [failedPassword, setFailedPassword] = useState(false);\r\n  const [toolTipVisibility, setToolTipVisibility] = useState(false);\r\n\r\n  const alert = useAlert();\r\n\r\n  const onMouseOverInfo = () => {\r\n    setToolTipVisibility(true); \r\n    setFailedPassword(false)\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    const {name, value} = event.target;\r\n    \r\n    switch(name) {\r\n        case 'fname':\r\n            setFname(value);\r\n            break;\r\n        case 'lname':\r\n            setLname(value);\r\n            break;\r\n        case 'email':\r\n              setEmail(value.toLowerCase());\r\n              break;\r\n        case 'password':\r\n            setPassword(value);\r\n            break;\r\n        case 'confirmPassword':\r\n            setConfirmPassword(value)\r\n            break;\r\n        default:\r\n            break;\r\n      };\r\n  };\r\n\r\n  const resetInput = () => {\r\n    setFname('');\r\n    setLname('');\r\n    setEmail('');\r\n    setPassword('');\r\n    setConfirmPassword('');\r\n  };\r\n\r\n  const timeout = (ms) => {\r\n    return new Promise(resolve => setTimeout(resolve, ms));\r\n  };\r\n\r\n  const onSubmitRegister = async() => {\r\n\r\n    if (!fname || !lname || !email || !password) {\r\n      alert.show('Missing required fields' , { type: 'error' , position:'top center'});\r\n      return;\r\n    };\r\n\r\n    if (password !== confirmPassword) {\r\n      alert.show('Passwords do not match' , { type: 'error' , position:'top center'});\r\n      return;\r\n    };\r\n\r\n    // regular expression: password must contain 8 characters minimum, one capital letter, and one number.\r\n    const VALIDATE_PWORD = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{8,}$/\r\n\r\n    if ( !VALIDATE_PWORD.test(password) ) {\r\n      setFailedPassword(true);\r\n      return;\r\n    };\r\n  \r\n    await registrationStart({ fname, lname, email, password });\r\n    await timeout(2000);\r\n    await signInStart({email, password});\r\n    await history.push('/home');\r\n    resetInput();\r\n  };\r\n\r\n  return (\r\n    <RegistrationPageBody>\r\n      <RegistrationLegend>Registration</RegistrationLegend>\r\n      <RegistrationArticle>\r\n        <RegistrationMain>\r\n          <RegistrationFieldSet>\r\n            <NameFieldContainer>\r\n              <NameField>\r\n                <RegistrationInput\r\n                  placeholder='First Name (required)'\r\n                  type='text'\r\n                  name='fname'\r\n                  id='fname'\r\n                  onChange={handleChange}\r\n                />\r\n              </NameField>\r\n\r\n              <NameField>\r\n                <RegistrationInput\r\n                  style = {{marginLeft:'15%'}}\r\n                  placeholder='Last Name (required)'\r\n                  type='text'\r\n                  name='lname'\r\n                  id='lname'\r\n                  onChange={handleChange}\r\n                />\r\n              </NameField>\r\n            </NameFieldContainer>\r\n\r\n            <Email>\r\n              <RegistrationInput\r\n                placeholder='Email (required)'\r\n                type='email'\r\n                name='email'\r\n                id='email'\r\n                onChange={handleChange}\r\n              />\r\n            </Email>\r\n              \r\n            <Password>\r\n              <RegistrationInput\r\n                placeholder='Password (required)'\r\n                type='password'\r\n                name='password'\r\n                id='password'\r\n                onChange={handleChange}\r\n              />\r\n              <div>\r\n              <InfoIcon \r\n                src={infoIconSvg} \r\n                alt='info-icon'\r\n                onMouseOver={onMouseOverInfo} \r\n                onMouseOut={() => setToolTipVisibility(false)}\r\n                />\r\n                { toolTipVisibility ?\r\n                  <ToolTip>\r\n                    <img src={passwordTooltip} alt='password tooltip' ></img>\r\n                  </ToolTip>\r\n              : null}\r\n              </div>\r\n            </Password>\r\n            <RegistrationInput\r\n              placeholder='Confirm Password (required)'\r\n              type='password'\r\n              name='confirmPassword'\r\n              id='confirmPassword'\r\n              onChange={handleChange}\r\n            />\r\n            {\r\n              failedPassword ?\r\n              <PasswordRules>\r\n                <span>Password must: </span>\r\n                <br/>\r\n                <span>be at least 8 characters long; contain at least one uppercase letter;</span>\r\n                <br/>\r\n                <span>Contain at least one lowercase letter; contain at least one number.</span>\r\n              </PasswordRules>\r\n              : null\r\n            }\r\n          </RegistrationFieldSet>\r\n            \r\n          <RegistrationSubmit\r\n            type='submit'\r\n            value='Register'\r\n            onClick={onSubmitRegister}\r\n          />\r\n          \r\n          <SignInLinkContainer>\r\n            <SignInLink onClick={() => history.push('/signin')} className='signin-link'>\r\n                Already have an account?\r\n            </SignInLink>\r\n          </SignInLinkContainer>\r\n          \r\n        </RegistrationMain>\r\n        \r\n      </RegistrationArticle>\r\n\r\n    </RegistrationPageBody>\r\n  );\r\n}\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  registrationStart: (userRegistrationInfo) => dispatch(registrationStart(userRegistrationInfo)),\r\n  signInStart: (emailAndPassword) => dispatch(signInStart(emailAndPassword)),\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(RegistrationPage);\r\n"],"sourceRoot":""}